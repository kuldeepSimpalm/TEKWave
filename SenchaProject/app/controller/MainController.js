/*
 * File: app/controller/MainController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('tekwave.controller.MainController', {
    extend: 'Ext.app.Controller',

    config: {
    },

    navigation: function(viewId) {
        /*
        Ext.getCmp('navMainView').animateActiveItem(Ext.getCmp(viewId), {
                            type: 'slide',
                            direction: 'down'
                        });
                        */
        Ext.getCmp('navMainView').animateActiveItem(Ext.getCmp(viewId), {
                            type: 'slide',
                            direction: 'right'
                        });
    },

    xmlToJson: function(xml) {
        var xmlToJson=[];
        // Create the return object
        	var obj = {};

        	if (xml.nodeType == 1) { // element
        		// do attributes
        		if (xml.attributes.length > 0) {
        		obj["attributes"] = {};
        			for (var j = 0; j < xml.attributes.length; j++) {
        				var attribute = xml.attributes.item(j);
        				obj["attributes"][attribute.nodeName] = attribute.value;//nodeValue
        			}
        		}
        	} else if (xml.nodeType == 3) { // text
        		obj = xml.nodeValue;
        	}

        	// do children
        	if (xml.hasChildNodes()) {
        		for(var i = 0; i < xml.childNodes.length; i++) {
        			var item = xml.childNodes.item(i);
        			var nodeName = item.nodeName;
        			if (typeof(obj[nodeName]) == "undefined") {
        				obj[nodeName] = xmlToJson(item);
        			} else {
        				if (typeof(obj[nodeName].push) == "undefined") {
        					var old = obj[nodeName];
        					obj[nodeName] = [];
        					obj[nodeName].push(old);
        				}
        				obj[nodeName].push(xmlToJson(item));
        			}
        		}
        	}

           // console.log('obj');

            // console.log(obj);
            // console.log('obj');
        	return obj;
    },

    nativeApp: function(widgetName) {
        document.addEventListener("deviceready", onDeviceReady, false);

        function onDeviceReady() {



        //alert('nativeApp- '+widgetName);
        if(widgetName==='Alarm Clock'){

            alarm('alarm');

        }else if(widgetName==='Weather'){
             window.plugins.ChildBrowser.showWebPage('http://www.weather.com',{ showLocationBar: false });


                                            //window.open(record.data.webViewURL, '_blank', 'location=yes');

            /*
            //window.open(url, "_blank")
                                         var ref = window.open(record.data.webViewURL, '_blank');
                                         ref.addEventListener('loadstart', function() { alert('start: ' + event.url); });
                                         ref.addEventListener('loadstop', function() { alert('stop: ' + event.url); });
                                         ref.addEventListener('exit', function() { alert(event.type); });
                                            ref.addEventListener("backbutton", function () {
                                            alert('backpressed');
                                                Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('homeCont'));

                                            });
        */


           //   openApp(com.apple.weather);
          //  openApp("com.google.android.calendar");
           // "com.android.calendar","com.android.calendar.AgendaActivity"
        }else if(widgetName==='Calendar' ){
         calShow();

        }


        //






        function calShow(){


        if (Ext.os.is.iOS){

        navigator.startApp.start("calshow://", function(message) {
            console.log(message); // => OK
        },
        function(error) {
            console.log('47', error);
        });
        }else if(Ext.os.name==='Android'){

        navigator.startApp.start("com.android.calendar", function(message) {
            console.log(message); // => OK
        },
        function(error) {
            console.log('47', error);
        });


        }
            }//End calShow

        //console.log(widgetName);



         /*
        if (Ext.os.is.iOS){

        navigator.startApp.start("alarm://", function(message) {
            console.log(message); // => OK
        },
        function(error) {
            console.log('47', error);
        });
        }else if(Ext.os.name==='Android'){

        navigator.startApp.check ("com.sec.android.app.clockpackage", function(message) {
            console.log(message); // => OK
            alert('message');
        },
        function(error) {
            console.log('47', error);
        });



        navigator.startApp.start ("com.sec.android.app.clockpackage", function(message) {
            console.log(message); // => OK
            alert('start');
        },
        function(error) {
            console.log('47', error);
        });

        }
        */






        function alarm(name){

            if(Ext.os.name==='Android'){
           var clockImpls = [ "com.htc.android.worldclock", "com.android.deskclock", "com.google.android.deskclock", "com.motorola.blur.alarmclock",
                       "com.sec.android.app.clockpackage", "com.sonyericsson.organizer"];

            /*

            var clockImpls = [
               {"HTC Alarm Clock": "com.htc.android.worldclock", 'htc': " com.htc.android.worldclock.WorldClockTabControl" },
               {"Standar Alarm Clock": "com.android.deskclock","Standar": "com.android.deskclock.AlarmClock"},
               {"Froyo Nexus Alarm Clock": "com.google.android.deskclock", "Nexus": "com.android.deskclock.DeskClock"},
               {"Moto Blur Alarm Clock": "com.motorola.blur.alarmclock", "Moto" : "com.motorola.blur.alarmclock.AlarmClock"},
               {"Samsung Galaxy Clock": "com.sec.android.app.clockpackage","Galaxy": "com.sec.android.app.clockpackage.ClockPackage"},
               { "Sony Ericsson Xperia Z": "com.sonyericsson.organizer", "Ericsson": "com.sonyericsson.organizer.Organizer_WorldClock" }
        ];
            */

            for(var i=0; i<clockImpls.length; i++){

                console.log(clockImpls[i]);
                checkApp(clockImpls[i]);
               // console.log(clockImpls[i][1]);



            }


            }else if(Ext.os.is.iOS){

            }


        }




        function checkApp(app){

            navigator.startApp.check (app, function(message) {
            console.log(message); // => OK
            //alert('message');
                openApp(app);
        },
        function(error) {
            console.log('47', error);
        });



        }

        function openApp(appName){

            navigator.startApp.start (appName, function(message) {
            console.log(message); // => OK
           // alert('start');
        },
        function(error) {
            console.log('47', error);
        });


        }



        }//End on Device ready
    }

});
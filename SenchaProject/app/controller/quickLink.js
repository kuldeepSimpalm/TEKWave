/*
 * File: app/controller/quickLink.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('tekwave.controller.quickLink', {
    extend: 'Ext.app.Controller',

    config: {
        control: {
            "#loginBtn": {
                tap: 'onLoginBtnTap'
            }
        }
    },

    onLoginBtnTap: function(button, e, eOpts) {


        // Changes XML to JSON
        function xmlToJson(xml) {
        //console.log('xml');
        	var obj = {};

        	if (xml.nodeType == 1) {

        		if (xml.attributes.length > 0) {
        		obj["attributes"] = {};
        			for (var j = 0; j < xml.attributes.length; j++) {
        				var attribute = xml.attributes.item(j);
        				obj["attributes"][attribute.nodeName] = attribute.value;//nodeValue
        			}
        		}
        	} else if (xml.nodeType == 3) { // text
        		obj = xml.nodeValue;
        	}

        	// do children
        	if (xml.hasChildNodes()) {
        		for(var i = 0; i < xml.childNodes.length; i++) {
        			var item = xml.childNodes.item(i);
        			var nodeName = item.nodeName;
        			if (typeof(obj[nodeName]) == "undefined") {
        				obj[nodeName] = xmlToJson(item);
        			} else {
        				if (typeof(obj[nodeName].push) == "undefined") {
        					var old = obj[nodeName];
        					obj[nodeName] = [];
        					obj[nodeName].push(old);
        				}
        				obj[nodeName].push(xmlToJson(item));
        			}
        		}
        	}
           // console.log('returning');
           // console.log(obj);
        	return obj;
        };
              /////////


        ////////////////////////////////////////////////////////////////



        var uid= Ext.getCmp('uid').getValue();
        var pw = Ext.getCmp('pwd').getValue();

        if(uid===''){
            Ext.Msg.alert('Error','Please Enter User Name!');
        }else if(pw===''){
              Ext.Msg.alert('Error','Please Enter Password!');
        }else{



        Ext.Viewport.setMasked({xtype:'loadmask', zindex : 5, indicator:true, message:'Processing...'});

        var tokenKey=tekwave.app.tokenKey;

        Ext.Ajax.request({
              //url: 'http://dev.tekcontrol-site.com:8080/tekwave-portlet/api/mobilelogin/leebee/leebee',
                url: tekwave.app.webService+'mobilelogin/'+uid+'/'+pw,
              //url: '../leebee_loginSuccess_1 Aug.xml',
              // method: 'POST',
              //   useDefaultXhrHeader: false,
              headers: {
                   //  tokenKey : tekwave.app.tokenValue
                   'TWApiAuthToken' : tekwave.app.tokenValue
                    },
              success: function(response, opts) {

                 // alert('login success');
                 // console.log(Ext.util.JSON.decode(response.responseText));


                   var text = response.responseText;
                  try { // code for IE
        			var xml = new ActiveXObject("Microsoft.XMLDOM");
        			xml.async = "false";
        		    // console.log(xml.loadXML(text));
                    //  alert('xml Dom');
        		}catch(error) { // code for Mozilla, Firefox, Opera, etc.
        			try {
        				var parser = new DOMParser();
        				var xml = parser.parseFromString(text,"text/xml");
                       // console.log(xml);
                     //   alert('dom parser');
        			}catch(error) {
        				alert(error.message);
        				return;
        			}
        		}

                  Ext.defer(function(){
                    // var loginResponse= tekwave.app.getControllerInstances()['tekwave.controller.quickLink'].xmlToJson(xml);

                  },50);


                  var loginResponse=xmlToJson(xml);
                   console.log(loginResponse );
                 //console.log(loginResponse.TCResponse.ResponseCode['#text'] );



                  var validLogin=false;
                  if(loginResponse.TCResponse.ResponseCode['#text']==='00'){
                              validLogin=true;
                             // Ext.Msg.alert('success');

                   }else if(loginResponse.TCResponse.ResponseCode['#text']==='01'){
                              validLogin=false;
                              Ext.Msg.alert(loginResponse.TCResponse.ResponseReason['#text']);
                   }


                  //Processing if Success true
                  if(validLogin===true){
                      console.log(loginResponse.TCResponse.User.userName['#text']);





                      //set UserName
                      if(loginResponse.TCResponse.User.userName['#text']){
                           Ext.getCmp('menuTitle').setTitle(loginResponse.TCResponse.User.userName['#text']);
                      }





                               var allSite=loginResponse.TCResponse.SiteList.Site;

        tekwave.app.getControllerInstances()['tekwave.controller.quickLink'].siteStore(allSite);



                      // WidgetSectionList
                      var allWidgetSection=loginResponse.TCResponse.WidgetSectionList.Section;
                     // console.log(allWidgetSection);
                   //   addWidgets(allWidgetSection); //Calling add widgets function
        tekwave.app.getControllerInstances()['tekwave.controller.quickLink'].addWidgets(allWidgetSection);





                      Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('homeCont'));

                  }   //end valid login







                  // console.log(response);
                  Ext.Viewport.setMasked(false);

            //

              },
                failure : function(err){
                    Ext.Viewport.setMasked(false);
                    Ext.Msg.alert('Error','Unable to Connect !');
                    console.log(err);
                }
        });//End Ajax Request Login API




        }//End Check uid and pw

        ////////////////////////////////////////////////////////////////


        function addWidgets(allWidgets){

        }//End addWidgets





        function createList(sectionName, store){


        }//End create list



        //Use Static Icons
        function checkaIcon(widgetId, widgetName, icon){

        }












        /*


        //Andorid
            //Working On Android
                  var x=response.responseXML.children[0].children;
                     console.log(xml);
                    console.log(x);
                     var validLogin=false;


                  for (var l=0; l<x.length; l++){
                     console.log(x[l].nodeName);//innerHTML, children, nodeName
                      console.log(x[l].innerHTML);
                      console.log(x[l].childNodes[0].data);
                      if(x[l].nodeName=='ResponseCode'){

                          if(x[l].childNodes[0].data==='00'){
                              validLogin=true;
                             // alert('success');

                          }else if(x[l].childNodes[0].data==='01'){
                              alert('Credential Invalid !');
                              validLogin=false;
                          }

                      }


                  }




                 //Success
                  if(validLogin===true){

                      for (var i=0; i<x.length; i++){


                          if(x[i].nodeName==='SiteList'){


                              Ext.define("SiteModel", {
                                extend: "Ext.data.Model",
                                    config: {
                                     fields: ['#text','siteId', 'SitePostsPerUser', 'SiteSettings', 'StaticModules', 'name', 'parentId', 'parentName', 'type']
                                    }
                            });

                          var siteStore = Ext.create('Ext.data.Store', {
                                    model: 'SiteModel',
                                   // data : [{"siteId" : 1}],
                                    id : 'siteSore'//,
                                    //autoLoad: true,
                                   //  defaultrootProperty: 'TCResponse',

                                });

                               for (var k=0; k<x[i].children.length; k++){
                                 // console.log(x[i].children[k]);
                                 // console.log(x[i].children[k].children);// all items of Site
                                  // var site=[];
                                 siteStore.add({
                                     'siteId' : x[i].children[k].attributes[0].value,
                                     'name' : x[i].children[k].children[0].childNodes[0].data,//childNodes[0].data, innerHTML
                                     'parentid' : x[i].children[k].children[1].childNodes[0].data,
                                     'parentname' : x[i].children[k].children[2].childNodes[0].data,
                                     'type' : x[i].children[k].children[3].childNodes[0].data,
                                     'SitePostsPerUser' : x[i].children[k].children[4].children,
                                     'StaticModules' : x[i].children[k].children[5].children,
                                     'SiteSettings ': x[i].children[k].children[6].children
                                               });
                                  siteStore.sync();

                              }////End k loop
                              Ext.getCmp('siteList').setStore(siteStore);
                              //console.log(siteStore);
                             // console.log(Ext.getCmp('siteList'));
                       }//End check siteList
                       else if (x[i].nodeName==='WidgetSectionList'){



                       }//End home screen Widgets
                        Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('homeCont'));

                      }//

                    //  alert('valid login');
                  }



        */
    },

    xmlToJson: function(xml) {
        xmlToJson(xml);

        console.log(xml);

        // Changes XML to JSON
        function xmlToJson(xml) {
        console.log('xml');
        	var obj = {};

        	if (xml.nodeType == 1) {

        		if (xml.attributes.length > 0) {
        		obj["attributes"] = {};
        			for (var j = 0; j < xml.attributes.length; j++) {
        				var attribute = xml.attributes.item(j);
        				obj["attributes"][attribute.nodeName] = attribute.value;//nodeValue
        			}
        		}
        	} else if (xml.nodeType == 3) { // text
        		obj = xml.nodeValue;
        	}

        	// do children
        	if (xml.hasChildNodes()) {
        		for(var i = 0; i < xml.childNodes.length; i++) {
        			var item = xml.childNodes.item(i);
        			var nodeName = item.nodeName;
        			if (typeof(obj[nodeName]) == "undefined") {
        				obj[nodeName] = xmlToJson(item);
        			} else {
        				if (typeof(obj[nodeName].push) == "undefined") {
        					var old = obj[nodeName];
        					obj[nodeName] = [];
        					obj[nodeName].push(old);
        				}
        				obj[nodeName].push(xmlToJson(item));
        			}
        		}
        	}
            console.log('returning');
            console.log(obj);
        	return obj;
        };
              /////////




    },

    addWidgets: function(allWidgets) {
          console.log(allWidgets);
          Ext.getCmp('homeCont').removeAll();

          Ext.define("widgetModel", {
               extend: "Ext.data.Model",
               config: {
                  fields: ['sectionName', 'sectionId','widgetId','icon',  'isQuickLink', 'quickLinkScreen', 'isDynamic', 'webViewURL', 'widgetName']
                 }
           });



            //console.log(allWidgets[m].Widgets);

            for (var m=0;m<allWidgets.length; m++){
               /*
                console.log('******');
                console.log(allWidgets[m].Widgets['widget']);
                console.log(allWidgets[m].Widgets);
                console.log(m);
                console.log(allWidgets[m].Widgets.widget);
                 console.log('******');
                */



                 var sectionName=allWidgets[m].sectionName['#text'];
                 var sectionId=allWidgets[m].attributes.sectionId;
                 var widgetStore = Ext.create('Ext.data.Store', {
                                    model: 'widgetModel',
                                    id : 'widgetModel_'+m//,
                                   });



                if(allWidgets[m].Widgets['widget']===undefined) {

                   // console.log(sectionName+ '\n'+ 'widgetModel_'+m);

                    //08/06/2014 Requirement Change Blank Widgets not need to display
                  //  createList(sectionName, 'widgetModel_'+m);//Creating Empty store



                }else if(allWidgets[m].Widgets !== undefined){

                     if(allWidgets[m].Widgets['widget'] !== undefined){

                         //console.log('------------');
                          //  console.log(allWidgets[m].Widgets.widget);
                         // console.log('------------');




                               var allWid=allWidgets[m].Widgets.widget;
                                //console.log(allWid.length);
                                 //console.log(allWid);

                             var widgetId,icon,  isQuickLink, quickLinkScreen,isDynamic, webViewURL, widgetName;


                         if(allWid.length===undefined){
                           //alert(allWid['icon']) ;

                                  if(allWid.attributes['widgetId'] && allWid.attributes['widgetId']!==undefined ){
                                        widgetId=allWid.attributes['widgetId'];
                                       }else{
                                            widgetId='';
                                       }



                                       if(allWid['quickLinkScreen'] && allWid['quickLinkScreen']!==undefined ){
                                        quickLinkScreen=allWid['quickLinkScreen']["#text"];
                                       }else{
                                            quickLinkScreen='';
                                       }


                                       if(allWid['isQuickLink'] && allWid['isQuickLink']!==undefined ){
                                        isQuickLink=allWid['isQuickLink']["#text"];
                                       }else{
                                            isQuickLink='';
                                       }

                                     if(allWid['isDynamic'] && allWid['isDynamic']!==undefined ){
                                        isDynamic=allWid['isDynamic']["#text"];
                                       }else{
                                            isDynamic='';
                                       }

                                       if(allWid['webViewURL'] && allWid['webViewURL']!==undefined ){
                                        webViewURL=allWid['webViewURL']["#text"];
                                       }else{
                                            webViewURL='';
                                       }

                                       if(allWid['widgetName'] && allWid['widgetName']!==undefined ){
                                        widgetName=allWid['widgetName']["#text"];
                                       }else{
                                            widgetName='';
                                       }




                                        if(allWid['icon'] && allWid['icon']!==undefined ){
                                        icon=allWid['icon']["#text"];
                                             icon='data:image/jpeg;base64,'+allWid['icon']["#text"];
                                         //   alert(icon);
                                      // icon='';
                                       }else{
                                           // icon='';
                                             icon=checkaIcon(widgetId, widgetName, icon);

                                       }


                                       widgetStore.add({
                                        'sectionName' :sectionName,
                                        'sectionId' : sectionId,
                                        'widgetId' : widgetId,
                                        'icon' : icon,//childNodes[0].data, innerHTML
                                        'isQuickLink' : isQuickLink,
                                        'quickLinkScreen' : quickLinkScreen,
                                        'isDynamic' :isDynamic,
                                        'webViewURL' : webViewURL,
                                        'widgetName' : widgetName
                                       });
                                      widgetStore.sync();

                         }else{

                               for (var n=0; n<allWid.length; n++){

                                       if(allWid[n].attributes.widgetId && allWid[n].attributes.widgetId!==undefined ){
                                        widgetId=allWid[n].attributes.widgetId;
                                       }else{
                                            widgetId='';
                                       }





                                       if(allWid[n]['quickLinkScreen'] && allWid[n]['quickLinkScreen']!==undefined ){
                                        quickLinkScreen=allWid[n]['quickLinkScreen']["#text"];
                                       }else{
                                            quickLinkScreen='';
                                       }

                                   if(allWid[n]['isQuickLink'] && allWid[n]['isQuickLink']!==undefined ){
                                        isQuickLink=allWid[n]['isQuickLink']["#text"];
                                       }else{
                                            isQuickLink='';
                                       }

                                        if(allWid[n]['isDynamic'] && allWid[n]['isDynamic']!==undefined ){
                                        isDynamic=allWid[n]['isDynamic']["#text"];
                                       }else{
                                            isDynamic='';
                                       }

                                       if(allWid[n]['webViewURL'] && allWid[n]['webViewURL']!==undefined ){
                                        webViewURL=allWid[n]['webViewURL']["#text"];
                                       }else{
                                            webViewURL='';
                                       }

                                       if(allWid[n]['widgetName'] && allWid[n]['widgetName']!==undefined ){
                                        widgetName=allWid[n]['widgetName']["#text"];
                                       }else{
                                            widgetName='';
                                       }



                                    if(allWid[n]['icon'] && allWid[n]['icon']!==undefined ){
                                       // icon=allWid[n]['icon']["#text"];
                                        //Encodeing to base64
                                        icon='data:image/jpeg;base64,'+allWid[n]['icon']["#text"];


                                    //  icon='data:image/jpeg;base64,'+'/9j/4AAQSkZJRgABAQAAAQABAAD//gA+Q1JFQVRPUjogZ2QtanBlZyB2MS4wICh1c2luZyBJSkcgSlBFRyB2NjIpLCBkZWZhdWx0IHF1YWxpdHkK/9sAQwAIBgYHBgUIBwcHCQkICgwUDQwLCwwZEhMPFB0aHx4dGhwcICQuJyAiLCMcHCg3KSwwMTQ0NB8nOT04MjwuMzQy/9sAQwEJCQkMCwwYDQ0YMiEcITIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy/8AAEQgAQgC8AwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A9xvr6GxtXmlcKqjJJ7CsQWfiG8H2hL2CySTlYJLfzGQdtxz19auR2JvtSS6uJN8MBzHFjjzP7x9cDGPzrbrijT9v789uiNG+TRHN/wBkeI/+g1af+Af/ANlR/ZHiP/oNWn/gH/8AZV0tFX9Tpdhe0kc5Bba1Z3CyXd7bXUByGCQ+Wyeh6nPpj3roQcqD7VV1BgtqxJA5HJOO9WU5RfpRSgqc3GO2gSd0mySiiiuogKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigChphyk3/XQ1erO0g5Sf8A66mtGufC/wAJF1PiYnaqGqapBpdt5suSScKg6sav1wfjq5K6jbRZ4WIt+Z/+tXZRgpzSZy4io6dNyW4l94jOoQvb3NlbSwMQSkgLA45HetvR/EcF5Its8YhkxhMH5T7e1cDBYalqMcl1Z3EMdvZr5lwroWaUf3V9OATn6U6xujHqFu4PKyqc/jXVKhTd0lqjzYYivFxcndM9F1LW0srgwIoZwAWJPSpdM1ZL9mjK7ZFGfqK57xHYySaiXtZYmmdAzwNIEb0yM8EcVJ4fgNit3dTTRPcRQk+TG4baOvJHGeK+disX9a1Xu/hY99uiqV76nZUVwg8fyf8APkn/AH2f8KW98dstyVtIUaEfxPnLf4V7f1ep2PP+t0rbndUlchP44t102OaGLdcuSDETwmO5PpRofi/7ffLaXUSo0nCOnQn0NT7Gdr2KWJpuSinuXdV8S/2bem3+zB8AHdvx1/Cqg8aDPNn/AORP/rVieL5dmvyDP8C/yrCEWpzL9ptYIZLGIgXLF8SJnoVHcetdMKNPkTaPPqV63tHGLPT9K1221MskYZJFGSjentWtXmHhm6K+IbUA/eJU/ka6nW/FcGlTG3hQTXA+8M4Vfr71jVoNT5YHXQxN6fNUOmqKaXyoXkxnapOPpXCR+PLoODJawsmeQCQa6m31W31bRprm3P8AyzYMp6qcdDUSozh8SNYYiFS6i9TJ/wCEzP8Az5j/AL+f/Wrp7eXz7eOXGN6hsemRXj/2j3rvdR8RNolhpwECy+bCDy2MYA/xrWtRSsoI5cPiZPmdR6I6qm1xcXj1DHKZbYK6rmNQ2dx9/Sm2HjgyXax3kMaQucb0J+X6+1Z+wqdjp+tUrrU7iiuFvPHTR3TJaQI0KnG585b3rodL1+21CxW4z5ZJIKk9DUujNK7Q/rNNvRkminMdx/12Na3esbQDmG5/67t/StiuLC/wYnZV+NiV5r8RS0Ot2rH7slv8n1Vjn/0Ja27zxHNBezRBxhHKjj3qfXtGtvFOgQxXNx9nudomt51I3RvjrjuOcEdxVYPGwnWcUnoZYnDt07Pqec2OryWaXMG5/s91E0Myo21tpGMqezDPBroNC8CeHdTjjvbLW9dYxsGaN7sZUjnDDbXC6jb32i6idO1NES4wTHJGcxzqP4kP9DyKuaDr02kavBcxyEJuCyr2ZO4r2akFUjzQep5VKTpS5ZrQ674gS7NfiGf+Xdf5mn+C5d9hrZ9LcH9Gqh8TJtviGDB4Nsp/8eaneA5d+m68c9LYfyapt+5RVv3zZzonJIAPJ4FXtV0l/D10LKS9ku2KCXzZAAeeo47ZBxXPJcfOvPeut+I8uzxFEPW2T+ZrVv30jCMFySZUtNJk1DT7vVFvJI0sduYVA2y7jzu+g6UaHcEa5p+Dz9oT/wBCFXvD0ufAWvtnoVrntBnz4h00Z63Mf/oQpJ35rlOCXI0dP44l2eJZR/0zT+VR6Tq1rbeG9UgmlAmm2rGndqq/EKbZ4slGf+WSfyrkZtQWEqGWVi3Ty4mf+QpRSdJcwSUlVbijsPC8+fElgPWT+hqjqN4ZtTupHbJaZjk/Wr/w/wBK1K+1yHUpbGe20+2DN5lwhQysQQAqnnAzkn2rH8UaPpunXtxBba/q813vJcAxiOM56Z25NSqidT3dSnQapLm01L2o6RJoiWzveSXIu4luB5gA8snqox2HGK6PwPcFrTWI88eQGx+DVwV1rE988YuLkytBGsag4+VQOK6z4fy701nnpaZ/nVVE1S1Cnb2l0jn/AD667xnJtsNEPrB/Ra89+0e9dt49l26boBz1tv6LTn8cSYR9yZmafpMmtJcyJeyWy2UJnOwA+YR0U57daomf5iPet3wFLvi1rnpZn+tcclxmRee9OLfNJEyguWJ0OqaQ/h66WykvZLtmRZfMkABG7qOO2QcVo6Hdutk4VuPMP8hTfiRLs8RQj/p2X+ZrM0S4/wBCfn/lof5CnD3oJscoJTaR6jok3l2l7KRkJMxx+FOh8QxTTxxCPl2C9fWsbTtWtorfULKdzDI8jqTt3FT0wRVO1tNPtrqGf+1mby3DbfIIzg/Wvi3WqKMI05Wtvt3PpuSLbbXoX7yPQ/tk3m2O6Tedx81hk5571xnxNkjju9IEK7IvsY2LnOBnpXS3Vrp1zdzT/wBrOvmOW2+QTjP41ifFPSJj4f0rVbUPPb2kXlTOq8hCBhyPTI/DNd+UyksQ3Nq3yObGQvSSVzK8Hafaa3oHiG3u1VvKhjmiZusbgOQwPauO+0DPXvVCDUp4Y5Bb3EiJKuxxG5AdfQ46ip9JtbnW9XttMskMlxO4XC87F7s3oB1r6ayhzSb0PIs5WjY7z4lT/wDE6085+9YRn9TVr4dy7tK8SH0tR/J6zPi9JHa+KrSEMFCWSAAntuapvhhOsmkeKCHU7bMHg+z1i2vYo1Uf3hx6XH7xee9dr8UpdniiEf8ATon82rzWO7TzF/eL19a7z4u3Cx+LoFLqD9ij4J92rSTXtI/MhQ9xmj4blz8OfEjehX+lcz4dnz4m0sZ63cX/AKGK2PCtwrfC7xU4dcKU5z9K5PwxdI3ivSB5i83kI6/7YqYte+Dh8J2HxNl2eM5h/wBMo/5V1Hwgk32Op+0kf8jXE/Fe4WPx1OpdQfJj4J9q6z4KSrLp+r7WBxLH0Psaipb2C+RpCP7656q33TXzNqN0X1O7ZjyZnJP/AAI19MkZBFfK+tCSy17ULSYFJYZ3VlPXrwfxGDWWEau0XiotpHWeKdOtNG0vQY7aNQ9xa/aJnxzI7YJJP44HtWt8NZd6a97WZP8AOvObzWb2/ht2vLh5IYE8iBn6AL/CPXGR+ldx8LJ1kTxFh1OLAng/WuielKzf9XMYq87nI/aPeu++I0uzS/DZ9bT/ANlWvK/taf8APRfzr0j4nTrHpHhUlwN1lnk/7KU5te0iEYe5In+HMu6LXvaxP9a4iO4/erz/ABCuq+GE6yQ+I8Opxp7Hg/WuAjvE81P3i/eH8VEWueRMoe7E9K+KUuzxNAP+nVP5msrQbj/QX5/5an+Qqx8X7hY/FlupdQfsadT7tWL4eu0/s9/3i/609/YVVJr2aHOHvs9I8f28A1C2kEMYd1Xe20Zbnue9cVsX+6Pyoor4at8bPoafwoNi/wB0flXtWkKp8LWIwMfY07f7Ioorty74mZYjZHzf8RbO1s/Fc8drbQwJvPyxIFHX0Fey/C+ytLXwiLi3tYYppMb5I4wrN9SOTRRX0E/gPNj8Rf8AE2j6ZqGsQy3unWdzILfG6aBXPU9yKf4f0fTLPT9QFrp1nAJYAJPKgVd4weuBzRRWX2S+pkr4W8PZX/iQ6X1H/LnH/hWx4j0PSb/V45bzS7K5k8kLvmt0c4yeMkUUVT3F0GWWjaXB4e1C1h02zjt5iPMiSBQj/UAYNZmm+HdDi1CCWPRtPSSO5jKOtqgKnI6HHFFFHcOxpeINC0e+1Ca4vNKsbifyR+8mt0dunqRmr3hLTLCws5/sdjbW29hv8mJU3cd8DmiipfwDW50fevLPi3ptjJHb3L2Vs05wplaJS2PTOM0UVNLcqexrnQNGuNA0iObSbCRI432K9shC5YZwCOKt6Do+l2A1D7Hptnb+ZbYfyYFTcOeuBzRRWj2IW5lDwt4e2j/iQ6X/AOAcf+Fa+v6Ppl5p2ni606znEVuRH5sCtsGF6ZHFFFD3BbEegaPpdml/9l02zg8y22v5UCruHPBwOaz08LeHsr/xIdL6/wDPnH/hRRQHQ1vEmh6Tf6vFLeaXZXMnkhd81ujnGTxkjpVfSPDmhC0YDRdOHz/8+qeg9qKKcNhS3P/Z';
                                      //  console.log(icon);

                                     // icon='';//need to png or jpg image in place of numbers from api response
                                       }else{
                                         //   icon='';

                                           //icon=checkaIcon(widgetId, widgetName, icon);
                                     icon=  tekwave.app.getControllerInstances()['tekwave.controller.quickLink'].checkaIcon(widgetId, widgetName, icon);

                                       }


                                       widgetStore.add({
                                        'sectionName' :sectionName,
                                        'sectionId' : sectionId,
                                        'widgetId' : widgetId,
                                        'icon' : icon,//childNodes[0].data, innerHTML
                                        'quickLinkScreen' : quickLinkScreen,
                                        'isQuickLink' : isQuickLink,
                                        'isDynamic' :isDynamic,
                                        'webViewURL' : webViewURL,
                                        'widgetName' : widgetName
                                       });
                                      widgetStore.sync();
                                }////End n loop

                             }//end check widget length undefined

                             //createList(sectionName, 'widgetModel_'+m);
        tekwave.app.getControllerInstances()['tekwave.controller.quickLink'].createList(sectionName, 'widgetModel_'+m);

                     }//Widgets avl. in Widgets tag



                }////check undefined






            }//End M loop

    },

    createList: function(sectionName, store) {
            console.log(sectionName);
           // console.log(Ext.getStore(store));

            Ext.getCmp('homeCont').add( {
                                xtype: 'label',
                                cls: [
                                    'titleFont',
                                    'fontFamilyCath'
                                ],
                                html: sectionName
                            });

             Ext.getCmp('homeCont').add({
                          xtype: 'dataview',
                                height: 120,
                                id: 'homeList'+store,
                              //  itemId: 'mydataview3',
                                scrollable: {
                                    direction: 'horizontal',
                                    directionLock: true
                                },
                                inline: {
                                    wrap: false
                                },
                                itemTpl: Ext.create('Ext.XTemplate',
                                    '<div align="center" class= "listHead" style="">',
                                    '    <div  class="listSection" style="">',
                                    '        <p class="dataViewFontCls fontFamilyCath">{data1} &nbsp</p> ',
                                    '        <img class="homeList" style="border : none;" src="{[this.icon(values.icon)]}" />',
                                    '        <p class="dataViewFontCls fontFamilyCath">{widgetName}</p>',
                                    '    </div>',
                                    '    <div  class="smallFont2 fontFamilyCath">',
                                    '        {widgetName}',
                                    '    </div>',
                                    '</div>',
                                    {
                                     icon: function(icon) {
                                         //Tracing Static Icons



                                        //console.log('--  icon->> '+icon);
                                            return icon;
                                        }
                                }),
                                store: store,//store, MyXmlStore
                                emptyText: 'No Item Found !',
                               // emptyText:'No Item Found !',
                                listeners: {
                                    itemtap: function(dataview, index, target, record,e, eOpts) {

                                        console.log(record);
                                        if(record.data.isDynamic==='true' && record.data.webViewURL!==''){
                                            //alert(record.data.webViewURL);

                                            document.addEventListener("deviceready", onDeviceReady, false);

                                            // Cordova is ready

                                        function onDeviceReady() {
                                            // alert('d Ready\n'+record.data.webViewURL);
                                            window.plugins.ChildBrowser.showWebPage(record.data.webViewURL,{ showLocationBar: false });


                                            //window.open(record.data.webViewURL, '_blank', 'location=yes');

                                           //window.open(url, "_blank")
                                            /*
                                         var ref = window.open(record.data.webViewURL, '_blank');
                                         ref.addEventListener('loadstart', function() { alert('start: ' + event.url); });
                                         ref.addEventListener('loadstop', function() { alert('stop: ' + event.url); });
                                         ref.addEventListener('exit', function() { alert(event.type); });
                                            ref.addEventListener("backbutton", function () {
                                            alert('backpressed');
                                                Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('homeCont'));

                                            });
                                            */

                                        }

                                          //  var ref = window.open(record.data.webViewURL, '_blank', 'location=yes');
                                    //    window.open(record.data.webViewURL, '_blank', 'location=yes');





                                        }else if(record.data.widgetId==="5000"){
                                            Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('allMsgCont'));
                                        }else if(record.data.widgetId==="5001"){
                                            Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('announsMentsCont'));
                                        }else if(record.data.isQuickLink==='true' && record.data.quickLinkScreen!==''){
                                              var createForm=Ext.getStore('formStaticField').findRecord('quickLinkScreen', record.data.quickLinkScreen);

                                            console.log(createForm);
                                            if(createForm!==null){
                                               tekwave.app.getControllerInstances()['tekwave.controller.staticForm'].createStaticForm(createForm);

                                            }

                                         //   tekwave.app.getControllerInstances()['tekwave.controller.staticForm'].onStaticFormListItemTap(createForm);

                                        }else{
                                            //Calling native device application like, alarm, wheater

                                            tekwave.app.getControllerInstances()['tekwave.controller.MainController'].nativeApp(record.data.widgetName);


                                        }



                                    },//End itemTap
                                    afterrender : function(cmp){
                                        //alert();
                                       cmp.refresh();
                                    }
                                  }//end listners
                               });

            Ext.defer(function(){
               // console.log('homeList'+store);
                 //Ext.getCmp('homeList'+store).refresh();
            },400);

    },

    checkaIcon: function(widgetId, widgetName, icon) {
         // console.log(widgetId, widgetName, icon);

            var ico;
            if(widgetId==='5003'){
                ico='img/img/icon_weather.png';
            }else  if(widgetId==='5004'){
                ico='img/img/icon_clock.png';
            }
            else  if(widgetId==='5005'){
                ico='';
            }
             else  if(widgetId==='5000'){
                ico='img/img/icon_messages.png';
            }else  if(widgetId==='5001'){
                ico='img/img/icon_announcements.png';
            }else  if(widgetId==='5002'){
                ico='img/img/icon_announcements.png';
            }


            return ico;



    },

    siteStore: function(allSite) {
        var leftColor, no, newNo;
        newNo=0;
        //alert(allSite.length);



        //SITE/POST
        Ext.define("SiteModel", {
              extend: "Ext.data.Model",
              config: {
                 fields: ['#text','leftColor', 'siteId', 'SitePostsPerUser', 'SiteSettings', 'StaticModules', 'name', 'parentId', 'parentName', 'type']
                  }
        });

        var siteStore = Ext.create('Ext.data.Store', {
            model: 'SiteModel',
            // data : [{"siteId" : 1}],
            id : 'siteSore'//,
            //autoLoad: true,
            //  defaultrootProperty: 'TCResponse',
        });


        for (var k=0; k<allSite.length; k++){



                 newNo=newNo+1;
                //console.log(newNo);
                //console.log(k);

                if (newNo===4){
                    newNo=0;
                }


                if(newNo===0){
                    leftColor='red';
                   //  console.log(newNo+'--'+leftClr);
                }else if(newNo===1){
                    leftColor='blue';
                   //  console.log(newNo+'--'+leftClr);
                }
                else if(newNo===2){
                    leftColor='green';
                   //  console.log(newNo+'--'+leftClr);
                }else if(newNo===3){
                    leftColor='yellow';
                   //   console.log(newNo+'--'+leftClr);
                }







        //console.log(/*****/);
        //console.log(allSite[k].attributes);
        //console.log(/*****/);


                                 siteStore.add({
                                     'leftColor' : leftColor,
                                     'siteId' : allSite[k].attributes.siteId,
                                     'name' : allSite[k].name['#text'],//childNodes[0].data, innerHTML
                                     'parentid' :allSite[k].parentId['#text'],
                                     'parentname' : allSite[k].parentName['#text'],
                                     'type' : allSite[k].type['#text'],
                                     'SitePostsPerUser' : allSite[k].SitePostsPerUser.Post,
                                     'StaticModules' : allSite[k].StaticModules,
                                     'SiteSettings ': allSite[k].SiteSettings
                                               });
                                  siteStore.sync();


        }////End k loop
        Ext.getCmp('siteList').setStore(siteStore);

        //console.log(siteStore);

    }

});
/*
 * File: app/view/MyNavigationView.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('tekwave.view.MyNavigationView', {
    extend: 'Ext.navigation.View',

    requires: [
        'tekwave.view.MyDataView11',
        'Ext.navigation.Bar',
        'Ext.Button',
        'Ext.Label',
        'Ext.Img',
        'Ext.dataview.List',
        'Ext.XTemplate',
        'Ext.carousel.Carousel',
        'Ext.form.Panel',
        'Ext.Spacer',
        'Ext.field.Radio',
        'Ext.field.DatePicker',
        'Ext.picker.Date',
        'Ext.field.TextArea',
        'Ext.field.Password'
    ],

    config: {
        id: 'navMainView',
        navigationBar: {
            cls: 'titleBar',
            docked: 'top',
            hidden: true
        },
        items: [
            {
                xtype: 'container',
                id: 'dailyRprtCont',
                items: [
                    {
                        xtype: 'titlebar',
                        cls: [
                            'titleBar',
                            'fontFamilyCath'
                        ],
                        docked: 'top',
                        title: 'Daily Report',
                        items: [
                            {
                                xtype: 'button',
                                handler: function(button, e) {
                                    tekwave.app.getControllerInstances()['tekwave.controller.MainController'].navigation('menuCont');

                                },
                                height: 30,
                                html: '<img src="img/img/btn_menu.png" width="80%" height="80%" />',
                                id: 'dailyReprtMenuBtn',
                                itemId: 'mybutton21',
                                ui: 'plain',
                                width: 50,
                                text: ''
                            }
                        ]
                    },
                    {
                        xtype: 'panel',
                        height: '10%',
                        hidden: true,
                        id: 'formCatTag',
                        layout: 'hbox',
                        scrollable: 'horizontal',
                        items: [
                            {
                                xtype: 'button',
                                handler: function(button, e) {

                                },
                                cls: 'lebelFont themeFontBlue fontFamilyCath',
                                ui: 'plain',
                                text: 'General'
                            },
                            {
                                xtype: 'button',
                                cls: 'lebelFont  fontFamilyCath',
                                ui: 'plain',
                                text: 'Questions'
                            }
                        ]
                    },
                    {
                        xtype: 'panel',
                        cls: 'scrollerBar',
                        height: '10%',
                        id: 'topBarItem',
                        padding: 10,
                        layout: {
                            type: 'hbox',
                            align: 'center'
                        },
                        items: [
                            {
                                xtype: 'label',
                                cls: 'lebelFont themeFontBlue fontFamilyCath',
                                html: 'General',
                                style: 'padding-bottom: 4%;',
                                width: '25%'
                            },
                            {
                                xtype: 'label',
                                cls: 'lebelFont fontFamilyCath',
                                html: 'Questions',
                                style: 'padding-bottom: 4%;',
                                width: '25%'
                            },
                            {
                                xtype: 'label',
                                cls: 'lebelFont fontFamilyCath',
                                html: 'Signature',
                                style: 'padding-bottom: 4%;',
                                width: '25%'
                            },
                            {
                                xtype: 'label',
                                cls: 'lebelFont fontFamilyCath',
                                html: 'Inspector',
                                style: 'padding-bottom: 4%;',
                                width: '25%'
                            }
                        ]
                    },
                    {
                        xtype: 'panel',
                        docked: 'top',
                        height: '20%',
                        hidden: true,
                        margin: 5,
                        width: '100%',
                        layout: {
                            type: 'hbox',
                            align: 'center'
                        },
                        items: [
                            {
                                xtype: 'image',
                                height: '100%',
                                width: '50%',
                                src: 'img/logo.png'
                            },
                            {
                                xtype: 'button',
                                handler: function(button, e) {
                                    console.log(this);
                                    console.log(this.parent.items.items[0]);




                                    document.addEventListener("deviceready",onDeviceReady,false);

                                    // PhoneGap is ready to be used!
                                    //
                                    function onDeviceReady() {
                                        alert ('device ready');




                                        var captureSuccess = function(mediaFiles) {
                                            var i, path, len;
                                            for (i = 0, len = mediaFiles.length; i < len; i += 1) {
                                                path = mediaFiles[i].fullPath;
                                                // do something interesting with the file
                                            }
                                        };

                                        // capture error callback
                                        var captureError = function(error) {
                                            navigator.notification.alert('Error code: ' + error.code, null, 'Capture Error');
                                        };

                                        // start image capture
                                        navigator.device.capture.captureImage(captureSuccess, captureError, {limit:2});


                                    }

                                },
                                cls: 'blueBtn',
                                ui: 'plain',
                                text: 'Add New Image'
                            }
                        ]
                    },
                    {
                        xtype: 'list',
                        height: 40,
                        hidden: true,
                        width: '95%',
                        inline: {
                            wrap: false
                        },
                        itemTpl: [
                            '<div class="talk-bubble-blue2  border  btm-right-in2 ">',
                            '                   <div  class="talktext2" > {type}  ',
                            '                 </div>'
                        ],
                        store: 'dailyTask',
                        onItemDisclosure: false
                    },
                    {
                        xtype: 'dataview',
                        height: 40,
                        hidden: true,
                        id: 'itemList',
                        itemId: 'mydataview12',
                        style: 'background: white;',
                        scrollable: 'horizontal',
                        inline: {
                            wrap: false
                        },
                        itemTpl: [
                            '',
                            '<div class="talk-bubble-blue2  border  btm-right-in2 ">',
                            '                   <div  class="talktext2" > {type}  ',
                            '                 </div>',
                            '<!-- ',
                            '<div style="background : gray; widht:25%;  padding: 4px; " > {type}</div>',
                            'style="content: \' \';',
                            ' position: absolute;',
                            '   ',
                            'width: 0;',
                            'height: 0;',
                            'left: 28px;',
                            'right: auto;',
                            'top: auto;',
                            ' bottom: -12px; ',
                            'border: 12px solid;',
                            'border-color: rgba(128, 128, 128, 1) transparent rgba(145, 59, 59, 0) rgba(128, 128, 128, 0);',
                            '"',
                            '-->'
                        ],
                        store: 'dailyTask'
                    },
                    {
                        xtype: 'carousel',
                        height: '90%',
                        itemId: 'mycarousel',
                        indicator: false,
                        items: [
                            {
                                xtype: 'formpanel',
                                cls: [
                                    'backgrounWhite',
                                    'fontFamilyCath'
                                ],
                                height: '100%',
                                itemId: 'myformpanel',
                                padding: 5,
                                layout: 'vbox',
                                scrollable: 'vertical',
                                items: [
                                    {
                                        xtype: 'textfield',
                                        margin: 5,
                                        width: '80%',
                                        clearIcon: false,
                                        label: 'Employee No. ',
                                        labelWidth: '50%',
                                        placeHolder: 'Type Name...'
                                    },
                                    {
                                        xtype: 'checkboxfield',
                                        hidden: false,
                                        width: '90%',
                                        label: 'LAble',
                                        labelAlign: 'right',
                                        labelWidth: '90%'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: 4,
                                        width: 50
                                    },
                                    {
                                        xtype: 'radiofield',
                                        id: 'sectionOne',
                                        width: '80%',
                                        label: 'Supervisor Stamp',
                                        labelAlign: 'right',
                                        labelWidth: '90%',
                                        name: 'sectionOne'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: 5,
                                        width: 50
                                    },
                                    {
                                        xtype: 'radiofield',
                                        width: '80%',
                                        label: 'Branch Manager Stamp',
                                        labelAlign: 'right',
                                        labelWidth: '90%',
                                        name: 'sectionOne'
                                    },
                                    {
                                        xtype: 'panel',
                                        layout: 'hbox'
                                    },
                                    {
                                        xtype: 'datepickerfield',
                                        width: '80%',
                                        label: 'Date :',
                                        placeHolder: 'mm/dd/yyyy',
                                        picker: {
                                            yearFrom: 2010,
                                            yearTo: 2025
                                        }
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: 5,
                                        width: 50
                                    },
                                    {
                                        xtype: 'selectfield',
                                        width: '80%',
                                        label: 'Day :',
                                        value: 'Friday',
                                        placeHolder: 'Day..',
                                        options: [
                                            {
                                                text: 'Monday',
                                                value: 'Monday'
                                            },
                                            {
                                                text: 'Tuesday',
                                                value: 'Tuesday'
                                            },
                                            {
                                                text: 'Wednesday',
                                                value: 'Wednesday'
                                            },
                                            {
                                                text: 'Thursday',
                                                value: 'Thursday'
                                            },
                                            {
                                                text: 'Friday',
                                                value: 'Friday'
                                            },
                                            {
                                                text: 'Saturday',
                                                value: 'Saturday'
                                            },
                                            {
                                                text: 'Sunday',
                                                value: 'Sunday'
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'panel',
                                        width: '100%',
                                        layout: {
                                            type: 'hbox',
                                            align: 'center'
                                        }
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: 5,
                                        width: 10
                                    },
                                    {
                                        xtype: 'selectfield',
                                        itemId: 'myselectfield2',
                                        width: '80%',
                                        label: 'Shift :',
                                        placeHolder: 'HH : MM'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: 5,
                                        width: 10
                                    },
                                    {
                                        xtype: 'selectfield',
                                        itemId: 'myselectfield16',
                                        width: '80%',
                                        label: 'To :',
                                        placeHolder: 'HH : MM'
                                    },
                                    {
                                        xtype: 'panel',
                                        width: '100%',
                                        layout: {
                                            type: 'hbox',
                                            align: 'center'
                                        }
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: 4
                                    },
                                    {
                                        xtype: 'radiofield',
                                        width: '50%',
                                        label: 'Supervisor Initials',
                                        labelAlign: 'right',
                                        labelWidth: '80%',
                                        name: 'sectwo'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: 4
                                    },
                                    {
                                        xtype: 'selectfield',
                                        width: '80%',
                                        label: 'Relived :',
                                        name: 'key-recived-from--',
                                        placeHolder: 'Select'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: 4,
                                        width: 50
                                    },
                                    {
                                        xtype: 'textfield',
                                        width: '80%',
                                        clearIcon: false,
                                        label: 'Employee No. ',
                                        labelWidth: '50%',
                                        placeHolder: 'Type Name...'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: 4,
                                        width: 50
                                    },
                                    {
                                        xtype: 'textfield',
                                        width: '80%',
                                        clearIcon: false,
                                        label: 'Equipment Serial No. and Type:',
                                        labelAlign: 'top',
                                        labelWidth: '50%',
                                        placeHolder: 'Type Name...'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: 4,
                                        width: 50
                                    },
                                    {
                                        xtype: 'selectfield',
                                        width: '90%',
                                        label: 'Relived By :',
                                        name: 'key-recived-from--',
                                        placeHolder: 'Select'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: 4,
                                        width: 50
                                    },
                                    {
                                        xtype: 'label',
                                        cls: 'x-form-label',
                                        hidden: true,
                                        html: '<span>Persons recieving and passing keys or equipment must initial appropirate boxes and explain any discrepencies by adding activity.</span>'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: 4,
                                        width: 50
                                    },
                                    {
                                        xtype: 'textfield',
                                        width: '80%',
                                        clearIcon: false,
                                        label: 'Employee No. ',
                                        labelWidth: '50%',
                                        placeHolder: 'Type Name...'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: 4,
                                        width: 50
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: 4,
                                        width: 50
                                    },
                                    {
                                        xtype: 'label',
                                        cls: 'lebelFont themeFontBlue fontFamilyCath',
                                        html: 'Slide to next page >>',
                                        style: 'text-align: center;'
                                    }
                                ],
                                listeners: [
                                    {
                                        fn: function(element, eOpts) {
                                            //Ext.getCmp(element.id).showBy(Ext.getCmp('topBarItem'));
                                            //console.log(Ext.getStore('formStaticField'));
                                        },
                                        event: 'painted'
                                    }
                                ]
                            },
                            {
                                xtype: 'formpanel',
                                cls: 'fontFamilyCath',
                                padding: 10,
                                items: [
                                    {
                                        xtype: 'mydataview11',
                                        hidden: true
                                    },
                                    {
                                        xtype: 'panel',
                                        margin: 5,
                                        layout: {
                                            type: 'hbox',
                                            align: 'center'
                                        },
                                        items: [
                                            {
                                                xtype: 'label',
                                                cls: 'forgotBtnCls',
                                                html: '1. Tours, Stations Missed :',
                                                width: '80%'
                                            },
                                            {
                                                xtype: 'selectfield',
                                                width: '20%',
                                                labelWidth: '0%',
                                                name: 'sel',
                                                value: 'Yes',
                                                options: [
                                                    {
                                                        text: 'Yes',
                                                        value: 'Yes'
                                                    },
                                                    {
                                                        text: 'No',
                                                        value: 'No'
                                                    },
                                                    {
                                                        text: 'N/A',
                                                        value: 'N/A'
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'panel',
                                        margin: 5,
                                        layout: {
                                            type: 'hbox',
                                            align: 'center'
                                        },
                                        items: [
                                            {
                                                xtype: 'label',
                                                cls: 'forgotBtnCls',
                                                html: '2. New Instructions Recived :',
                                                width: '80%'
                                            },
                                            {
                                                xtype: 'selectfield',
                                                width: '20%',
                                                labelWidth: '0%',
                                                name: 'sel',
                                                value: 'Yes',
                                                options: [
                                                    {
                                                        text: 'Yes',
                                                        value: 'Yes'
                                                    },
                                                    {
                                                        text: 'No',
                                                        value: 'No'
                                                    },
                                                    {
                                                        text: 'N/A',
                                                        value: 'N/A'
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'panel',
                                        margin: 5,
                                        layout: {
                                            type: 'hbox',
                                            align: 'center'
                                        },
                                        items: [
                                            {
                                                xtype: 'label',
                                                cls: 'forgotBtnCls',
                                                html: '3. New Instruction Passed On :',
                                                width: '80%'
                                            },
                                            {
                                                xtype: 'selectfield',
                                                width: '20%',
                                                labelWidth: '0%',
                                                name: 'sel',
                                                value: 'Yes',
                                                options: [
                                                    {
                                                        text: 'Yes',
                                                        value: 'Yes'
                                                    },
                                                    {
                                                        text: 'No',
                                                        value: 'No'
                                                    },
                                                    {
                                                        text: 'N/A',
                                                        value: 'N/A'
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'panel',
                                        margin: 5,
                                        layout: {
                                            type: 'hbox',
                                            align: 'center'
                                        },
                                        items: [
                                            {
                                                xtype: 'label',
                                                cls: 'forgotBtnCls',
                                                html: '4. Revied Changes in Mission Partnership Statement documents :',
                                                width: '80%'
                                            },
                                            {
                                                xtype: 'selectfield',
                                                width: '20%',
                                                labelWidth: '0%',
                                                name: 'sel',
                                                value: 'Yes',
                                                options: [
                                                    {
                                                        text: 'Yes',
                                                        value: 'Yes'
                                                    },
                                                    {
                                                        text: 'No',
                                                        value: 'No'
                                                    },
                                                    {
                                                        text: 'N/A',
                                                        value: 'N/A'
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                xtype: 'formpanel',
                                cls: 'fontFamilyCath',
                                padding: 10,
                                scrollable: 'vertical',
                                layout: {
                                    type: 'vbox',
                                    align: 'center'
                                },
                                items: [
                                    {
                                        xtype: 'label',
                                        html: 'FOR INSPECTOR\'s USE ONLY',
                                        style: 'font-size : 14px; font-weight : 400;'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: 4,
                                        width: 50
                                    },
                                    {
                                        xtype: 'checkboxfield',
                                        width: '100%',
                                        label: 'Inspection ?',
                                        labelAlign: 'right',
                                        labelWidth: '80%'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: 4,
                                        width: 50
                                    },
                                    {
                                        xtype: 'datepickerfield',
                                        width: '100%',
                                        label: 'In Date :',
                                        placeHolder: 'mm/dd/yyyy'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: 4,
                                        width: 5
                                    },
                                    {
                                        xtype: 'datepickerfield',
                                        width: '100%',
                                        label: 'Out Date :',
                                        placeHolder: 'mm/dd/yyyy'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: 4,
                                        width: 5
                                    },
                                    {
                                        xtype: 'label',
                                        html: 'Learning and Development Give By:',
                                        style: 'font-size : 12px;',
                                        width: '100%'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: 4,
                                        width: 5
                                    },
                                    {
                                        xtype: 'selectfield',
                                        id: 'seleFld',
                                        itemId: 'myselectfield12',
                                        width: '100%',
                                        placeHolder: 'Select Person..'
                                    },
                                    {
                                        xtype: 'label',
                                        html: 'Learning and Development Topic :',
                                        style: 'font-size : 12px;',
                                        width: '100%'
                                    },
                                    {
                                        xtype: 'textfield',
                                        width: '100%',
                                        labelAlign: 'right',
                                        labelWidth: '0%'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: 4,
                                        width: 5
                                    },
                                    {
                                        xtype: 'label',
                                        html: 'Mission Partnership Statement Document Reviewd and/or Comments :',
                                        style: 'font-size : 12px;',
                                        width: '100%'
                                    },
                                    {
                                        xtype: 'textareafield',
                                        width: '100%'
                                    }
                                ]
                            },
                            {
                                xtype: 'formpanel',
                                cls: 'fontFamilyCath',
                                padding: 10,
                                scrollable: 'vertical',
                                layout: {
                                    type: 'vbox',
                                    align: 'center'
                                },
                                items: [
                                    {
                                        xtype: 'label',
                                        html: '<spam>IMPORTANT</spam>'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: 4,
                                        width: 50
                                    },
                                    {
                                        xtype: 'label',
                                        html: 'By signing below, I hereby certify that: (1) I have accurately completed this report, (2) except as noted above, I have not suffered an illness or injury during my shift, (3) I understand that I am not to perform any duties that are not set forth in the Mission Partnership Statements document, and (4) except as noted above. I have not performed any duties for the client, its employees or others that are not set forth in the Mission Partnership Statement,g) document, and I hereby reaffirm my responsibility to comply with all applicable Guardsmark and client Safety Rules. ',
                                        style: 'font-size : 12px'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: 4,
                                        width: 50
                                    },
                                    {
                                        xtype: 'label',
                                        html: 'True Hours Worked\' (see below)',
                                        style: 'font-size : 12px;',
                                        width: '100%'
                                    },
                                    {
                                        xtype: 'selectfield',
                                        id: 'seleFld1',
                                        itemId: 'myselectfield12',
                                        width: '100%',
                                        label: 'Time'
                                    },
                                    {
                                        xtype: 'label',
                                        html: 'By Clicking Below you have read and agree with the statement above :',
                                        style: 'font-size : 12px;',
                                        width: '100%'
                                    },
                                    {
                                        xtype: 'checkboxfield',
                                        label: 'd',
                                        labelAlign: 'bottom'
                                    },
                                    {
                                        xtype: 'label',
                                        html: '* No early report in time is authorized or acceptable for pay unless specifically directed in writing by the Manager in Charge of your branch office.',
                                        style: 'font-size : 12px;',
                                        width: '100%'
                                    }
                                ]
                            }
                        ],
                        listeners: [
                            {
                                fn: function(element, eOpts) {

                                },
                                event: 'painted'
                            }
                        ]
                    },
                    {
                        xtype: 'titlebar',
                        cls: 'titleBar',
                        docked: 'bottom',
                        hidden: true,
                        layout: {
                            type: 'hbox',
                            pack: 'center'
                        }
                    },
                    {
                        xtype: 'panel',
                        cls: 'titleBar',
                        docked: 'bottom',
                        height: 50,
                        hidden: false,
                        layout: {
                            type: 'hbox',
                            align: 'center'
                        },
                        items: [
                            {
                                xtype: 'button',
                                handler: function(button, e) {

                                },
                                html: '<img class="imgBtnCls" src="img/save_icon.png"  /><p class="whiteBtn">Save</p>',
                                id: 'formSave',
                                ui: 'plain',
                                width: '50px',
                                text: ''
                            },
                            {
                                xtype: 'spacer'
                            },
                            {
                                xtype: 'button',
                                handler: function(button, e) {

                                },
                                html: '<img style="width: 30%;" class="" src="img/upload_icon.png" /><p class="whiteBtn">Save & Upload</p>',
                                id: 'formSave1',
                                ui: 'plain',
                                width: '85px',
                                text: ''
                            },
                            {
                                xtype: 'spacer'
                            },
                            {
                                xtype: 'button',
                                handler: function(button, e) {

                                },
                                html: '<img src="img/cancel_icon.png"  class="imgBtnCls" /> <p class="whiteBtn">Cancel</p>',
                                ui: 'plain',
                                width: '50px'
                            }
                        ]
                    },
                    {
                        xtype: 'panel',
                        cls: 'titleBar',
                        docked: 'top',
                        layout: 'hbox',
                        items: [
                            {
                                xtype: 'button',
                                flex: 1,
                                ui: 'plain',
                                text: 'Local'
                            },
                            {
                                xtype: 'button',
                                flex: 1,
                                ui: 'plain',
                                text: 'Server'
                            },
                            {
                                xtype: 'button',
                                flex: 1,
                                ui: 'plain',
                                text: 'Cancel'
                            }
                        ]
                    },
                    {
                        xtype: 'panel',
                        cls: 'fontFamilyCath',
                        docked: 'top',
                        layout: 'vbox',
                        items: [
                            {
                                xtype: 'panel',
                                layout: 'hbox',
                                items: [
                                    {
                                        xtype: 'panel',
                                        width: '50%',
                                        items: [
                                            {
                                                xtype: 'datepickerfield',
                                                width: '90%',
                                                label: 'From :',
                                                labelWidth: '40%',
                                                placeHolder: 'mm/dd/yyyy'
                                            },
                                            {
                                                xtype: 'datepickerfield',
                                                width: '90%',
                                                label: 'To',
                                                labelWidth: '40%',
                                                placeHolder: 'mm/dd/yyyy'
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'panel',
                                        width: '50%',
                                        items: [
                                            {
                                                xtype: 'selectfield',
                                                label: '',
                                                placeHolder: 'Options'
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                xtype: 'panel',
                                layout: 'hbox',
                                items: [
                                    {
                                        xtype: 'label',
                                        cls: 'font12',
                                        html: 'Has Departued?'
                                    },
                                    {
                                        xtype: 'checkboxfield',
                                        label: 'Yes',
                                        labelAlign: 'right',
                                        labelWidth: '60%'
                                    },
                                    {
                                        xtype: 'checkboxfield',
                                        label: 'No',
                                        labelAlign: 'right',
                                        labelWidth: '60%'
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                xtype: 'container',
                cls: 'backgrounWhite',
                id: 'settingsCont',
                scrollable: 'vertical',
                items: [
                    {
                        xtype: 'titlebar',
                        cls: 'titleBar',
                        docked: 'top',
                        title: 'Settings',
                        items: [
                            {
                                xtype: 'button',
                                height: 30,
                                html: '<img src="img/img/btn_menu.png" width="80%" height="80%" />',
                                id: 'settingMenuBtn',
                                itemId: 'mybutton20',
                                ui: 'plain',
                                width: 50,
                                text: ''
                            }
                        ]
                    },
                    {
                        xtype: 'panel',
                        height: 50,
                        style: 'border-left : 2px solid green; border-bottom : 1px solid rgba(128, 128, 128, 0.55);',
                        layout: {
                            type: 'hbox',
                            align: 'center'
                        },
                        items: [
                            {
                                xtype: 'spacer',
                                width: 10
                            },
                            {
                                xtype: 'label',
                                cls: [
                                    'forgotBtnCls',
                                    'fontFamilyCath'
                                ],
                                html: 'Tour Mode:',
                                width: '40%'
                            },
                            {
                                xtype: 'spacer'
                            },
                            {
                                xtype: 'selectfield',
                                style: 'border : 1px solid rgba(128, 128, 128, 0.55);',
                                width: '50%',
                                label: '',
                                placeHolder: 'Select...',
                                store: 'sitePost'
                            },
                            {
                                xtype: 'spacer',
                                width: 8
                            }
                        ]
                    },
                    {
                        xtype: 'panel',
                        height: 50,
                        style: 'border-left : 2px solid blue; border-bottom : 1px solid rgba(128, 128, 128, 0.55);',
                        layout: {
                            type: 'hbox',
                            align: 'center'
                        },
                        items: [
                            {
                                xtype: 'spacer',
                                width: 10
                            },
                            {
                                xtype: 'label',
                                cls: [
                                    'forgotBtnCls',
                                    'fontFamilyCath'
                                ],
                                html: 'Tour Scan Mode:',
                                width: '40%'
                            },
                            {
                                xtype: 'spacer'
                            },
                            {
                                xtype: 'selectfield',
                                style: 'border : 1px solid rgba(128, 128, 128, 0.55);',
                                width: '50%',
                                label: '',
                                placeHolder: 'Select...',
                                store: 'sitePost'
                            },
                            {
                                xtype: 'spacer',
                                width: 8
                            }
                        ]
                    },
                    {
                        xtype: 'panel',
                        height: 50,
                        style: 'border-left : 2px solid red; border-bottom : 1px solid rgba(128, 128, 128, 0.55);',
                        layout: {
                            type: 'hbox',
                            align: 'center'
                        },
                        items: [
                            {
                                xtype: 'spacer',
                                width: 10
                            },
                            {
                                xtype: 'label',
                                cls: [
                                    'forgotBtnCls',
                                    'fontFamilyCath'
                                ],
                                html: 'Editable Tour Scan Field ;',
                                width: '40%'
                            },
                            {
                                xtype: 'spacer'
                            },
                            {
                                xtype: 'selectfield',
                                style: 'border : 1px solid rgba(128, 128, 128, 0.55);',
                                width: '50%',
                                label: '',
                                placeHolder: 'Select...',
                                store: 'sitePost'
                            },
                            {
                                xtype: 'spacer',
                                width: 8
                            }
                        ]
                    },
                    {
                        xtype: 'panel',
                        height: 50,
                        style: 'border-left : 2px solid yellow; border-bottom : 1px solid rgba(128, 128, 128, 0.55);',
                        layout: {
                            type: 'hbox',
                            align: 'center'
                        },
                        items: [
                            {
                                xtype: 'spacer',
                                width: 10
                            },
                            {
                                xtype: 'label',
                                cls: [
                                    'forgotBtnCls',
                                    'fontFamilyCath'
                                ],
                                html: 'Logistica Search Span :',
                                width: '40%'
                            },
                            {
                                xtype: 'spacer'
                            },
                            {
                                xtype: 'selectfield',
                                style: 'border : 1px solid rgba(128, 128, 128, 0.55);',
                                width: '50%',
                                label: '',
                                placeHolder: 'Select...',
                                store: 'sitePost'
                            },
                            {
                                xtype: 'spacer',
                                width: 8
                            }
                        ]
                    },
                    {
                        xtype: 'panel',
                        height: 50,
                        style: 'border-left : 2px solid green; border-bottom : 1px solid rgba(128, 128, 128, 0.55);',
                        layout: {
                            type: 'hbox',
                            align: 'center'
                        },
                        items: [
                            {
                                xtype: 'spacer',
                                width: 10
                            },
                            {
                                xtype: 'label',
                                cls: [
                                    'forgotBtnCls',
                                    'fontFamilyCath'
                                ],
                                html: 'Visitor Search Span :',
                                width: '40%'
                            },
                            {
                                xtype: 'spacer'
                            },
                            {
                                xtype: 'selectfield',
                                style: 'border : 1px solid rgba(128, 128, 128, 0.55);',
                                width: '50%',
                                label: '',
                                placeHolder: 'Select...',
                                store: 'sitePost'
                            },
                            {
                                xtype: 'spacer',
                                width: 8
                            }
                        ]
                    }
                ]
            },
            {
                xtype: 'container',
                cls: 'backgrounWhite',
                id: 'quickLinksCont',
                items: [
                    {
                        xtype: 'titlebar',
                        cls: 'titleBar',
                        docked: 'top',
                        title: 'Quick Links',
                        items: [
                            {
                                xtype: 'button',
                                height: 30,
                                html: '<img src="img/img/btn_menu.png" width="80%" height="80%" />',
                                id: 'quickLinkMenuBtn',
                                itemId: 'mybutton18',
                                ui: 'plain',
                                width: 50,
                                text: ''
                            }
                        ]
                    },
                    {
                        xtype: 'dataview',
                        itemHeight: '80',
                        height: '100%',
                        id: 'quickLinkDataList',
                        itemId: 'mydataview10',
                        scrollable: 'vertical',
                        itemTpl: [
                            '<!--',
                            '<div class="menuList" style="color : gray; border-left: 2px solid {leftColor}; height : 3em;">',
                            '   ',
                            '    ',
                            ' <table width="100%">',
                            ' ',
                            '  <tr style="line-height: 1em;">',
                            '',
                            '      <td style="width : 50%; font-size : 14px;">&nbsp;&nbsp;{senderName}</td>',
                            '      <td style="font-size : 14px;">{time}</td>',
                            '      <td rowspan="2">&nbsp;&nbsp; <img align= "right" style=" width : 14px; height : 19px;" src="{icon}"> </td>',
                            '      <td rowspan="2">&nbsp;</td>',
                            '  </tr>',
                            '  <tr style="line-height: 1em;">',
                            '      <td style="width : 50%; font-size : 14px; overflow:hidden;    white-space: nowrap;     text-overflow : ellipsis;">',
                            '              &nbsp;&nbsp;{msg}',
                            '          </td>',
                            '      <td></td>',
                            '    <td></td>',
                            '  </tr>',
                            '</table>',
                            '',
                            '</div>',
                            '-->',
                            '',
                            '<div class="menuList" style="color : gray; border-left: 2px solid {leftColor};line-height : 3em;">',
                            '    <table width="100%">',
                            '        <tr>',
                            '        <td>',
                            '            ',
                            '            <table class = "fontFamilyCath" style="width : 100%; height: 3em; ">',
                            ' ',
                            '  <tr style="line-height: 1em;">',
                            '',
                            '      <td style="width : 70%; font-size : 14px;">&nbsp;&nbsp;{senderName}</td>',
                            '      <td style="font-size : 14px;">{time}</td>',
                            '      <td rowspan="2">&nbsp;&nbsp; <img align= "right" style=" width : 14px; height : 19px;" src="{icon}"> </td>',
                            '      <td rowspan="2">&nbsp;</td>',
                            '  </tr>',
                            '  <tr style="line-height: 1em;">',
                            '      <td style="width : 70%; font-size : 14px; overflow:hidden;    white-space: nowrap;     text-overflow : ellipsis;">',
                            '              &nbsp;&nbsp;{msg}',
                            '          </td>',
                            '      <td></td>',
                            '    <td></td>',
                            '  </tr>',
                            '</table>',
                            '            ',
                            '            ',
                            '            ',
                            '            ',
                            '        </td>',
                            '        </tr>',
                            '    </table>',
                            '    ',
                            '    ',
                            '</div>',
                            '',
                            '',
                            '',
                            '',
                            '',
                            '',
                            ''
                        ],
                        store: 'quickLinkStore'
                    }
                ]
            },
            {
                xtype: 'container',
                centered: false,
                cls: 'announsMsgTxt',
                id: 'announceMentMsgCont',
                layout: {
                    type: 'vbox',
                    align: 'center',
                    pack: 'center'
                },
                items: [
                    {
                        xtype: 'titlebar',
                        cls: 'titleBar',
                        docked: 'top',
                        title: 'Announcements',
                        items: [
                            {
                                xtype: 'button',
                                height: 30,
                                html: '<img src="img/img/btn_menu.png" width="80%" height="80%" />',
                                id: 'announcementMsgMenuBtn',
                                itemId: 'mybutton9',
                                ui: 'plain',
                                width: 50,
                                text: ''
                            }
                        ]
                    },
                    {
                        xtype: 'panel',
                        centered: false,
                        cls: [
                            'backgrounWhite',
                            'fontFamilyCath'
                        ],
                        height: '95%',
                        html: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer ultricies tellus sem, ut cursus mauris fermentum at. Fusce suscipit urna nec est posuere, vel dictum tellus ullamcorper. Phasellus semper turpis id hendrerit dapibus. Nunc euismod et mi at porta. Suspendisse id velit convallis, congue mauris id, venenatis magna. Vivamus porta ut eros at ullamcorper. Cras pharetra nibh vitae erat vehicula facilisis.  In sed porta leo. Pellentesque pretium ut turpis viverra tempor. Curabitur eu sapien placerat lorem feugiat porta sed et massa. Nam tempor condimentum dui, id convallis urna sagittis quis. Sed iaculis mi augue, eu tempor nibh imperdiet sed. Aliquam erat volutpat. Quisque ac lacus risus. Aliquam porta porta nunc, ac consectetur nisl hendrerit lobortis. Etiam rutrum tincidunt tristique. Phasellus non nisl quis eros ornare luctus. Sed malesuada, nisl ut varius hendrerit, ligula enim sagittis ipsum, at rhoncus risus lacus vitae orci.',
                        padding: 10,
                        width: '95%',
                        scrollable: 'vertical'
                    }
                ]
            },
            {
                xtype: 'container',
                cls: 'backgrounWhite',
                id: 'announsMentsCont',
                items: [
                    {
                        xtype: 'titlebar',
                        cls: 'titleBar',
                        docked: 'top',
                        title: 'Announcements',
                        items: [
                            {
                                xtype: 'button',
                                height: 30,
                                html: '<img src="img/img/btn_menu.png" width="80%" height="80%" />',
                                id: 'announsMenuBtn',
                                itemId: 'mybutton9',
                                ui: 'plain',
                                width: 50,
                                text: ''
                            }
                        ]
                    },
                    {
                        xtype: 'titlebar',
                        cls: 'titleSubBar',
                        docked: 'top',
                        items: [
                            {
                                xtype: 'button',
                                height: 40,
                                html: '<img src="img/img/btn_radio.png" width="100%" height="100%" />',
                                id: 'announsSelectBtn',
                                itemId: 'mybutton13',
                                style: 'margin-left: 2%;',
                                ui: 'plain',
                                width: 40,
                                text: ''
                            },
                            {
                                xtype: 'label',
                                cls: 'lebelFont',
                                html: 'Select All'
                            },
                            {
                                xtype: 'button',
                                align: 'right',
                                ui: 'plain',
                                text: 'Mark as Read'
                            }
                        ]
                    },
                    {
                        xtype: 'dataview',
                        height: '100%',
                        id: 'AllAnnouncementList',
                        itemTpl: [
                            '<!--',
                            '<div  class="menuList" style="color : gray; border-left: 2px solid {leftColor};/* vertical-align: -webkit-baseline-middle; */',
                            'height: 50px;',
                            'display: -webkit-box;',
                            '-webkit-box-orient: horizontal;',
                            '-webkit-box-align: center;',
                            '/* -webkit-box-pack: center; *"> ',
                            '    <div align="left" style="float : left;overflow:hidden;    white-space: nowrap;    width: 75px;    text-overflow : ellipsis;">ss</div>   ',
                            '    <div align="center"> &nbsp; &nbsp; <img align="right" style=" width : 14px; height : 19px;" src="{icon}">',
                            '    </div>',
                            '</div>',
                            '-->',
                            '<!--',
                            '<div class="menuList" style="color : gray; border-left: 2px solid {leftColor};">',
                            '    {menuName}',
                            '    <img align="right" style=" width : 14px; height : 19px;" src="{icon}">',
                            '    ',
                            '    ',
                            '</div>',
                            '-->',
                            '<div class="menuList " style="color : gray; border-left: 2px solid {leftColor};line-height : 3em;">',
                            '    <table class = "fontFamilyCath" width="100%">',
                            '        <tr>',
                            '            <td>&nbsp;</td>',
                            '            <td>&nbsp;  <input type="button" value="" width="25px" height="20px" class="uncheck" name="{menuName}" id="{menuName}"> </td>',
                            '            <td style="width : 80%">{menuName}</td>',
                            '            <td><img align= "right" style=" width : 14px; height : 19px;" src="{icon}"></td>',
                            '            <td>&nbsp;</td>',
                            '        </tr>',
                            '    </table>',
                            '    ',
                            '    ',
                            '</div>'
                        ],
                        store: 'sitePost'
                    }
                ]
            },
            {
                xtype: 'container',
                id: 'fullMsgCont',
                items: [
                    {
                        xtype: 'titlebar',
                        cls: 'titleBar',
                        docked: 'top',
                        title: 'Adam',
                        items: [
                            {
                                xtype: 'button',
                                height: 30,
                                html: '<img src="img/img/btn_menu.png" width="80%" height="80%" />',
                                id: 'fullMsgMenuBtn',
                                itemId: 'mybutton8',
                                ui: 'plain',
                                width: 50,
                                text: ''
                            }
                        ]
                    },
                    {
                        xtype: 'panel',
                        cls: 'backgrounWhite',
                        docked: 'bottom',
                        height: 60,
                        layout: {
                            type: 'hbox',
                            align: 'center',
                            pack: 'center'
                        },
                        items: [
                            {
                                xtype: 'textfield',
                                height: 20,
                                style: 'border-radius: 4px; border: 1px solid rgba(9, 8, 8, 0.11); ',
                                width: '80%',
                                clearIcon: false,
                                label: '',
                                placeHolder: 'Type your message...'
                            },
                            {
                                xtype: 'button',
                                style: 'color : rgb(43, 72, 104);',
                                ui: 'plain',
                                width: '18%',
                                text: 'Send'
                            }
                        ]
                    },
                    {
                        xtype: 'dataview',
                        height: '100%',
                        id: 'chatData',
                        itemTpl: Ext.create('Ext.XTemplate', 
                            ' <tpl for=".">  ',
                            '              <tpl if="this.senderid(senderid) === false">',
                            '                  <div class="talk-bubble-gray tri-right border round btm-left-in" align="left" style="width : 40%; ">',
                            '                       <div  class="talktext" >{senderid}  {msg}</div>',
                            '                  </div>',
                            '            </tpl>',
                            '            <br/>',
                            '            <tpl if="this.Reciver(senderid) === true">',
                            '                  ',
                            '               <div class="talk-bubble-blue tri-right border round btm-right-in " align="right" style="width : 40%; float: right; ">',
                            '                   <div  class="talktext" > {senderid} {msg} </div>',
                            '               </div>',
                            '            </tpl>',
                            '</tpl>',
                            {
                                time: function(Time) {
                                    /*
                                    var date=Time;

                                    //alert(date);
                                    try {
                                        var now = Math.ceil(Number(new Date()) / 1000),
                                            dateTime = Math.ceil(Number(new Date(date)) / 1000), //Here date is defined in above date variable
                                            diff = now - dateTime,
                                            str;

                                        if (diff < 60) {
                                            return String(diff) + ' sec.';
                                        } else if (diff < 3600) {
                                            str = String(Math.ceil(diff / (60)));
                                            return str + (str == "1" ? ' min.' : ' min.') ;
                                        } else if (diff < 86400) {
                                            str = String(Math.ceil(diff / (3600)));
                                            return str + (str == "1" ? ' hr' : ' hr') ;
                                        } else if (diff < 60 * 60 * 24 * 365) {
                                            str = String(Math.ceil(diff / (60 * 60 * 24)));
                                            return str + (str == "1" ? ' day' : ' days') ;
                                        } else {
                                            return Ext.Date.format(new Date(date), 'jS M \'y');  //Here date is defined in above date variable
                                        }
                                    } catch (e) {
                                        return '';
                                    }
                                    //};

                                    var newtime=Time;
                                    console.log(newtime);

                                    */
                                },
                                senderid: function(senderid) {
                                    return senderid === tekwave.app.UserId;
                                },
                                Reciver: function(Reciver) {
                                    return Reciver === tekwave.app.UserId;
                                }
                            }
                        ),
                        store: 'oneToOneChat'
                    }
                ]
            },
            {
                xtype: 'container',
                cls: 'backgrounWhite',
                id: 'allMsgCont',
                items: [
                    {
                        xtype: 'titlebar',
                        cls: 'titleBar',
                        docked: 'top',
                        title: 'Messages',
                        items: [
                            {
                                xtype: 'button',
                                height: 30,
                                html: '<img src="img/img/btn_menu.png" width="80%" height="80%" />',
                                id: 'allMsgMenuBtn',
                                itemId: 'mybutton7',
                                ui: 'plain',
                                width: 50,
                                text: ''
                            },
                            {
                                xtype: 'button',
                                align: 'right',
                                ui: 'plain',
                                iconCls: 'compose',
                                text: ''
                            }
                        ]
                    },
                    {
                        xtype: 'dataview',
                        itemHeight: '80',
                        height: '100%',
                        id: 'allMsgList',
                        itemId: 'mydataview',
                        scrollable: 'vertical',
                        itemTpl: [
                            '<!--',
                            '<div class="menuList" style="color : gray; border-left: 2px solid {leftColor}; height : 3em;">',
                            '   ',
                            '    ',
                            ' <table width="100%">',
                            ' ',
                            '  <tr style="line-height: 1em;">',
                            '',
                            '      <td style="width : 50%; font-size : 14px;">&nbsp;&nbsp;{senderName}</td>',
                            '      <td style="font-size : 14px;">{time}</td>',
                            '      <td rowspan="2">&nbsp;&nbsp; <img align= "right" style=" width : 14px; height : 19px;" src="{icon}"> </td>',
                            '      <td rowspan="2">&nbsp;</td>',
                            '  </tr>',
                            '  <tr style="line-height: 1em;">',
                            '      <td style="width : 50%; font-size : 14px; overflow:hidden;    white-space: nowrap;     text-overflow : ellipsis;">',
                            '              &nbsp;&nbsp;{msg}',
                            '          </td>',
                            '      <td></td>',
                            '    <td></td>',
                            '  </tr>',
                            '</table>',
                            '',
                            '</div>',
                            '-->',
                            '',
                            '<div class="menuList" style="color : gray; border-left: 2px solid {leftColor};line-height : 3em;">',
                            '    <table width="100%">',
                            '        <tr>',
                            '        <td>',
                            '            ',
                            '            <table class="fontFamilyCath" style="width : 100%; height: 3em; ">',
                            ' ',
                            '  <tr style="line-height: 1em;">',
                            '',
                            '      <td style="width : 70%; font-size : 14px;">&nbsp;&nbsp;{senderName}</td>',
                            '      <td style="font-size : 14px;">{time}</td>',
                            '      <td rowspan="2">&nbsp;&nbsp; <img align= "right" style=" width : 14px; height : 19px;" src="{icon}"> </td>',
                            '      <td rowspan="2">&nbsp;</td>',
                            '  </tr>',
                            '  <tr style="line-height: 1em;">',
                            '      <td style="width : 70%; font-size : 14px; overflow:hidden;    white-space: nowrap;     text-overflow : ellipsis;">',
                            '              &nbsp;&nbsp;{msg}',
                            '          </td>',
                            '      <td></td>',
                            '    <td></td>',
                            '  </tr>',
                            '</table>',
                            '            ',
                            '            ',
                            '            ',
                            '            ',
                            '        </td>',
                            '        </tr>',
                            '    </table>',
                            '    ',
                            '    ',
                            '</div>',
                            '',
                            '',
                            '',
                            '',
                            '',
                            '',
                            ''
                        ],
                        store: 'allMsgStore'
                    }
                ]
            },
            {
                xtype: 'container',
                cls: 'backgrounWhite',
                id: 'sitePostCont',
                items: [
                    {
                        xtype: 'titlebar',
                        cls: 'titleBar',
                        docked: 'top',
                        title: 'Sites',
                        items: [
                            {
                                xtype: 'button',
                                height: 30,
                                html: '<img src="img/img/btn_menu.png" width="80%" height="80%" />',
                                id: 'sitePostMenuBtn',
                                itemId: 'mybutton',
                                ui: 'plain',
                                width: 50,
                                text: ''
                            }
                        ]
                    },
                    {
                        xtype: 'dataview',
                        itemHeight: '80',
                        height: '100%',
                        id: 'siteList',
                        itemId: 'mydataview5',
                        itemTpl: [
                            '<div class="menuList" style="color : gray; border-left: 2px solid {leftColor};line-height : 3em;">',
                            '    <table width="100%">',
                            '        <tr>',
                            '            <td>&nbsp;',
                            '                <tpl for="name"> </tpl></td>',
                            '            <td class = "fontFamilyCath" style="width : 80%; font-family  : CenturyGothic, AppleGothic, sans-serif;">{name}</td>',
                            '            <td><img align= "right" style=" width : 14px; height : 19px;" src="img/img/arrow_right.png"></td>',
                            '            <td>&nbsp;</td>',
                            '        </tr>',
                            '    </table>   ',
                            '</div>'
                        ],
                        store: 'sitePost'
                    }
                ]
            },
            {
                xtype: 'container',
                cls: 'backgrounWhite',
                id: 'staticFormCont',
                items: [
                    {
                        xtype: 'titlebar',
                        cls: 'titleBar',
                        docked: 'top',
                        title: 'Static Form List',
                        items: [
                            {
                                xtype: 'button',
                                height: 30,
                                html: '<img src="img/img/btn_menu.png" width="80%" height="80%" />',
                                id: 'staticFormMenuBtn',
                                itemId: 'mybutton',
                                ui: 'plain',
                                width: 50,
                                text: ''
                            },
                            {
                                xtype: 'button',
                                align: 'right',
                                hidden: true,
                                ui: 'plain',
                                iconCls: 'add',
                                text: ''
                            }
                        ]
                    },
                    {
                        xtype: 'dataview',
                        itemHeight: '80',
                        height: '100%',
                        id: 'staticFormList',
                        itemId: 'mydataview6',
                        itemTpl: [
                            '<!--',
                            '<div  class="menuList" style="color : gray; border-left: 2px solid {leftColor};/* vertical-align: -webkit-baseline-middle; */',
                            'height: 50px;',
                            'display: -webkit-box;',
                            '-webkit-box-orient: horizontal;',
                            '-webkit-box-align: center;',
                            '/* -webkit-box-pack: center; *"> ',
                            '    <div align="left" style="float : left;overflow:hidden;    white-space: nowrap;    width: 75px;    text-overflow : ellipsis;">ss</div>   ',
                            '    <div align="center"> &nbsp; &nbsp; <img align="right" style=" width : 14px; height : 19px;" src="{icon}">',
                            '    </div>',
                            '</div>',
                            '-->',
                            '<!--',
                            '<div class="menuList" style="color : gray; border-left: 2px solid {leftColor};">',
                            '    {menuName}',
                            '    <img align="right" style=" width : 14px; height : 19px;" src="{icon}">',
                            '    ',
                            '    ',
                            '</div>',
                            '-->',
                            '<div class="menuList" style="color : gray; border-left: 2px solid {leftColor};line-height : 3em;">',
                            '    <table width="100%">',
                            '        <tr>',
                            '            <td>&nbsp;</td>',
                            '            <td style="width : 80%" class="fontFamilyCath">{formName}</td>',
                            '            <td><img align= "right" style=" width : 14px; height : 19px;" src="img/img/arrow_right.png"></td>',
                            '            <td>&nbsp;</td>',
                            '        </tr>',
                            '    </table>',
                            ' </div>'
                        ],
                        store: 'formStaticField'
                    },
                    {
                        xtype: 'panel',
                        id: 'demopanel',
                        itemId: 'demopanel',
                        width: 150,
                        items: [
                            {
                                xtype: 'button',
                                ui: 'plain',
                                text: 'Create New'
                            },
                            {
                                xtype: 'button',
                                ui: 'plain',
                                text: 'List'
                            },
                            {
                                xtype: 'button',
                                ui: 'plain',
                                text: 'Search'
                            }
                        ]
                    },
                    {
                        xtype: 'panel',
                        centered: true,
                        height: '80%',
                        hidden: true,
                        id: 'staticFormSearchPnl',
                        width: '80%',
                        hideOnMaskTap: true,
                        layout: 'vbox',
                        modal: true,
                        scrollable: 'vertical',
                        items: [
                            {
                                xtype: 'titlebar',
                                cls: 'titleBar',
                                docked: 'top',
                                title: 'Search'
                            }
                        ]
                    }
                ]
            },
            {
                xtype: 'container',
                cls: 'backgrounWhite',
                id: 'menuCont',
                items: [
                    {
                        xtype: 'titlebar',
                        cls: 'titleBar',
                        docked: 'top',
                        id: 'menuTitle',
                        title: 'Menu',
                        items: [
                            {
                                xtype: 'button',
                                height: 30,
                                html: '<img src="img/img/btn_menu.png" width="80%" height="80%" />',
                                ui: 'plain',
                                width: 50,
                                text: ''
                            }
                        ]
                    },
                    {
                        xtype: 'dataview',
                        height: '100%',
                        id: 'menuList',
                        itemId: 'mydataview9',
                        scrollable: 'vertical',
                        itemTpl: [
                            '<!--',
                            '<div class="menuList" style="border-left: 2px solid {leftColor};">',
                            '    <div>  ',
                            '        <img  align="left" class="menuListItemImg" style="" src="{icon}" /> ',
                            '        <p> {menuName}</p>',
                            '    ',
                            '    </div>',
                            ' ',
                            '',
                            '</div>',
                            '  <div align="left" style="float : left;overflow:hidden;    white-space: nowrap;    width: 75px;    text-overflow : ellipsis;">d</div>',
                            '-->',
                            '<!--',
                            '<div class="menuList" valign="middle" align = "center" style="color : gray; border-left: 2px solid {leftColor}; height : 60px; vertical-align:middle;"> ',
                            '    ',
                            '    <div align="left"> ',
                            '        <img  style=" width : 35px; height : 35px;" src="{icon}">',
                            '        <span style="  vertical-align:middle;"> {menuName} </span>',
                            '    </div>',
                            '</div>',
                            '',
                            '-->',
                            '',
                            '',
                            '',
                            '',
                            '<div class="menuList" style="color: gray;',
                            '                             border-left: 2px solid {leftColor};',
                            '/* vertical-align: -webkit-baseline-middle; */',
                            'height: 50px;',
                            'display: -webkit-box;',
                            '-webkit-box-orient: horizontal;',
                            '-webkit-box-align: center;',
                            '/* -webkit-box-pack: center; *',
                            '                             ',
                            '                             ">   ',
                            '   <img  style=" width: 30px;',
                            'height: 30px;',
                            '/* float: left; */',
                            'margin-left: 5px; ',
                            '/* margin-top: auto; */',
                            'vertical-align: -webkit-baseline-middle;" src="{icon}">',
                            '    <span class= "fontFamilyCath" style="overflow: hidden;',
                            'font-size: 15px;',
                            'vertical-align: -webkit-baseline-middle;',
                            '/* white-space: nowrap; */',
                            'text-overflow: ellipsis;">',
                            ' &nbsp;       {menuName}',
                            '         </span>',
                            '   </div>'
                        ],
                        store: 'menuStore'
                    },
                    {
                        xtype: 'panel',
                        centered: true,
                        height: '70%',
                        hidden: true,
                        id: 'switchUserPnl',
                        width: '80%',
                        modal: true,
                        layout: {
                            type: 'vbox',
                            align: 'center'
                        },
                        items: [
                            {
                                xtype: 'spacer',
                                height: '20%',
                                width: 40
                            },
                            {
                                xtype: 'textfield',
                                cls: 'blueTextFld',
                                width: '80%',
                                label: '',
                                placeHolder: 'username'
                            },
                            {
                                xtype: 'spacer',
                                height: '5%',
                                width: 20
                            },
                            {
                                xtype: 'passwordfield',
                                cls: 'redTextFld',
                                width: '80%',
                                label: '',
                                placeHolder: 'password'
                            },
                            {
                                xtype: 'spacer',
                                height: '5%',
                                width: 20
                            },
                            {
                                xtype: 'button',
                                cls: [
                                    'blueBtn',
                                    'whiteClr'
                                ],
                                style: 'background: rgb(43, 72, 104);',
                                ui: 'plain',
                                width: '80%',
                                text: 'Switch'
                            },
                            {
                                xtype: 'spacer',
                                height: '5%',
                                width: 20
                            },
                            {
                                xtype: 'button',
                                id: 'switchUsrCanclBtn',
                                itemId: 'mybutton36',
                                ui: 'plain',
                                width: '80%',
                                text: 'Cancel'
                            }
                        ]
                    }
                ]
            },
            {
                xtype: 'container',
                id: 'homeCont',
                padding: 10,
                layout: 'vbox',
                scrollable: 'vertical',
                items: [
                    {
                        xtype: 'titlebar',
                        cls: 'titleBar',
                        docked: 'top',
                        title: 'TEKWave',
                        items: [
                            {
                                xtype: 'button',
                                height: 30,
                                html: '<img src="img/img/btn_menu.png" width="80%" height="80%" />',
                                id: 'homeMenuBtn',
                                itemId: 'mybutton',
                                ui: 'plain',
                                width: 50,
                                text: ''
                            }
                        ]
                    },
                    {
                        xtype: 'label',
                        cls: [
                            'titleFont',
                            'fontFamilyCath'
                        ],
                        html: 'Home'
                    },
                    {
                        xtype: 'dataview',
                        height: 120,
                        maxWidth: '100%',
                        scrollable: {
                            direction: 'horizontal',
                            directionLock: true
                        },
                        inline: {
                            wrap: false
                        },
                        itemTpl: [
                            '<div align="center" class= "listHead" style="">',
                            '    ',
                            '    ',
                            '    <div  class="listSection" style="">',
                            '  ',
                            '        <p class="dataViewFontCls fontFamilyCath">{data1}</p>',
                            '        <img class="homeList" style="" src="{icon}" />',
                            '        <p class="dataViewFontCls fontFamilyCath">{name}</p>',
                            '        ',
                            '    </div>',
                            '    <div  class="smallFont2 fontFamilyCath">',
                            '        {type}',
                            '    </div>',
                            '</div>'
                        ],
                        store: 'MyXmlStore'
                    },
                    {
                        xtype: 'label',
                        cls: [
                            'titleFont',
                            'fontFamilyCath'
                        ],
                        html: 'Communication'
                    },
                    {
                        xtype: 'dataview',
                        height: 120,
                        id: 'homeCommList',
                        itemId: 'mydataview3',
                        scrollable: {
                            direction: 'horizontal',
                            directionLock: true
                        },
                        inline: {
                            wrap: false
                        },
                        itemTpl: [
                            '<div align="center" class= "listHead" style="">',
                            '    ',
                            '    ',
                            '    <div  class="listSection" style="">',
                            '  ',
                            '        <p class="dataViewFontCls fontFamilyCath">{data1}</p>',
                            '        <img class="homeList" style="" src="{icon}" />',
                            '        <p class="dataViewFontCls fontFamilyCath">{name}</p>',
                            '        ',
                            '    </div>',
                            '    <div  class="smallFont2 fontFamilyCath">',
                            '        {type}',
                            '    </div>',
                            '</div>'
                        ],
                        store: 'commStore'
                    },
                    {
                        xtype: 'label',
                        cls: [
                            'titleFont',
                            'fontFamilyCath'
                        ],
                        html: 'Quick Links'
                    },
                    {
                        xtype: 'dataview',
                        height: 120,
                        id: 'HomeQuickLinkList',
                        itemId: 'mydataview6',
                        scrollable: {
                            direction: 'horizontal',
                            directionLock: true
                        },
                        inline: {
                            wrap: false
                        },
                        itemTpl: [
                            '<div align="center" class= "listHead" style="">',
                            '    ',
                            '    ',
                            '    <div  class="listSection" style="">',
                            '  ',
                            '        <p class="dataViewFontCls fontFamilyCath">{data1}</p>',
                            '        <img class="homeList" style="" src="{icon}" />',
                            '        <p class="dataViewFontCls fontFamilyCath">{name}</p>',
                            '        ',
                            '    </div>',
                            '    <div  class="smallFont2 fontFamilyCath">',
                            '        {type}',
                            '    </div>',
                            '</div>'
                        ],
                        store: 'staticForm'
                    },
                    {
                        xtype: 'label',
                        cls: [
                            'titleFont',
                            'fontFamilyCath'
                        ],
                        html: 'Daily Tasks'
                    },
                    {
                        xtype: 'dataview',
                        height: 120,
                        scrollable: {
                            direction: 'horizontal',
                            directionLock: true
                        },
                        inline: {
                            wrap: false
                        },
                        itemTpl: [
                            '<div align="center" class= "listHead" style="">',
                            '    ',
                            '    ',
                            '    <div  class="listSection" style="">',
                            '  ',
                            '        <p class="dataViewFontCls fontFamilyCath">{data1}</p>',
                            '        <img class="homeList" style="" src="{icon}" />',
                            '        <p class="dataViewFontCls fontFamilyCath">{name}</p>',
                            '        ',
                            '    </div>',
                            '    <div  class="smallFont2 fontFamilyCath">',
                            '        {type}',
                            '    </div>',
                            '</div>'
                        ],
                        store: 'dailyTask'
                    }
                ]
            },
            {
                xtype: 'container',
                id: 'forgotPWCont',
                layout: {
                    type: 'vbox',
                    align: 'center',
                    pack: 'center'
                },
                items: [
                    {
                        xtype: 'titlebar',
                        cls: 'titleBar',
                        docked: 'top',
                        title: 'Forget Password'
                    },
                    {
                        xtype: 'panel',
                        cls: 'backgrounWhite',
                        height: '90%',
                        width: '90%',
                        layout: {
                            type: 'vbox',
                            align: 'center'
                        },
                        items: [
                            {
                                xtype: 'spacer',
                                height: '10%',
                                width: 100
                            },
                            {
                                xtype: 'panel',
                                height: '35%',
                                width: '100%',
                                layout: {
                                    type: 'vbox',
                                    align: 'center'
                                },
                                items: [
                                    {
                                        xtype: 'image',
                                        height: '55%',
                                        width: '40%',
                                        src: 'img/logo.png'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: '4%',
                                        width: 40
                                    },
                                    {
                                        xtype: 'label',
                                        cls: [
                                            'grayClr',
                                            'fontFamilyCath'
                                        ],
                                        html: 'TEKWave Solutions'
                                    },
                                    {
                                        xtype: 'image',
                                        docked: 'bottom',
                                        height: '25%',
                                        width: '100%',
                                        src: 'img/lineS.png'
                                    }
                                ]
                            },
                            {
                                xtype: 'panel',
                                height: '55%',
                                width: '80%',
                                items: [
                                    {
                                        xtype: 'spacer',
                                        height: '4%'
                                    },
                                    {
                                        xtype: 'label',
                                        cls: [
                                            'smallFont',
                                            'fontFamilyCath'
                                        ],
                                        html: 'Please Enter your email id and the new password will be sent to your email.'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: '2.5%'
                                    },
                                    {
                                        xtype: 'textfield',
                                        cls: 'blueTextFld',
                                        clearIcon: false,
                                        label: '',
                                        placeHolder: 'Email Id'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: '2.5%'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: '3.5%'
                                    },
                                    {
                                        xtype: 'button',
                                        style: 'background: rgb(43, 72, 104);',
                                        ui: 'action',
                                        text: 'Send'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: '4%'
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                xtype: 'container',
                id: 'signInCont',
                layout: {
                    type: 'vbox',
                    align: 'center',
                    pack: 'center'
                },
                items: [
                    {
                        xtype: 'titlebar',
                        cls: 'titleBar',
                        docked: 'top',
                        title: 'Sign in',
                        items: [
                            {
                                xtype: 'button',
                                handler: function(button, e) {
                                    console.log(this);
                                    console.log(this.getActiveItem());
                                    console.log(button);
                                },
                                align: 'right',
                                hidden: true,
                                itemId: 'mybutton34',
                                ui: 'plain',
                                iconCls: 'add',
                                text: ''
                            }
                        ]
                    },
                    {
                        xtype: 'panel',
                        cls: 'backgrounWhite',
                        height: '90%',
                        width: '90%',
                        layout: {
                            type: 'vbox',
                            align: 'center'
                        },
                        items: [
                            {
                                xtype: 'spacer',
                                height: '10%',
                                width: 100
                            },
                            {
                                xtype: 'panel',
                                height: '35%',
                                itemId: 'mypanel20',
                                width: '100%',
                                layout: {
                                    type: 'vbox',
                                    align: 'center'
                                },
                                items: [
                                    {
                                        xtype: 'image',
                                        height: '55%',
                                        width: '40%',
                                        src: 'img/logo.png'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: '4%',
                                        width: 40
                                    },
                                    {
                                        xtype: 'label',
                                        cls: [
                                            'grayClr',
                                            'fontFamilyCath'
                                        ],
                                        html: 'TEKWave Solutions'
                                    },
                                    {
                                        xtype: 'image',
                                        docked: 'bottom',
                                        height: '25%',
                                        width: '100%',
                                        src: 'img/lineS.png'
                                    }
                                ],
                                listeners: [
                                    {
                                        fn: function(element, eOpts) {
                                            //this.add({xtype : 'timepickerfield'});
                                            /*
                                            this.add({
                                            xtype: 'timepickerfield',
                                            label: 'time',
                                            value: new Date(), // object also possible {hours:12, minutes:25},
                                            name: 'time',
                                            picker:{
                                            height:300,
                                            minHours:9, //(optional)Selectable hours will be between 9-18
                                            maxHours:18 // (optional) These values default to 0-24
                                            }
                                            }         );
                                            *//*

                                            var pic= Ext.create('Ext.form.Panel', {
                                                fullscreen: true,
                                                items: [
                                                {
                                                    xtype: 'fieldset',
                                                    items: [
                                                    {
                                                        xtype: 'timepickerfield',
                                                        label: 'Start Time',
                                                        name: 'starttime',
                                                        value: new Date()
                                                    }
                                                    ]
                                                }
                                                ]
                                            });

                                            this.add(pic);


                                            this.add({
                                                xtype: 'signaturefield',
                                                id: 'signatureField',
                                                // margin : '20 20 20 20',   //border : 2px solid red; color : gray;
                                                html : '<div style=" font-size : 14px; padding-top : 5%; padding-bottom : 8%; margin-left : 15px; ">Tap to Draw Signature....</div>',
                                                sigWidth: 200,
                                                sigHeight: 300//,
                                                //	label:'Draw Signature Here....'//,
                                                //labelWidth: '20%'
                                            });*/
                                        },
                                        event: 'painted'
                                    }
                                ]
                            },
                            {
                                xtype: 'panel',
                                height: '55%',
                                margin: 2,
                                items: [
                                    {
                                        xtype: 'spacer',
                                        height: '4%'
                                    },
                                    {
                                        xtype: 'label',
                                        cls: [
                                            'smallFont',
                                            'fontFamilyCath'
                                        ],
                                        html: 'Enter your user name and password'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: '2.5%'
                                    },
                                    {
                                        xtype: 'textfield',
                                        cls: 'blueTextFld',
                                        id: 'uid',
                                        margin: 1,
                                        clearIcon: false,
                                        label: '',
                                        value: 'gsadmin',
                                        placeHolder: 'Username'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: '4%'
                                    },
                                    {
                                        xtype: 'passwordfield',
                                        cls: 'redTextFld',
                                        id: 'pwd',
                                        margin: 1,
                                        clearIcon: false,
                                        label: '',
                                        value: '!gsAdmin123',
                                        placeHolder: 'Password'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: '3.5%'
                                    },
                                    {
                                        xtype: 'button',
                                        cls: [
                                            'blueBtn',
                                            'whiteClr'
                                        ],
                                        id: 'loginBtn',
                                        itemId: 'mybutton',
                                        style: 'background: rgb(43, 72, 104);',
                                        ui: 'plain',
                                        text: 'Login'
                                    },
                                    {
                                        xtype: 'spacer',
                                        height: '4%'
                                    },
                                    {
                                        xtype: 'button',
                                        cls: [
                                            'forgotBtnCls',
                                            'fontFamilyCath'
                                        ],
                                        id: 'forgotPwBtn',
                                        itemId: 'mybutton1',
                                        ui: 'plain',
                                        text: 'Forgot Password ?'
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onItemListItemTap',
                event: 'itemtap',
                delegate: '#itemList'
            },
            {
                fn: 'onMyselectfield2Focus',
                event: 'focus',
                delegate: '#myselectfield2'
            },
            {
                fn: 'onMyselectfield16Focus',
                event: 'focus',
                delegate: '#myselectfield16'
            },
            {
                fn: 'onSeleFldFocus',
                event: 'focus',
                delegate: '#seleFld'
            },
            {
                fn: 'onSeleFldFocus1',
                event: 'focus',
                delegate: '#seleFld1'
            },
            {
                fn: 'onMycarouselActiveItemChange',
                event: 'activeitemchange',
                delegate: '#mycarousel'
            },
            {
                fn: 'onSettingMenuBtnTap',
                event: 'tap',
                delegate: '#settingMenuBtn'
            },
            {
                fn: 'onQuickLinkMenuBtnTap',
                event: 'tap',
                delegate: '#quickLinkMenuBtn'
            },
            {
                fn: 'onQuickLinkDataListItemTap',
                event: 'itemtap',
                delegate: '#quickLinkDataList'
            },
            {
                fn: 'onAnnouncementMsgMenuBtnTap',
                event: 'tap',
                delegate: '#announcementMsgMenuBtn'
            },
            {
                fn: 'onAnnounsMenuBtnTap',
                event: 'tap',
                delegate: '#announsMenuBtn'
            },
            {
                fn: 'onAnnounsSelectBtnTap',
                event: 'tap',
                delegate: '#announsSelectBtn'
            },
            {
                fn: 'onAllAnnouncementListItemTap',
                event: 'itemtap',
                delegate: '#AllAnnouncementList'
            },
            {
                fn: 'onFullMsgMenuBtnTap',
                event: 'tap',
                delegate: '#fullMsgMenuBtn'
            },
            {
                fn: 'onAllMsgMenuBtnTap',
                event: 'tap',
                delegate: '#allMsgMenuBtn'
            },
            {
                fn: 'onAllMsgListItemTap',
                event: 'itemtap',
                delegate: '#allMsgList'
            },
            {
                fn: 'onSitePostMenuBtnTap',
                event: 'tap',
                delegate: '#sitePostMenuBtn'
            },
            {
                fn: 'onSiteListItemTap',
                event: 'itemtap',
                delegate: '#siteList'
            },
            {
                fn: 'onStaticFormMenuBtnTap',
                event: 'tap',
                delegate: '#staticFormMenuBtn'
            },
            {
                fn: 'onStaticFormListErased',
                event: 'erased',
                delegate: '#staticFormList'
            },
            {
                fn: 'onStaticFormListBottomChange',
                event: 'bottomchange',
                delegate: '#staticFormList'
            },
            {
                fn: 'onMenuListItemTap',
                event: 'itemtap',
                delegate: '#menuList'
            },
            {
                fn: 'onSwitchUsrCanclBtnTap',
                event: 'tap',
                delegate: '#switchUsrCanclBtn'
            },
            {
                fn: 'onHomeMenuBtnTap',
                event: 'tap',
                delegate: '#homeMenuBtn'
            },
            {
                fn: 'onHomeCommListItemTap',
                event: 'itemtap',
                delegate: '#homeCommList'
            },
            {
                fn: 'onHomeQuickLinkListItemTap',
                event: 'itemtap',
                delegate: '#HomeQuickLinkList'
            },
            {
                fn: 'onForgotPwBtnTap',
                event: 'tap',
                delegate: '#forgotPwBtn'
            },
            {
                fn: 'onNavMainViewPush',
                event: 'push'
            },
            {
                fn: 'onNavMainViewActiveItemChange',
                event: 'activeitemchange'
            },
            {
                fn: 'onNavMainViewPainted',
                event: 'painted'
            }
        ]
    },

    onItemListItemTap: function(dataview, index, target, record, e, eOpts) {
        console.log('tap');
    },

    onMyselectfield2Focus: function(selectfield, e, eOpts) {

        if(!this.pickerdate){
            this.pickerdate = Ext.create('Ext.Picker', {
                fullscreen:true,
                useTitles: true,
                slots:[
                {
                    name:'Hours',
                    title:'Hours',
                    id:'selectHours',

                    data : [
                    {text: '01', value: '01'},{text: '02', value: '02'},{text: '03', value: '03'},{text: '04', value: '04'},
                    {text: '05', value: '05'},{text: '06', value: '06'},{text: '07', value: '07'},{text: '08', value: '08'},
                    {text: '09', value: '09'},{text: '10', value: '10'},{text: '11', value: '11'},{text: '12', value: '12'},
                        {text: '13', value: '13'},{text: '14', value: '14'},{text: '15', value: '15'},{text: '16', value: '16'},
                    {text: '17', value: '17'},{text: '18', value: '18'},{text: '19', value: '19'},{text: '20', value: '20'},
                    {text: '21', value: '21'},{text: '22', value: '22'},{text: '23', value: '23'},{text: '24', value: '24'}
                    ]
                },
                {
                    name:'Minute',
                    title:'Minutes',
                    id:'selectMinute',
                    data:[

                    {text: '01', value: '01'},{text: '02', value: '02'},{text: '03', value: '03'},{text: '04', value: '04'},
                    {text: '05', value: '05'},{text: '06', value: '06'},{text: '07', value: '07'},{text: '08', value: '08'},
                    {text: '09', value: '09'},{text: '10', value: '10'},{text: '11', value: '11'},{text: '12', value: '12'},
                    {text: '13', value: '13'},{text: '14', value: '14'},{text: '15', value: '15'},{text: '16', value: '16'},
                    {text: '17', value: '17'},{text: '18', value: '18'},{text: '19', value: '19'},{text: '20', value: '20'},
                    {text: '21', value: '21'},{text: '22', value: '22'},{text: '23', value: '23'},{text: '24', value: '24'},{text: '25', value: '25'},
                    {text: '26', value: '26'},{text: '27', value: '27'},{text: '28', value: '28'},{text: '29', value: '29'},{text: '30', value: '30'},{text:'31',value:'31'},
                    {text: '32', value: '32'},{text: '33', value: '33'},{text: '34', value: '34'},{text: '35', value: '35'},
                    {text: '36', value: '36'},{text: '37', value: '37'},{text: '38', value: '38'},{text: '39', value: '39'},
                    {text: '40', value: '40'},{text: '41', value: '41'},{text: '42', value: '42'},{text: '43', value: '43'},
                    {text: '44', value: '44'},{text: '45', value: '45'},{text: '46', value: '46'},{text: '47', value: '47'},
                    {text: '48', value: '48'},{text: '49', value: '49'},{text: '50', value: '50'},{text: '51', value: '51'},
                    {text: '52', value: '52'},{text: '53', value: '53'},{text: '54', value: '54'},{text: '55', value: '55'},{text: '56', value: '56'},
                    {text: '57', value: '57'},{text: '58', value: '58'},{text: '59', value: '59'}
                    ]
                }

                ],
                listeners:{ change: function(obj,value,eOpts) {
                   // selectfield.setValue('Hello');
                    console.log(selectfield);

                    //   console.log(value);
                   // console.log(value.Hours+":"+value.Minute);
               //    this.setValue(value.Month+"/"+value.Date+"/"+value.Year);
                //    Ext.getCmp(selectfield.id).setValue(value.Hours/* +":"+value.Minute */);
                Ext.getCmp(selectfield.id).setValue(value.Hours+":"+value.Minute);

                    // obj.destroy();
                } }
            });

        }else{
            this.pickerdate.show();

        }



        /*
        [  {
            {text: '01', value: '01'},{text: '02', value: '02'},{text: '03', value: '03'},{text: '04', value: '04'},
                    {text: '05', value: '05'},{text: '06', value: '06'},{text: '07', value: '07'},{text: '08', value: '08'},
                    {text: '09', value: '09'},{text: '10', value: '10'},{text: '11', value: '11'},{text: '12', value: '12'},
                    {text: '13', value: '13'},{text: '14', value: '14'},{text: '15', value: '15'},{text: '16', value: '16'},
                    {text: '17', value: '17'},{text: '18', value: '18'},{text: '19', value: '19'},{text: '20', value: '20'},
                    {text: '21', value: '21'},{text: '22', value: '22'},{text: '23', value: '23'},{text: '24', value: '24'},{text: '25', value: '25'},
                    {text: '26', value: '26'},{text: '27', value: '27'},{text: '28', value: '28'},{text: '29', value: '29'},{text: '30', value: '30'},{text:'31',value:'31'},
                    {text: '32', value: '32'},{text: '33', value: '33'},{text: '34', value: '34'},{text: '35', value: '35'},
                    {text: '36', value: '36'},{text: '37', value: '37'},{text: '38', value: '38'},{text: '39', value: '39'},
                    {text: '40', value: '40'},{text: '41', value: '41'},{text: '42', value: '42'},{text: '43', value: '43'},
                    {text: '44', value: '44'},{text: '45', value: '45'},{text: '46', value: '46'},{text: '47', value: '47'},
                    {text: '48', value: '48'},{text: '49', value: '49'},{text: '50', value: '50'},{text: '51', value: '51'},
                    {text: '52', value: '52'},{text: '53', value: '53'},{text: '54', value: '54'},{text: '55', value: '55'},{text: '56', value: '56'},
                    {text: '57', value: '57'},{text: '58', value: '58'},{text: '59', value: '59'}
         },{
              {text: '01', value: '01'},{text: '02', value: '02'},{text: '03', value: '03'},{text: '04', value: '04'},
                    {text: '05', value: '05'},{text: '06', value: '06'},{text: '07', value: '07'},{text: '08', value: '08'},
                    {text: '09', value: '09'},{text: '10', value: '10'},{text: '11', value: '11'},{text: '12', value: '12'},
                        {text: '13', value: '13'},{text: '14', value: '14'},{text: '15', value: '15'},{text: '16', value: '16'},
                    {text: '17', value: '17'},{text: '18', value: '18'},{text: '19', value: '19'},{text: '20', value: '20'},
                    {text: '21', value: '21'},{text: '22', value: '22'},{text: '23', value: '23'},{text: '24', value: '24'}

         }
        ]

        */
    },

    onMyselectfield16Focus: function(selectfield, e, eOpts) {

        if(!this.pickerdate){
            this.pickerdate = Ext.create('Ext.Picker', {
                fullscreen:true,
                useTitles: true,
                slots:[
                {
                    name:'Hours',
                    title:'Hours',
                    id:'selectHours',

                    data : [
                    {text: '01', value: '01'},{text: '02', value: '02'},{text: '03', value: '03'},{text: '04', value: '04'},
                    {text: '05', value: '05'},{text: '06', value: '06'},{text: '07', value: '07'},{text: '08', value: '08'},
                    {text: '09', value: '09'},{text: '10', value: '10'},{text: '11', value: '11'},{text: '12', value: '12'},
                        {text: '13', value: '13'},{text: '14', value: '14'},{text: '15', value: '15'},{text: '16', value: '16'},
                    {text: '17', value: '17'},{text: '18', value: '18'},{text: '19', value: '19'},{text: '20', value: '20'},
                    {text: '21', value: '21'},{text: '22', value: '22'},{text: '23', value: '23'},{text: '24', value: '24'}
                    ]
                },
                {
                    name:'Minute',
                    title:'Minutes',
                    id:'selectMinute',
                    data:[

                    {text: '01', value: '01'},{text: '02', value: '02'},{text: '03', value: '03'},{text: '04', value: '04'},
                    {text: '05', value: '05'},{text: '06', value: '06'},{text: '07', value: '07'},{text: '08', value: '08'},
                    {text: '09', value: '09'},{text: '10', value: '10'},{text: '11', value: '11'},{text: '12', value: '12'},
                    {text: '13', value: '13'},{text: '14', value: '14'},{text: '15', value: '15'},{text: '16', value: '16'},
                    {text: '17', value: '17'},{text: '18', value: '18'},{text: '19', value: '19'},{text: '20', value: '20'},
                    {text: '21', value: '21'},{text: '22', value: '22'},{text: '23', value: '23'},{text: '24', value: '24'},{text: '25', value: '25'},
                    {text: '26', value: '26'},{text: '27', value: '27'},{text: '28', value: '28'},{text: '29', value: '29'},{text: '30', value: '30'},{text:'31',value:'31'},
                    {text: '32', value: '32'},{text: '33', value: '33'},{text: '34', value: '34'},{text: '35', value: '35'},
                    {text: '36', value: '36'},{text: '37', value: '37'},{text: '38', value: '38'},{text: '39', value: '39'},
                    {text: '40', value: '40'},{text: '41', value: '41'},{text: '42', value: '42'},{text: '43', value: '43'},
                    {text: '44', value: '44'},{text: '45', value: '45'},{text: '46', value: '46'},{text: '47', value: '47'},
                    {text: '48', value: '48'},{text: '49', value: '49'},{text: '50', value: '50'},{text: '51', value: '51'},
                    {text: '52', value: '52'},{text: '53', value: '53'},{text: '54', value: '54'},{text: '55', value: '55'},{text: '56', value: '56'},
                    {text: '57', value: '57'},{text: '58', value: '58'},{text: '59', value: '59'}
                    ]
                }

                ],
                listeners:{ change: function(obj,value,eOpts) {
                   // selectfield.setValue('Hello');
                    console.log(selectfield);

                       console.log(value);
                    console.log(value.Hours+":"+value.Minute);
               //    this.setValue(value.Month+"/"+value.Date+"/"+value.Year);
                //    Ext.getCmp(selectfield.id).setValue(value.Hours/* +":"+value.Minute */);
                Ext.getCmp(selectfield.id).setValue(value.Hours+":"+value.Minute);

                    // obj.destroy();
                } }
            });

        }else{
            this.pickerdate.show();

        }



        /*
        [  {
            {text: '01', value: '01'},{text: '02', value: '02'},{text: '03', value: '03'},{text: '04', value: '04'},
                    {text: '05', value: '05'},{text: '06', value: '06'},{text: '07', value: '07'},{text: '08', value: '08'},
                    {text: '09', value: '09'},{text: '10', value: '10'},{text: '11', value: '11'},{text: '12', value: '12'},
                    {text: '13', value: '13'},{text: '14', value: '14'},{text: '15', value: '15'},{text: '16', value: '16'},
                    {text: '17', value: '17'},{text: '18', value: '18'},{text: '19', value: '19'},{text: '20', value: '20'},
                    {text: '21', value: '21'},{text: '22', value: '22'},{text: '23', value: '23'},{text: '24', value: '24'},{text: '25', value: '25'},
                    {text: '26', value: '26'},{text: '27', value: '27'},{text: '28', value: '28'},{text: '29', value: '29'},{text: '30', value: '30'},{text:'31',value:'31'},
                    {text: '32', value: '32'},{text: '33', value: '33'},{text: '34', value: '34'},{text: '35', value: '35'},
                    {text: '36', value: '36'},{text: '37', value: '37'},{text: '38', value: '38'},{text: '39', value: '39'},
                    {text: '40', value: '40'},{text: '41', value: '41'},{text: '42', value: '42'},{text: '43', value: '43'},
                    {text: '44', value: '44'},{text: '45', value: '45'},{text: '46', value: '46'},{text: '47', value: '47'},
                    {text: '48', value: '48'},{text: '49', value: '49'},{text: '50', value: '50'},{text: '51', value: '51'},
                    {text: '52', value: '52'},{text: '53', value: '53'},{text: '54', value: '54'},{text: '55', value: '55'},{text: '56', value: '56'},
                    {text: '57', value: '57'},{text: '58', value: '58'},{text: '59', value: '59'}
         },{
              {text: '01', value: '01'},{text: '02', value: '02'},{text: '03', value: '03'},{text: '04', value: '04'},
                    {text: '05', value: '05'},{text: '06', value: '06'},{text: '07', value: '07'},{text: '08', value: '08'},
                    {text: '09', value: '09'},{text: '10', value: '10'},{text: '11', value: '11'},{text: '12', value: '12'},
                        {text: '13', value: '13'},{text: '14', value: '14'},{text: '15', value: '15'},{text: '16', value: '16'},
                    {text: '17', value: '17'},{text: '18', value: '18'},{text: '19', value: '19'},{text: '20', value: '20'},
                    {text: '21', value: '21'},{text: '22', value: '22'},{text: '23', value: '23'},{text: '24', value: '24'}

         }
        ]

        */
    },

    onSeleFldFocus: function(selectfield, e, eOpts) {

        if(!this.pickerdate){
            this.pickerdate = Ext.create('Ext.Picker', {
                fullscreen:true,
                useTitles: true,
                slots:[
                {
                    name:'Hours',
                    title:'Hours',
                    id:'selectHours',

                    data : [
                    {text: '01', value: '01'},{text: '02', value: '02'},{text: '03', value: '03'},{text: '04', value: '04'},
                    {text: '05', value: '05'},{text: '06', value: '06'},{text: '07', value: '07'},{text: '08', value: '08'},
                    {text: '09', value: '09'},{text: '10', value: '10'},{text: '11', value: '11'},{text: '12', value: '12'},
                        {text: '13', value: '13'},{text: '14', value: '14'},{text: '15', value: '15'},{text: '16', value: '16'},
                    {text: '17', value: '17'},{text: '18', value: '18'},{text: '19', value: '19'},{text: '20', value: '20'},
                    {text: '21', value: '21'},{text: '22', value: '22'},{text: '23', value: '23'},{text: '24', value: '24'}
                    ]
                },
                {
                    name:'Minute',
                    title:'Minutes',
                    id:'selectMinute',
                    data:[

                    {text: '01', value: '01'},{text: '02', value: '02'},{text: '03', value: '03'},{text: '04', value: '04'},
                    {text: '05', value: '05'},{text: '06', value: '06'},{text: '07', value: '07'},{text: '08', value: '08'},
                    {text: '09', value: '09'},{text: '10', value: '10'},{text: '11', value: '11'},{text: '12', value: '12'},
                    {text: '13', value: '13'},{text: '14', value: '14'},{text: '15', value: '15'},{text: '16', value: '16'},
                    {text: '17', value: '17'},{text: '18', value: '18'},{text: '19', value: '19'},{text: '20', value: '20'},
                    {text: '21', value: '21'},{text: '22', value: '22'},{text: '23', value: '23'},{text: '24', value: '24'},{text: '25', value: '25'},
                    {text: '26', value: '26'},{text: '27', value: '27'},{text: '28', value: '28'},{text: '29', value: '29'},{text: '30', value: '30'},{text:'31',value:'31'},
                    {text: '32', value: '32'},{text: '33', value: '33'},{text: '34', value: '34'},{text: '35', value: '35'},
                    {text: '36', value: '36'},{text: '37', value: '37'},{text: '38', value: '38'},{text: '39', value: '39'},
                    {text: '40', value: '40'},{text: '41', value: '41'},{text: '42', value: '42'},{text: '43', value: '43'},
                    {text: '44', value: '44'},{text: '45', value: '45'},{text: '46', value: '46'},{text: '47', value: '47'},
                    {text: '48', value: '48'},{text: '49', value: '49'},{text: '50', value: '50'},{text: '51', value: '51'},
                    {text: '52', value: '52'},{text: '53', value: '53'},{text: '54', value: '54'},{text: '55', value: '55'},{text: '56', value: '56'},
                    {text: '57', value: '57'},{text: '58', value: '58'},{text: '59', value: '59'}
                    ]
                }

                ],
                listeners:{ change: function(obj,value,eOpts) {
                    selectfield.setValue('Hello');
                    console.log(selectfield);

                       console.log(value);
                    console.log(value.Hours+":"+value.Minute);
               //    this.setValue(value.Month+"/"+value.Date+"/"+value.Year);
                //    Ext.getCmp(selectfield.id).setValue(value.Hours/* +":"+value.Minute */);
               // Ext.getCmp(selectfield.id).setText(value.Hours+":"+value.Minute);

                    // obj.destroy();
                } }
            });

        }else{
            this.pickerdate.show();

        }



        /*
        [  {
            {text: '01', value: '01'},{text: '02', value: '02'},{text: '03', value: '03'},{text: '04', value: '04'},
                    {text: '05', value: '05'},{text: '06', value: '06'},{text: '07', value: '07'},{text: '08', value: '08'},
                    {text: '09', value: '09'},{text: '10', value: '10'},{text: '11', value: '11'},{text: '12', value: '12'},
                    {text: '13', value: '13'},{text: '14', value: '14'},{text: '15', value: '15'},{text: '16', value: '16'},
                    {text: '17', value: '17'},{text: '18', value: '18'},{text: '19', value: '19'},{text: '20', value: '20'},
                    {text: '21', value: '21'},{text: '22', value: '22'},{text: '23', value: '23'},{text: '24', value: '24'},{text: '25', value: '25'},
                    {text: '26', value: '26'},{text: '27', value: '27'},{text: '28', value: '28'},{text: '29', value: '29'},{text: '30', value: '30'},{text:'31',value:'31'},
                    {text: '32', value: '32'},{text: '33', value: '33'},{text: '34', value: '34'},{text: '35', value: '35'},
                    {text: '36', value: '36'},{text: '37', value: '37'},{text: '38', value: '38'},{text: '39', value: '39'},
                    {text: '40', value: '40'},{text: '41', value: '41'},{text: '42', value: '42'},{text: '43', value: '43'},
                    {text: '44', value: '44'},{text: '45', value: '45'},{text: '46', value: '46'},{text: '47', value: '47'},
                    {text: '48', value: '48'},{text: '49', value: '49'},{text: '50', value: '50'},{text: '51', value: '51'},
                    {text: '52', value: '52'},{text: '53', value: '53'},{text: '54', value: '54'},{text: '55', value: '55'},{text: '56', value: '56'},
                    {text: '57', value: '57'},{text: '58', value: '58'},{text: '59', value: '59'}
         },{
              {text: '01', value: '01'},{text: '02', value: '02'},{text: '03', value: '03'},{text: '04', value: '04'},
                    {text: '05', value: '05'},{text: '06', value: '06'},{text: '07', value: '07'},{text: '08', value: '08'},
                    {text: '09', value: '09'},{text: '10', value: '10'},{text: '11', value: '11'},{text: '12', value: '12'},
                        {text: '13', value: '13'},{text: '14', value: '14'},{text: '15', value: '15'},{text: '16', value: '16'},
                    {text: '17', value: '17'},{text: '18', value: '18'},{text: '19', value: '19'},{text: '20', value: '20'},
                    {text: '21', value: '21'},{text: '22', value: '22'},{text: '23', value: '23'},{text: '24', value: '24'}

         }
        ]

        */
    },

    onSeleFldFocus1: function(selectfield, e, eOpts) {

        if(!this.pickerdate){
            this.pickerdate = Ext.create('Ext.Picker', {
                fullscreen:true,
                useTitles: true,
                slots:[
                {
                    name:'Hours',
                    title:'Hours',
                    id:'selectHours',

                    data : [
                    {text: '01', value: '01'},{text: '02', value: '02'},{text: '03', value: '03'},{text: '04', value: '04'},
                    {text: '05', value: '05'},{text: '06', value: '06'},{text: '07', value: '07'},{text: '08', value: '08'},
                    {text: '09', value: '09'},{text: '10', value: '10'},{text: '11', value: '11'},{text: '12', value: '12'},
                        {text: '13', value: '13'},{text: '14', value: '14'},{text: '15', value: '15'},{text: '16', value: '16'},
                    {text: '17', value: '17'},{text: '18', value: '18'},{text: '19', value: '19'},{text: '20', value: '20'},
                    {text: '21', value: '21'},{text: '22', value: '22'},{text: '23', value: '23'},{text: '24', value: '24'}
                    ]
                },
                {
                    name:'Minute',
                    title:'Minutes',
                    id:'selectMinute',
                    data:[

                    {text: '01', value: '01'},{text: '02', value: '02'},{text: '03', value: '03'},{text: '04', value: '04'},
                    {text: '05', value: '05'},{text: '06', value: '06'},{text: '07', value: '07'},{text: '08', value: '08'},
                    {text: '09', value: '09'},{text: '10', value: '10'},{text: '11', value: '11'},{text: '12', value: '12'},
                    {text: '13', value: '13'},{text: '14', value: '14'},{text: '15', value: '15'},{text: '16', value: '16'},
                    {text: '17', value: '17'},{text: '18', value: '18'},{text: '19', value: '19'},{text: '20', value: '20'},
                    {text: '21', value: '21'},{text: '22', value: '22'},{text: '23', value: '23'},{text: '24', value: '24'},{text: '25', value: '25'},
                    {text: '26', value: '26'},{text: '27', value: '27'},{text: '28', value: '28'},{text: '29', value: '29'},{text: '30', value: '30'},{text:'31',value:'31'},
                    {text: '32', value: '32'},{text: '33', value: '33'},{text: '34', value: '34'},{text: '35', value: '35'},
                    {text: '36', value: '36'},{text: '37', value: '37'},{text: '38', value: '38'},{text: '39', value: '39'},
                    {text: '40', value: '40'},{text: '41', value: '41'},{text: '42', value: '42'},{text: '43', value: '43'},
                    {text: '44', value: '44'},{text: '45', value: '45'},{text: '46', value: '46'},{text: '47', value: '47'},
                    {text: '48', value: '48'},{text: '49', value: '49'},{text: '50', value: '50'},{text: '51', value: '51'},
                    {text: '52', value: '52'},{text: '53', value: '53'},{text: '54', value: '54'},{text: '55', value: '55'},{text: '56', value: '56'},
                    {text: '57', value: '57'},{text: '58', value: '58'},{text: '59', value: '59'}
                    ]
                }

                ],
                listeners:{ change: function(obj,value,eOpts) {
                    selectfield.setValue('Hello');
                    console.log(selectfield);

                       console.log(value);
                    console.log(value.Hours+":"+value.Minute);
               //    this.setValue(value.Month+"/"+value.Date+"/"+value.Year);
                //    Ext.getCmp(selectfield.id).setValue(value.Hours/* +":"+value.Minute */);
               // Ext.getCmp(selectfield.id).setText(value.Hours+":"+value.Minute);

                    // obj.destroy();
                } }
            });

        }else{
            this.pickerdate.show();

        }



        /*
        [  {
            {text: '01', value: '01'},{text: '02', value: '02'},{text: '03', value: '03'},{text: '04', value: '04'},
                    {text: '05', value: '05'},{text: '06', value: '06'},{text: '07', value: '07'},{text: '08', value: '08'},
                    {text: '09', value: '09'},{text: '10', value: '10'},{text: '11', value: '11'},{text: '12', value: '12'},
                    {text: '13', value: '13'},{text: '14', value: '14'},{text: '15', value: '15'},{text: '16', value: '16'},
                    {text: '17', value: '17'},{text: '18', value: '18'},{text: '19', value: '19'},{text: '20', value: '20'},
                    {text: '21', value: '21'},{text: '22', value: '22'},{text: '23', value: '23'},{text: '24', value: '24'},{text: '25', value: '25'},
                    {text: '26', value: '26'},{text: '27', value: '27'},{text: '28', value: '28'},{text: '29', value: '29'},{text: '30', value: '30'},{text:'31',value:'31'},
                    {text: '32', value: '32'},{text: '33', value: '33'},{text: '34', value: '34'},{text: '35', value: '35'},
                    {text: '36', value: '36'},{text: '37', value: '37'},{text: '38', value: '38'},{text: '39', value: '39'},
                    {text: '40', value: '40'},{text: '41', value: '41'},{text: '42', value: '42'},{text: '43', value: '43'},
                    {text: '44', value: '44'},{text: '45', value: '45'},{text: '46', value: '46'},{text: '47', value: '47'},
                    {text: '48', value: '48'},{text: '49', value: '49'},{text: '50', value: '50'},{text: '51', value: '51'},
                    {text: '52', value: '52'},{text: '53', value: '53'},{text: '54', value: '54'},{text: '55', value: '55'},{text: '56', value: '56'},
                    {text: '57', value: '57'},{text: '58', value: '58'},{text: '59', value: '59'}
         },{
              {text: '01', value: '01'},{text: '02', value: '02'},{text: '03', value: '03'},{text: '04', value: '04'},
                    {text: '05', value: '05'},{text: '06', value: '06'},{text: '07', value: '07'},{text: '08', value: '08'},
                    {text: '09', value: '09'},{text: '10', value: '10'},{text: '11', value: '11'},{text: '12', value: '12'},
                        {text: '13', value: '13'},{text: '14', value: '14'},{text: '15', value: '15'},{text: '16', value: '16'},
                    {text: '17', value: '17'},{text: '18', value: '18'},{text: '19', value: '19'},{text: '20', value: '20'},
                    {text: '21', value: '21'},{text: '22', value: '22'},{text: '23', value: '23'},{text: '24', value: '24'}

         }
        ]

        */
    },

    onMycarouselActiveItemChange: function(container, value, oldValue, eOpts) {


        if( tekwave.app.lastActiveIndex<container.getActiveIndex()){
            Ext.getCmp('formCatTag');
            Ext.getCmp('topBarItem').items.items[container.getActiveIndex()-1].hide();
            Ext.getCmp('topBarItem').items.items[container.getActiveIndex()-1].hide();
               Ext.getCmp('topBarItem').items.items[container.getActiveIndex()].setCls('lebelFont themeFontBlue fontFamilyCath');
        //new slection bar
         //Ext.getCmp('formCatTag').items.items[container.getActiveIndex()].setCls('lebelFont themeFontBlue fontFamilyCath');
        }else{
          //  console.log(container.getActiveIndex());
            Ext.getCmp('topBarItem').items.items[container.getActiveIndex()].show();
             Ext.getCmp('topBarItem').items.items[container.getActiveIndex()+1].setCls('lebelFont fontFamilyCath');

              Ext.getCmp('topBarItem').items.items[container.getActiveIndex()].setCls('lebelFont themeFontBlue fontFamilyCath');
         //new slection bar
        //    Ext.getCmp('formCatTag').items.items[container.getActiveIndex()].setCls('lebelFont themeFontBlue fontFamilyCath');

        }

        //console.log(Ext.getCmp('topBarItem').items.items);
        tekwave.app.lastActiveIndex=container.getActiveIndex();
        console.log(tekwave.app.lastActiveIndex);
        /*
        this.element.on({
                    swipe: function(e, node, options) {
                        if(e.direction == "left") {
                           // alert("Hey! I swipe left");
                            console.log(e.direction );

        console.log(Ext.getCmp('topBarItem').items.items[container.getActiveIndex()-1].hide());
                        } else {
                          //  alert("Hey! I swipe right");
                             console.log(e.direction );
        console.log(Ext.getCmp('topBarItem').items.items[container.getActiveIndex()+1].show());
                        }
                    }
                });
            */
           /*
        console.log(value);

        console.log(oldValue);

        console.log(container.getActiveIndex());
        console.log(container.getDirection());


        console.log(Ext.getCmp('topBarItem'));


        console.log(Ext.getCmp('topBarItem').items.items[container.getActiveIndex()-1].hide());

        */
    },

    onSettingMenuBtnTap: function(button, e, eOpts) {
        tekwave.app.getControllerInstances()['tekwave.controller.MainController'].navigation('menuCont');

        //Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('menuCont'), {type: 'slide', direction: 'down'});
    },

    onQuickLinkMenuBtnTap: function(button, e, eOpts) {
        tekwave.app.getControllerInstances()['tekwave.controller.MainController'].navigation('menuCont');

        //Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('menuCont'), {type: 'slide', direction: 'down'});
    },

    onQuickLinkDataListItemTap: function(dataview, index, target, record, e, eOpts) {


        Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('dailyRprtCont'), {type: 'slide', direction: 'down'});
    },

    onAnnouncementMsgMenuBtnTap: function(button, e, eOpts) {
        tekwave.app.getControllerInstances()['tekwave.controller.MainController'].navigation('menuCont');

        //Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('menuCont'), {type: 'slide', direction: 'down'});
    },

    onAnnounsMenuBtnTap: function(button, e, eOpts) {
        tekwave.app.getControllerInstances()['tekwave.controller.MainController'].navigation('menuCont');

        //Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('menuCont'), {type: 'slide', direction: 'down'});
    },

    onAnnounsSelectBtnTap: function(button, e, eOpts) {
        //alert(button.getHtml());
        console.log(Ext.getCmp('AllAnnouncementList'));



        if(button.getHtml()==='<img src="img/img/btn_radio.png" width="100%" height="100%" />'){
            button.setHtml('<img src="img/img/btn_radio_sel.png" width="100%" height="100%" />');

        }else{
          button.setHtml('<img src="img/img/btn_radio.png" width="100%" height="100%" />');

        }
    },

    onAllAnnouncementListItemTap: function(dataview, index, target, record, e, eOpts) {
        console.log(record);

        if(event.target.type == "button")
                {
                    //Ext.Msg.alert('You clicked on the Button ...', 'Edit ' + event.target.name);

                    if(event.target.name==record.data.menuName)  //event.target.id is value of button id
                    {
                        console.log(document.getElementById(event.target.id).className);
        //Ext.Msg.alert('You clicked on the Button ...', 'Edit ' + event.target.name);

                     // document.getElementById.setClass='checked';
                        if(document.getElementById(event.target.id).className==='uncheck') {
                            document.getElementById(event.target.id).className = 'checked';

                        }else{
                            document.getElementById(event.target.id).className = 'uncheck';

                        }



                    }
                }else{
                    Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('announceMentMsgCont'), {type: 'slide', direction: 'down'});

                }


    },

    onFullMsgMenuBtnTap: function(button, e, eOpts) {
        tekwave.app.getControllerInstances()['tekwave.controller.MainController'].navigation('menuCont');

        //Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('menuCont'), {type: 'slide', direction: 'down'});
    },

    onAllMsgMenuBtnTap: function(button, e, eOpts) {
        tekwave.app.getControllerInstances()['tekwave.controller.MainController'].navigation('menuCont');

        //Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('menuCont'), {type: 'slide', direction: 'down'});
    },

    onAllMsgListItemTap: function(dataview, index, target, record, e, eOpts) {


        Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('fullMsgCont'), {type: 'slide', direction: 'down'});
    },

    onSitePostMenuBtnTap: function(button, e, eOpts) {
        tekwave.app.getControllerInstances()['tekwave.controller.MainController'].navigation('menuCont');

        //Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('menuCont'), {type: 'slide', direction: 'down'});
    },

    onSiteListItemTap: function(dataview, index, target, record, e, eOpts) {
        console.log(record);
        console.log(record.data.SitePostsPerUser.length);
        console.log(record.data.SitePostsPerUser);

        var site=record.data.name+record.data.siteId;


        //If form already created
        if(Ext.getCmp(site)){

            Ext.getCmp('navMainView').setActiveItem(Ext.getCmp(site));


        }else{


        var title= record.data.name;
        var font;
            if(title.length>20){

                 font='font-size : 14px;';


                }else{
                     font='';
                }

        Ext.getCmp('navMainView').add({
                        xtype: 'container',
                        cls : 'backgrounWhite',
                        id: site,
                        items: [
                            {
                                xtype: 'titlebar',
                                cls: [
                                    'titleBar',
                                    'fontFamilyCath'
                                ],
                                docked: 'top',
                                title: record.data.name,
                                style : font,

                                items: [
                                    {
                                        xtype: 'button',
                                        handler: function(button, e) {
                                            tekwave.app.getControllerInstances()['tekwave.controller.MainController'].navigation('menuCont');
                                        },
                                        height: 30,
                                        html: '<img src="img/img/btn_menu.png" width="80%" height="80%" />',
                                        ui: 'plain',
                                        width: 50,
                                        text: ''
                                    }
                                ]
                            }
                    ]

        });//Adding Title Bar



        //Adding Stores and List of Post

             Ext.define("postModel", {
                                extend: "Ext.data.Model",
                                    config: {
                                     fields: ['#text','leftColor', 'postId', 'daractivityTypeMandatory', 'enableHostSignatureCapture', 'enableLogistics', 'enableLogisticsDeparture', 'enableLogisticsDlscan', 'enableLogisticsPassPrinting', 'enableLogisticsSignatureCapture', 'enablePackages', 'enablePassPrinting', 'enableSecurityTours', 'enableVisitorDlscan', 'enableVisitorPicture', 'enableVisitorSignatureCapture', 'enableVisitors', 'gsRelievedByMandatory',  'gsRelievedMandatory', 'isDefault', 'postName', 'printingLabel' , 'siteId']
                                    }
                            });

                          var postStore = Ext.create('Ext.data.Store', {
                                    model: 'postModel',
                                   // data : [{"siteId" : 1}],
                                    id : 'postStore'+site//,
                                    //autoLoad: true,
                                   //  defaultrootProperty: 'TCResponse',

                                });

                              var leftColor, no, newNo;
                              newNo=0;



           var postList=record.data.SitePostsPerUser;

         var postId,daractivityTypeMandatory, enableHostSignatureCapture, enableLogistics, enableLogisticsDeparture, enableLogisticsDlscan, enableLogisticsPassPrinting, enableLogisticsSignatureCapture, enablePackages, enablePassPrinting, enableSecurityTours, enableVisitorDlscan, enableVisitorPicture, enableVisitorSignatureCapture, enableVisitors, gsRelievedByMandatory,  gsRelievedMandatory, isDefault, postName, printingLabel , siteId;


            if(postList.length===undefined && postList.attributes.postId!==''){

               // alert(postList.attributes.postId);
                //////
                leftColor='blue'
                  if(postList.attributes['postId'] && postList.attributes['postId']!==undefined ){
                                        postId=postList.attributes['postId'];
                                       }else{
                                            postId='';
                                       }


                  if(postList['daractivityTypeMandatory'] && postList['daractivityTypeMandatory']!==undefined ){
                                        daractivityTypeMandatory=postList['daractivityTypeMandatory']["#text"];
                                       }else{
                                         daractivityTypeMandatory='';
                                       }

                                        if(postList['postName'] && postList['postName']!==undefined ){
                                        postName=postList['postName']["#text"];
                                       }else{
                                         postName='';
                                       }
                    if(postList['enableHostSignatureCapture'] && postList['enableHostSignatureCapture']!==undefined ){
                                        enableHostSignatureCapture=postList['enableHostSignatureCapture']["#text"];
                                       }else{
                                         enableHostSignatureCapture='';
                                       }

                     if(postList['enableLogistics'] && postList['enableLogistics']!==undefined ){
                                        enableLogistics=postList['enableLogistics']["#text"];
                                       }else{
                                         enableLogistics='';
                                       }

                    if(postList['enableLogisticsDeparture'] && postList['enableLogisticsDeparture']!==undefined ){
                                        enableLogisticsDeparture=postList['enableLogisticsDeparture']["#text"];
                                       }else{
                                         enableLogisticsDeparture='';
                                       }
                    if(postList['enableLogisticsDlscan'] && postList['enableLogisticsDlscan']!==undefined ){
                                        enableLogisticsDlscan=postList['enableLogisticsDlscan']["#text"];
                                       }else{
                                         enableLogisticsDlscan='';
                                       }
                   if(postList['enableLogisticsPassPrinting'] && postList['enableLogisticsPassPrinting']!==undefined ){
                                        enableLogisticsPassPrinting=postList['enableLogisticsPassPrinting']["#text"];
                                       }else{
                                         enableLogisticsPassPrinting='';
                                       }
                    if(postList['enableLogisticsSignatureCapture'] && postList['enableLogisticsSignatureCapture']!==undefined ){
                                        enableLogisticsPassPrinting=postList['enableLogisticsSignatureCapture']["#text"];
                                       }else{
                                         enableLogisticsPassPrinting='';
                                       }
                    if(postList['enablePackages'] && postList['enablePackages']!==undefined ){
                                        enableLogisticsPassPrinting=postList['enablePackages']["#text"];
                                       }else{
                                         enableLogisticsPassPrinting='';
                                       }
                    if(postList['enablePassPrinting'] && postList['enablePassPrinting']!==undefined ){
                                        enablePassPrinting=postList['enablePassPrinting']["#text"];
                                       }else{
                                         enablePassPrinting='';
                                       }
                     if(postList['enableSecurityTours'] && postList['enableSecurityTours']!==undefined ){
                                        enableSecurityTours=postList['enableSecurityTours']["#text"];
                                       }else{
                                         enableSecurityTours='';
                                       }
                    if(postList['enableVisitorDlscan'] && postList['enableVisitorDlscan']!==undefined ){
                                        enableVisitorDlscan=postList['enableVisitorDlscan']["#text"];
                                       }else{
                                         enableVisitorDlscan='';
                                       }
                    if(postList['enableVisitorPicture'] && postList['enableVisitorPicture']!==undefined ){
                                        enableVisitorPicture=postList['enableVisitorPicture']["#text"];
                                       }else{
                                         enableVisitorPicture='';
                                       }
                    if(postList['enableVisitorSignatureCapture'] && postList['enableVisitorSignatureCapture']!==undefined ){
                                        enableVisitorSignatureCapture=postList['enableVisitorSignatureCapture']["#text"];
                                       }else{
                                         enableVisitorSignatureCapture='';
                                       }
                     if(postList['enableVisitors'] && postList['enableVisitors']!==undefined ){
                                        enableVisitors=postList['enableVisitors']["#text"];
                                       }else{
                                         enableVisitors='';
                                       }
                    if(postList['gsRelievedByMandatory'] && postList['gsRelievedByMandatory']!==undefined ){
                                        gsRelievedByMandatory=postList['gsRelievedByMandatory']["#text"];
                                       }else{
                                         gsRelievedByMandatory='';
                                       }
                    if(postList['isDefault'] && postList['isDefault']!==undefined ){
                                        isDefault=postList['isDefault']["#text"];
                                       }else{
                                         isDefault='';
                                       }
                    if(postList['postId'] && postList['postId']!==undefined ){
                                        postId=postList['postId']["#text"];
                                       }else{
                                         postId='';
                                       }
                     if(postList['printingLabel'] && postList['printingLabel']!==undefined ){
                                        printingLabel=postList['printingLabel']["#text"];
                                       }else{
                                         printingLabel='';
                                       }
                     if(postList['siteId'] && postList['siteId']!==undefined ){
                                        siteId=postList['siteId']["#text"];
                                       }else{
                                         siteId='';
                                       }


                    postStore.add({
                        'leftColor' : leftColor,
                        'daractivityTypeMandatory': daractivityTypeMandatory,
                        'postName':postName,
                        'enableHostSignatureCapture':enableHostSignatureCapture,
                        'enableLogistics':enableLogistics,
                        'enableLogisticsDeparture':enableLogisticsDeparture,
                        'enableLogisticsDlscan':enableLogisticsDlscan,
                        'enableLogisticsPassPrinting':enableLogisticsPassPrinting,
                        'enableLogisticsSignatureCapture':enableLogisticsSignatureCapture,
                        'enablePackages':enablePackages,
                        'enablePassPrinting':enablePassPrinting,
                        'enableSecurityTours':enableSecurityTours,
                        'enableVisitorDlscan':enableVisitorDlscan,
                        'enableVisitorPicture':enableVisitorPicture,
                        'enableVisitorSignatureCapture':enableVisitorSignatureCapture,
                        'enableVisitors':enableVisitors,
                        'gsRelievedByMandatory':gsRelievedByMandatory,
                        'gsRelievedMandatory':gsRelievedMandatory,
                        'isDefault':isDefault,
                        'postId' :postId,
                        'printingLabel' :printingLabel,
                        'siteId' :siteId
                        });
                    postStore.sync();




                  createPostList( 'postStore'+site);//creating list



                ///////
            }else if (postList.length!==0 && postList.length!==undefined ){

             //   alert('d');
                for (var i=0; i<postList.length; i++){
                   newNo=newNo+1;

                if (newNo===4){
                    newNo=0;
                }


                if(newNo===0){
                    leftColor='red';
                   //  console.log(newNo+'--'+leftColor);
                }else if(newNo===1){
                    leftColor='blue';
                   //  console.log(newNo+'--'+leftColor);
                }
                else if(newNo===2){
                    leftColor='green';
                   //  console.log(newNo+'--'+leftColor);
                }else if(newNo===3){
                    leftColor='yellow';
                   //   console.log(newNo+'--'+leftColor);
                }
                 console.log(newNo+'--'+leftColor);





                                       if(postList[i].attributes['postId'] && postList[i].attributes['postId']!==undefined ){
                                        postId=postList[i].attributes['postId'];
                                       }else{
                                            postId='';
                                       }


                                       if(postList[i]['daractivityTypeMandatory'] && postList[i]['daractivityTypeMandatory']!==undefined ){
                                        daractivityTypeMandatory=postList[i]['daractivityTypeMandatory']["#text"];
                                       }else{
                                         daractivityTypeMandatory='';
                                       }

                                        if(postList[i]['postName'] && postList[i]['postName']!==undefined ){
                                        postName=postList[i]['postName']["#text"];
                                       }else{
                                         postName='';
                                       }
                    if(postList[i]['enableHostSignatureCapture'] && postList[i]['enableHostSignatureCapture']!==undefined ){
                                        enableHostSignatureCapture=postList[i]['enableHostSignatureCapture']["#text"];
                                       }else{
                                         enableHostSignatureCapture='';
                                       }

                     if(postList[i]['enableLogistics'] && postList[i]['enableLogistics']!==undefined ){
                                        enableLogistics=postList[i]['enableLogistics']["#text"];
                                       }else{
                                         enableLogistics='';
                                       }

                    if(postList[i]['enableLogisticsDeparture'] && postList[i]['enableLogisticsDeparture']!==undefined ){
                                        enableLogisticsDeparture=postList[i]['enableLogisticsDeparture']["#text"];
                                       }else{
                                         enableLogisticsDeparture='';
                                       }
                    if(postList[i]['enableLogisticsDlscan'] && postList[i]['enableLogisticsDlscan']!==undefined ){
                                        enableLogisticsDlscan=postList[i]['enableLogisticsDlscan']["#text"];
                                       }else{
                                         enableLogisticsDlscan='';
                                       }
                   if(postList[i]['enableLogisticsPassPrinting'] && postList[i]['enableLogisticsPassPrinting']!==undefined ){
                                        enableLogisticsPassPrinting=postList[i]['enableLogisticsPassPrinting']["#text"];
                                       }else{
                                         enableLogisticsPassPrinting='';
                                       }
                    if(postList[i]['enableLogisticsSignatureCapture'] && postList[i]['enableLogisticsSignatureCapture']!==undefined ){
                                        enableLogisticsPassPrinting=postList[i]['enableLogisticsSignatureCapture']["#text"];
                                       }else{
                                         enableLogisticsPassPrinting='';
                                       }
                    if(postList[i]['enablePackages'] && postList[i]['enablePackages']!==undefined ){
                                        enableLogisticsPassPrinting=postList[i]['enablePackages']["#text"];
                                       }else{
                                         enableLogisticsPassPrinting='';
                                       }
                    if(postList[i]['enablePassPrinting'] && postList[i]['enablePassPrinting']!==undefined ){
                                        enablePassPrinting=postList[i]['enablePassPrinting']["#text"];
                                       }else{
                                         enablePassPrinting='';
                                       }
                     if(postList[i]['enableSecurityTours'] && postList[i]['enableSecurityTours']!==undefined ){
                                        enableSecurityTours=postList[i]['enableSecurityTours']["#text"];
                                       }else{
                                         enableSecurityTours='';
                                       }
                    if(postList[i]['enableVisitorDlscan'] && postList[i]['enableVisitorDlscan']!==undefined ){
                                        enableVisitorDlscan=postList[i]['enableVisitorDlscan']["#text"];
                                       }else{
                                         enableVisitorDlscan='';
                                       }
                    if(postList[i]['enableVisitorPicture'] && postList[i]['enableVisitorPicture']!==undefined ){
                                        enableVisitorPicture=postList[i]['enableVisitorPicture']["#text"];
                                       }else{
                                         enableVisitorPicture='';
                                       }
                    if(postList[i]['enableVisitorSignatureCapture'] && postList[i]['enableVisitorSignatureCapture']!==undefined ){
                                        enableVisitorSignatureCapture=postList[i]['enableVisitorSignatureCapture']["#text"];
                                       }else{
                                         enableVisitorSignatureCapture='';
                                       }
                     if(postList[i]['enableVisitors'] && postList[i]['enableVisitors']!==undefined ){
                                        enableVisitors=postList[i]['enableVisitors']["#text"];
                                       }else{
                                         enableVisitors='';
                                       }
                    if(postList[i]['gsRelievedByMandatory'] && postList[i]['gsRelievedByMandatory']!==undefined ){
                                        gsRelievedByMandatory=postList[i]['gsRelievedByMandatory']["#text"];
                                       }else{
                                         gsRelievedByMandatory='';
                                       }
                    if(postList[i]['isDefault'] && postList[i]['isDefault']!==undefined ){
                                        isDefault=postList[i]['isDefault']["#text"];
                                       }else{
                                         isDefault='';
                                       }
                    if(postList[i]['postId'] && postList[i]['postId']!==undefined ){
                                        postId=postList[i]['postId']["#text"];
                                       }else{
                                         postId='';
                                       }
                     if(postList[i]['printingLabel'] && postList[i]['printingLabel']!==undefined ){
                                        printingLabel=postList[i]['printingLabel']["#text"];
                                       }else{
                                         printingLabel='';
                                       }
                     if(postList[i]['siteId'] && postList[i]['siteId']!==undefined ){
                                        siteId=postList[i]['siteId']["#text"];
                                       }else{
                                         siteId='';
                                       }


                    postStore.add({
                        'leftColor' : leftColor,
                        'daractivityTypeMandatory': daractivityTypeMandatory,
                        'postName':postName,
                        'enableHostSignatureCapture':enableHostSignatureCapture,
                        'enableLogistics':enableLogistics,
                        'enableLogisticsDeparture':enableLogisticsDeparture,
                        'enableLogisticsDlscan':enableLogisticsDlscan,
                        'enableLogisticsPassPrinting':enableLogisticsPassPrinting,
                        'enableLogisticsSignatureCapture':enableLogisticsSignatureCapture,
                        'enablePackages':enablePackages,
                        'enablePassPrinting':enablePassPrinting,
                        'enableSecurityTours':enableSecurityTours,
                        'enableVisitorDlscan':enableVisitorDlscan,
                        'enableVisitorPicture':enableVisitorPicture,
                        'enableVisitorSignatureCapture':enableVisitorSignatureCapture,
                        'enableVisitors':enableVisitors,
                        'gsRelievedByMandatory':gsRelievedByMandatory,
                        'gsRelievedMandatory':gsRelievedMandatory,
                        'isDefault':isDefault,
                        'postId' :postId,
                        'printingLabel' :printingLabel,
                        'siteId' :siteId
                        });
                    postStore.sync();



                }//end for



                createPostList( 'postStore'+site);//creating list
            }//End else if of no t undefined

            //Add list to New post container










        }//End create post view










        function createPostList(postStore){


            Ext.getCmp(site).add(
            {
                                xtype: 'dataview',
                                itemHeight: '80',
                                height: '100%',
                               // id: 'siteList',
                               // itemId: 'mydataview5',
                                itemTpl: [
                                    '<div class="menuList" style="color : gray; border-left: 2px solid {leftColor};line-height : 3em;">',
                                    '    <table width="100%">',
                                    '        <tr>',
                                    '            <td>&nbsp;',
                                    '                <tpl for="name"> </tpl></td>',
                                    '            <td class = "fontFamilyCath" style="width : 80%; font-family  : CenturyGothic, AppleGothic, sans-serif;">{postName}</td>',
                                    '            <td><img align= "right" style=" width : 14px; height : 19px;" src="img/img/arrow_right.png"></td>',
                                    '            <td>&nbsp;</td>',
                                    '        </tr>',
                                    '    </table>   ',
                                    '</div>'
                                ],
                                store: postStore,
                                listeners: {
                                    itemtap: function(dataview, index, target, record,e, eOpts) {

                                        console.log(record);




                                    },//End itemTap
                                    afterrender : function(cmp){
                                       // alert();
                                       cmp.refresh();
                                    }
                                  }//end listners
                            }

            );





        }
    },

    onStaticFormMenuBtnTap: function(button, e, eOpts) {
        tekwave.app.getControllerInstances()['tekwave.controller.MainController'].navigation('menuCont');


        //Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('menuCont'), {type: 'slide', direction: 'down'});
    },

    onStaticFormListErased: function(component, eOpts) {
        alert('erased');

        console.log(record);
        //console.log(record.data.formName.replace(/ /g,''));
        var formId=record.data.formName.replace(/ /g,'')+record.data.formId;


        //If form already created
        if(Ext.getCmp(formId)){

          //  Ext.getCmp('navMainView').setActiveItem(Ext.getCmp(formId));
            Ext.getCmp('navMainView').setActiveItem(Ext.getCmp(record.data.formName.replace(/ /g,'')));


        }else{





        var title= record.data.formName;
        var font;
            if(title.length>20){

                 font='font-size : 14px;';


                }else{
                     font='';
                }


        Ext.getCmp('navMainView').add({
                        xtype: 'container',
                        id:record.data.formName.replace(/ /g,''),
                        layout: {
                            type: 'vbox',
                            pack: 'center'
                        },
                       // padding : 5,
                        items: [
                            {
                                xtype: 'titlebar',
                                cls: [
                                    'titleBar',
                                    'fontFamilyCath'
                                ],
                                docked: 'top',

                                title: record.data.formName,
                                style : font,
                                items: [
                                    {
                                        xtype: 'button',
                                        /*
                                        handler: function(button, e) {

                                                },
                                                */
                                        listeners: {
                                            tap: function() {
                                             console.log(Ext.getCmp('navMainView'))   ;
                                                 alert('s');
                                                 Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('menuCont'));
                                                 //tekwave.app.getControllerInstances()['tekwave.controller.MainController'].navigation('menuCont');


                                    }//End itemTap

                                  },//end listners
                                        height: 30,
                                        html: '<img src="img/img/btn_menu.png" width="80%" height="80%" />',
                                        ui: 'plain',
                                        width: 50,

                                         id : record.data.formName.replace(/ /g,'')+'_2',
                                        text: ''
                                    },
                                    {
                                        xtype: 'button',
                                        align: 'right',
                                        ui: 'plain',
                                        iconAlign: 'right',
                                        id : record.data.formName.replace(/ /g,'')+'_1',
                                        iconCls: 'add'
                                    }
                                ]
                            }
                    ]

        });
        //Grid View List of Static Form
         Ext.getCmp(record.data.formName.replace(/ /g,'')).add({
                                xtype: 'dataview',
                                height:'100%',
                                maxWidth: '100%',
                                width: '100%',
                                scrollable: {
                                    direction: 'vertical',
                                    directionLock: true
                                },
                                inline: {
                                    wrap: true
                                },
                                itemTpl: [
                                    '<div align="center" class= "gridlistHead" style="">',
                                    '    <div  class="gridlistSection" style="">',
                                    '        <p class="dataViewFontCls fontFamilyCath">{data1}</p>',
                                    '        <img class="homeList" style="" src="{icon}" />',
                                    '        <p class="dataViewFontCls fontFamilyCath">{name}</p>',
                                    '    </div>',
                                    '    <div  class="smallFont2 fontFamilyCath">',
                                    '        {type}',
                                    '    </div>',
                                    '</div>'
                                ],
                                store: 'staticForm',
                                listeners: {
                                    itemtap: function(dataview, index, target, record,e, eOpts) {

                                        console.log(record);
                                        Ext.getCmp('navMainView').setActiveItem(Ext.getCmp(formId));

                                    }//End itemTap

                                  }//end listners
                            });//End Grid View List of Static Form









            //************************************************//
        //Adding Form



            Ext.getCmp('navMainView').add({
                        xtype: 'container',
                        id: formId,
                        layout: {
                            type: 'vbox',
                            pack: 'center'
                        },
                       // padding : 5,
                        items: [
                            {
                                xtype: 'titlebar',
                                cls: [
                                    'titleBar',
                                    'fontFamilyCath'
                                ],
                                docked: 'top',
                                title: record.data.formName,
                                style : font,
                                items: [
                                    {
                                        xtype: 'button',
                                        id : record.data.formName.replace(/ /g,'')+'_3',

                                         listeners: {
                                            tap: function(button,e, eOpts) {
                                         alert('k');
                                                 Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('menuCont'));
                                            //tekwave.app.getControllerInstances()['tekwave.controller.MainController'].navigation('menuCont');


                                    }//End itemTap
                                         },
                                        height: 30,
                                        html: '<img src="img/img/btn_menu.png" width="80%" height="80%" />',
                                        ui: 'plain',
                                        width: 50,
                                        text: ''
                                    }
                                ]
                            }
                    ]

        });



        Ext.getCmp(formId).add(

             {
                                xtype: 'panel',
                                height: '10%',
                                id: 'formCatTag'+formId,
                                layout: 'hbox',
                                cls : 'scrollerBar',//whitePnlBg

                                 /*
                                 items: [
                                    {
                                        xtype: 'button',
                                        handler: function(button, e) {

                                        },
                                        cls: 'lebelFont themeFontBlue fontFamilyCath',
                                        ui: 'plain',
                                        text: 'General'
                                    },
                                    {
                                        xtype: 'button',
                                        cls: 'lebelFont  fontFamilyCath',
                                        ui: 'plain',
                                        text: 'Questions'
                                    }
                                ]
                                */
                              scrollable: 'horizontal'
                            });




        Ext.getCmp(formId).add({
                                xtype: 'carousel',
                                height: '90%',
                                id : 'carousel'+formId,
                               listeners: {
                                initialize: function() {
                                    this.onBefore('activeitemchange', function(container, value, oldValue, eOpts) {

                                       // console.log('activeItem change');
                                       // console.log(container.getActiveIndex());
                                       // console.log(value);

                                       // console.log(Ext.getCmp('formCatTag'+formId).items.items);
                                        for(var a=0; a<Ext.getCmp('formCatTag'+formId).items.items.length; a++){

                                      //
                                            if(a===container.getActiveIndex()){
                                                //Scrolling menus
                                                Ext.getCmp('formCatTag'+formId).getScrollable().getScroller().scrollTo(Ext.getCmp('formCatTag'+formId).items.items[a].bodyElement.dom.offsetLeft ,  false, {type: 'slide', duration: '400', easing: 'linear'});

                                                 console.log(Ext.getCmp('formCatTag'+formId).items.items[a].bodyElement.dom.offsetLeft);
                                                Ext.getCmp('formCatTag'+formId).items.items[a].setCls('lebelFont themeFontBlue fontFamilyCath underLine');

                                            }else{
                                                Ext.getCmp('formCatTag'+formId).items.items[a].setCls('lebelFont fontFamilyCath');
                                            }


                                        }


                                        //Customize button Css



                                        /////



                                });
                                }
                                },
                                indicator: false
                            });






















            //Adding forms and top sectional navigation
            for(var k=0; k<record.data.allfieldData.length; k++){
                var cls;

                if(k===0){ cls='lebelFont themeFontBlue fontFamilyCath underLine';}
                else{ cls='lebelFont  fontFamilyCath'; }

                Ext.getCmp('formCatTag'+formId).add( {
                                        xtype: 'button',
                                        handler: function(button, e) {
                                            //change the pane
                                            //console.log(this.bodyElement.dom.offsetLeft+' '+this.bodyElement.dom.offsetWidth);
                                           //console.log(Ext.getCmp('formCatTag'+formId).getScrollable().getScroller().scrollTo(this.bodyElement.dom.offsetLeft ,  false, {type: 'slide', duration: '400', easing: 'linear'}));
                                            Ext.getCmp('formCatTag'+formId).getScrollable().getScroller().scrollTo(this.bodyElement.dom.offsetLeft ,  false, {type: 'slide', duration: '400', easing: 'linear'});
                                          //  console.log(this);

                                           // console.log( Ext.getCmp('carousel'+formId));
                                          // button.getScroller().scroller.scrollTo(0, 0);
                                            for(var j=0; j<button.parent.items.items.length; j++){
                                                if(button.id===button.parent.items.items[j].id){

                                                    Ext.getCmp('carousel'+formId).setActiveItem(j);
                                                    button.setCls('lebelFont themeFontBlue fontFamilyCath underLine');
                                                }else{
                                                    //console.log('else');
                                                    button.parent.items.items[j].setCls('lebelFont fontFamilyCath');
                                                }


                                            }//tracing button Position

                                           // console.log(button);

                                        },
                                        cls: cls,
                                        ui: 'plain',
                                        html : '<div class="">'+record.data.allfieldData[k].section+'</div>'
                                      // html : '<div class="arrow_box">'+record.data.allfieldData[k].section+'</div>'
                                       // text: record.data.allfieldData[k].section
                                    });


                //Adding Forms
                Ext.getCmp('carousel'+formId).add({
                        xtype: 'formpanel',
                        id : 'formpanel_'+k+formId,
                        height: '100%',
                        padding: 10,
                        layout: 'vbox',
                        scrollable: 'vertical'

                    /*
                    padding: 10,
                                        scrollable: 'vertical',
                                        layout: {
                                            type: 'vbox',
                                            align: 'center'
                                        }
                                        */
                    });










                var width='95%';
                var itemMargin=4;
                var lavelWidth='40%';
                //Adding different type sencha form fields like textfield, textare etc...
                for (var q=0; q<record.data.allfieldData[k].formField.length; q++){
                    var formFieldData=record.data.allfieldData[k].formField[q];
                  // console.log(formFieldData.type);







                    if(record.data.allfieldData[k].section==='Questions'){
                      //   console.log(formFieldData.type);
                     //   console.log(formFieldData.slctFldOptions);
                        //creating store for each select fields
                                var model = Ext.define('User', {
                                    extend: 'Ext.data.Model',
                                    config: {
                                    fields: [{
                                        name: 'text'

                                            }, {
                                           name: 'value'
                                            }]
                                        }
                                    });

                              var store= Ext.create("Ext.data.Store", {
                                storeId: "slectStore"+'formpanel_'+k+q+formId,
                                model: "User",
                                data: formFieldData.slctFldOptions
                                });

                      //  console.log(Ext.getStore("slectStore"+'formpanel_'+k+q+formId));

                          //  var opt=Ext.JSON.encode(formFieldData.slctFldOptions);


                        var sel={
                            xtype: 'selectfield',
                           // label: formFieldData.label ,
                          // name: 'name',
                            displayField: 'text',
                            store:'slectStore'+'formpanel_'+k+q+formId,
                            valueField: 'text',
                         //   value : 'value',
                            width : '20%'
                            //labelWidth: lavelWidth,
                           //  margin: itemMargin,
                          //  label:formFieldData.label
                        };

                      //  console.log(opt);
                            //console.log( formFieldData.slctFldOptions);
                      //   Ext.getCmp('formpanel_'+k+formId).add(sel);

                        /*
                         Ext.getCmp('formpanel_'+k+formId).add({
                        xtype: formFieldData.type,
                        width: width,
                        name : formFieldData.radioName,
                        labelWidth: '90%',
                        labelAlign: 'right',
                        margin: itemMargin,
                        label: formFieldData.label,
                        clearIcon: false,
                        //value: 'Friday',
                        placeHolder: formFieldData.placeHolder
                        //options: record.data.allfieldData[k].formField[q].slctFldOptions
                          }
                         );
                        */

                         Ext.getCmp('formpanel_'+k+formId).add({
                                                xtype: 'panel',
                                                margin: 5,
                                                layout: {
                                                    type: 'hbox',
                                                    align: 'center'
                                                },
                                                items: [
                                                    {
                                                        xtype: 'label',
                                                        cls: 'forgotBtnCls',
                                                        html: formFieldData.label,
                                                        width: '80%'
                                                    },
                                                    sel
                                                ]
                                            }
                        );







                    }else {//Adding different type

                    if(formFieldData.type==='textfield' ){

                        if(formFieldData.label.length>20){
                        Ext.getCmp('formpanel_'+k+formId).add({
                        xtype: formFieldData.type,
                        width: width,
                        labelWidth: lavelWidth,
                        labelAlign: 'top',
                             margin: itemMargin,
                        label: formFieldData.label,
                        clearIcon: false,
                        //value: 'Friday',
                        placeHolder: formFieldData.placeHolder
                        //options: record.data.allfieldData[k].formField[q].slctFldOptions
                          }
                         );

                        }else{
                             Ext.getCmp('formpanel_'+k+formId).add({
                        xtype: formFieldData.type,
                        width: width,
                         labelAlign: 'top',
                        //labelWidth: lavelWidth,
                        clearIcon: false,
                        margin: itemMargin,
                        label: formFieldData.label,
                        //value: 'Friday',
                        placeHolder: formFieldData.placeHolder
                        //options: record.data.allfieldData[k].formField[q].slctFldOptions
                          }
                         );

                        }


                    }
                    else if(formFieldData.type==='datepickerfield'){


                      //  console.log( formFieldData.slctFldOptions);
                         Ext.getCmp('formpanel_'+k+formId).add({
                        xtype: formFieldData.type,
                        width:width,
                              labelAlign: 'top',
                        //labelWidth: lavelWidth,
                        label:formFieldData.label ,
                              margin: itemMargin,
                        placeHolder: 'mm/dd/yyyy',
                                                picker: {
                                                    yearFrom: 2010,
                                                    yearTo: 2025
                                                }

                          });



                    }else if(formFieldData.type==='selectfiled'){


                    //creating store for each select fields
                                var model = Ext.define('User', {
                                    extend: 'Ext.data.Model',
                                    config: {
                                    fields: [{
                                        name: 'text'

                                            }, {
                                           name: 'value'
                                            }]
                                        }
                                    });

                              var store= Ext.create("Ext.data.Store", {
                                storeId: "slectStore"+'formpanel_'+k+q+formId,
                                model: "User",
                                data: formFieldData.slctFldOptions
                                });

                        //console.log(Ext.getStore("slectStore"+'formpanel_'+k+q+formId));

                          //  var opt=Ext.JSON.encode(formFieldData.slctFldOptions);

                        var labelAlign;
                        if(formFieldData.label.length>20){
                            laelAlign='top';

                        }else{
                            labelAlign='left';
                        }


                        var sel={
                            xtype: 'selectfield',
                            label: formFieldData.label ,
                          // name: 'name',
                            displayField: 'text',
                            store:'slectStore'+'formpanel_'+k+q+formId,
                            valueField: 'text',
                         //   value : 'value',
                            width : width,
                           // labelWidth: lavelWidth,
                            labelAlign :'top',//labelAlign

                             margin: itemMargin,
                            label:formFieldData.label
                        };

                      //  console.log(opt);
                            //console.log( formFieldData.slctFldOptions);
                         Ext.getCmp('formpanel_'+k+formId).add(sel);



                    }


                    else if(record.data.allfieldData[k].formField[q].type==='radiofield'){



                        Ext.getCmp('formpanel_'+k+formId).add({
                        xtype: formFieldData.type,
                        width: width,
                        name : formFieldData.radioName,
                        labelWidth: '90%',
                        labelAlign: 'right',
                             margin: itemMargin,
                        label: formFieldData.label,
                        clearIcon: false,
                        //value: 'Friday',
                        placeHolder: formFieldData.placeHolder
                        //options: record.data.allfieldData[k].formField[q].slctFldOptions
                          }
                         );
                    }else if(formFieldData.type==='label'){
                        if(formFieldData.style){
                            var styl=formFieldData.style;
                        }else{
                              var styl='font-size: 12px;text-align: left;padding-left: 4px;color: gray;text-decoration: none;';
                        }



                      //  console.log( formFieldData);
                         Ext.getCmp('formpanel_'+k+formId).add({
                            xtype: formFieldData.type,
                              //  width:width,
                              //  labelWidth: lavelWidth,
                              //  margin: itemMargin,
                            style : styl,
                              html:'<span>'+formFieldData.label+'</span>'

                          });



                    }
                    else if(formFieldData.type==='checkboxfield'){
                    var label ;


                        if(formFieldData.label.length===''){
                            Ext.getCmp('formpanel_'+k+formId).add({
                                                xtype: formFieldData.type,
                                                width: width,
                                                label: ' &nbps;&nbps;&nbps;&nbps;&nbps;&nbps;&nbps;&nbps;',
                                                labelAlign: 'right',
                                                labelWidth: '90%'
                                            });

                        }else{

                        Ext.getCmp('formpanel_'+k+formId).add({
                                                xtype: formFieldData.type,
                                                width: width,
                                                label: formFieldData.label,
                                                labelAlign: 'right',
                                                labelWidth: '90%'
                                            });

                        }

                        //console.log( formFieldData);



                    }else if(formFieldData.type==='datetimepickerfield'){


                       // console.log( formFieldData);
                         Ext.getCmp('formpanel_'+k+formId).add({
                            xtype: 'datetimepickerfield',
                         //   name : '12hr',
                            label: formFieldData.label,
                             width:width,
                        labelWidth: lavelWidth,
                        margin: itemMargin,
                            value: new Date(),
                            dateTimeFormat : 'h:i:A',
                            picker: {
                                yearFrom: 1980,
                                minuteInterval : 1,
                                ampm : true,
                                slotOrder: ['hour','minute','ampm']
                            }
                         });



                    }
                        else if(formFieldData.type==='datetimepickerfieldWithTime'){


                       // console.log( formFieldData);
                         Ext.getCmp('formpanel_'+k+formId).add({
                            xtype: 'datetimepickerfield',
                           label: formFieldData.label,
                             width:width,
                        labelWidth: lavelWidth,
                        margin: itemMargin,
                            value: new Date(),
                            dateTimeFormat : 'Y-m-d H:i',
                            picker: {
                                yearFrom: 1980,
                                minuteInterval : 1,
                                ampm : false,
                                slotOrder: ['month', 'day', 'year','hour','minute']
                            }
                         });



                    }else if(formFieldData.type==='textareafield' ){

                        if(formFieldData.label.length>10){
                        Ext.getCmp('formpanel_'+k+formId).add(
                            {
                        xtype: formFieldData.type,
                       // width: width,
                       // labelWidth: lavelWidth,
                        labelAlign: 'top',
                        margin: itemMargin,
                        label: formFieldData.label,
                        style : ' white-space: nowrap; ',
                        clearIcon: false,
                        //value: 'Friday',
                        placeHolder: formFieldData.placeHolder
                        //options: record.data.allfieldData[k].formField[q].slctFldOptions
                          }
                         );

                        }else{
                          Ext.getCmp('formpanel_'+k+formId).add({
                                xtype: formFieldData.type,
                               // width: width,
                               // labelWidth: lavelWidth,
                                labelAlign: 'top',
                                clearIcon: false,
                                margin: itemMargin,
                                label: formFieldData.label,
                                //value: 'Friday',
                                placeHolder: formFieldData.placeHolder
                                //options: record.data.allfieldData[k].formField[q].slctFldOptions
                          }
                         );

                        }


                    }else if(formFieldData.type==='signaturefield' ){


                         Ext.getCmp('formpanel_'+k+formId).add({
                            xtype: 'signaturefield',
                              width:width,
                            //id: 'signatureField',
                           // margin : '20 20 20 20',   //border : 2px solid red; color : gray;
                            // html : '<div style="border: 2px solid red; font-size : 14px; padding-top : 5%; padding-bottom : 8%; margin-left : 15px; ">Tap to Draw Signature....</div>',
                            sigWidth: 300,

                            sigHeight: 200,
                              labelAlign: 'top',
                              labelWidth: '30%',
                          	label:'Tap Here to Draw Signature....'//,

                        });


                    }else if(formFieldData.type==='image'){











                        Ext.getCmp('formpanel_'+k+formId).add({
                                xtype: 'panel',
                                docked: 'top',
                                height: '15%',
                                margin: 5,
                                width: '100%',
                                layout: {
                                    type: 'hbox',
                                    align: 'center'
                                },
                                items: [
                                    {
                                        xtype: 'image',
                                        height: '100%',
                                        width: '40%',
                                        src: 'img/logo.png'
                                    },
                                    {
                                        xtype: 'button',
                                        handler: function(button, e) {
                                            console.log(this);
                                            console.log(this.parent.items.items[0]);




                                            document.addEventListener("deviceready",onDeviceReady,false);

                                            // PhoneGap is ready to be used!
                                            //
                                            function onDeviceReady() {
                                                //alert ('device ready');


                                      /*

                                                var captureSuccess = function(mediaFiles) {
                                                    var i, path, len;
                                                    for (i = 0, len = mediaFiles.length; i < len; i += 1) {
                                                        path = mediaFiles[i].fullPath;
                                                        console.log(path);
                                                        console.log(this.parent.items.items[0].setSrc(path));


                                                        //this.parents
                                                        // do something interesting with the file
                                                    }
                                                };

                                                // capture error callback
                                                var captureError = function(error) {
                                                    navigator.notification.alert('Error code: ' + error.code, null, 'Capture Error');
                                                };

                                                // start image capture
                                                navigator.device.capture.captureImage(captureSuccess, captureError, {limit:2});


                                            //End Function

        */

                                            }

                                        },
                                        cls: 'blueBtn',
                                        ui: 'plain',
                                        html: 'Add New Image',
                                        style : 'background: rgb(43, 72, 104);color: white; font-size: 12px;'

                                    }
                                ]
                            });



                    }//End image









                    }//End Else












                }//End adding Q loop form fields in each form



            }//End K Loop
































        //Adding Bottom tool bar

        Ext.getCmp(formId).add(
            {
                                xtype: 'panel',
                                cls: 'titleBar',
                                docked: 'bottom',
                                height: 50,
                                hidden: false,
                                layout: {
                                    type: 'hbox',
                                    align: 'center'
                                },
                                items: [
                                    {
                                        xtype: 'button',
                                        handler: function(button, e) {
                                               //Save/Cancel form

                                        },
                                        html: '<img class="imgBtnCls" src="img/save_icon.png"  /><p class="whiteBtn">Save</p>',
                                        id: 'formSave',
                                        ui: 'plain',
                                        width: '50px',
                                        text: ''
                                    },
                                    {
                                        xtype: 'spacer'
                                    },
                                    {
                                        xtype: 'button',
                                        handler: function(button, e) {
                                                   //Save/Cancel form
                                        },
                                        html: '<img style="width: 30%;" class="" src="img/upload_icon.png" /><p class="whiteBtn">Save & Upload</p>',
                                        id: 'formSave1',
                                        ui: 'plain',
                                        width: '85px',
                                        text: ''
                                    },
                                    {
                                        xtype: 'spacer'
                                    },
                                    {
                                        xtype: 'button',
                                        handler: function(button, e) {
                                            //Save/Cancel form

                                        },
                                        html: '<img src="img/cancel_icon.png"  class="imgBtnCls" /> <p class="whiteBtn">Cancel</p>',
                                        ui: 'plain',
                                        width: '50px'
                                    }
                                ]
                            });


        }//End Else part of tracing existing Form



        //console.log(Ext.getCmp(formId));

        Ext.defer(function(){

        //Ext.getCmp(formId).hide();

        },2000);

    },

    onStaticFormListBottomChange: function(component, value, oldValue, eOpts) {
        console.log(record);
        //console.log(record.data.formName.replace(/ /g,''));
        var formId=record.data.formName.replace(/ /g,'')+record.data.formId;


        //If form already created
        //if(Ext.getCmp(formId)){
            if(Ext.getCmp(record.data.formName.replace(/ /g,''))){

          //  Ext.getCmp('navMainView').setActiveItem(Ext.getCmp(formId));
            Ext.getCmp('navMainView').setActiveItem(Ext.getCmp(record.data.formName.replace(/ /g,'')));


        }else{





        var title= record.data.formName;
        var font;
            if(title.length>20){

                 font='font-size : 14px;';


                }else{
                     font='';
                }


        Ext.getCmp('navMainView').add({
                        xtype: 'container',
                        id:record.data.formName.replace(/ /g,''),
                        layout: {
                            type: 'vbox',
                            pack: 'center'
                        },
                       // padding : 5,
                        items: [
                            {
                                xtype: 'titlebar',
                                cls: [
                                    'titleBar',
                                    'fontFamilyCath'
                                ],
                                docked: 'top',

                                title: record.data.formName,
                                style : font,
                                items: [
                                    {
                                        xtype: 'button',
                                        /*
                                        handler: function(button, e) {

                                                },
                                                */
                                        listeners: {
                                            tap: function() {
                                             console.log(Ext.getCmp('navMainView'))   ;
                                                 //alert('s');
                                               //  Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('menuCont'));
                                                 tekwave.app.getControllerInstances()['tekwave.controller.MainController'].navigation('menuCont');


                                    }//End itemTap

                                  },//end listners
                                        height: 30,
                                        html: '<img src="img/img/btn_menu.png" width="80%" height="80%" />',
                                        ui: 'plain',
                                        width: 50,

                                         id : record.data.formName.replace(/ /g,'')+'_2',
                                        text: ''
                                    },
                                    {
                                        xtype: 'button',
                                        align: 'right',
                                        ui: 'plain',
                                        iconAlign: 'right',
                                        id : record.data.formName.replace(/ /g,'')+'_1',
                                        iconCls: 'add',
                                         listeners: {
                                            tap: function() {
                                             addForm(formId);
                                                //   Ext.getCmp('navMainView').setActiveItem(Ext.getCmp(formId));

                                    }//End itemTap

                                  }//end listners
                                    }
                                ]
                            }
                    ]

        });
        //Grid View List of Static Form
         Ext.getCmp(record.data.formName.replace(/ /g,'')).add({
                                xtype: 'dataview',
                                height:'100%',
                                maxWidth: '100%',
                                width: '100%',
                                scrollable: {
                                    direction: 'vertical',
                                    directionLock: true
                                },
                                inline: {
                                    wrap: true
                                },
                                itemTpl: [
                                    '<div align="center" class= "gridlistHead" style="">',
                                    '    <div  class="gridlistSection" style="">',
                                    '        <p class="dataViewFontCls fontFamilyCath">{data1}</p>',
                                    '        <img class="homeList" style="" src="{icon}" />',
                                    '        <p class="dataViewFontCls fontFamilyCath">{name}</p>',
                                    '    </div>',
                                    '    <div  class="smallFont2 fontFamilyCath">',
                                    '        {type}',
                                    '    </div>',
                                    '</div>'
                                ],
                                store: 'staticForm',
                                listeners: {
                                    itemtap: function(dataview, index, target, record,e, eOpts) {

                                        console.log(record);
                                        //Ext.getCmp('navMainView').setActiveItem(Ext.getCmp(formId));
                                        addForm(formId);
                                    }//End itemTap

                                  }//end listners
                            });//End Grid View List of Static Form









            //************************************************//
        //Adding Form

            function addForm(formId){
                console.log(formId);
                if(Ext.getCmp(formId)){

                    Ext.getCmp('navMainView').setActiveItem(Ext.getCmp(formId));
            }else{



                Ext.getCmp('navMainView').add({
                        xtype: 'container',
                        id: formId,
                        layout: {
                            type: 'vbox',
                            pack: 'center'
                        },
                       // padding : 5,
                        items: [
                            {
                                xtype: 'titlebar',
                                cls: [
                                    'titleBar',
                                    'fontFamilyCath'
                                ],
                                docked: 'top',
                                title: record.data.formName,
                                style : font,
                                items: [
                                    {
                                        xtype: 'button',
                                        id : record.data.formName.replace(/ /g,'')+'_3',

                                         listeners: {
                                            tap: function(button,e, eOpts) {
                                            //alert('k');
                                                 //Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('menuCont'));
                                            tekwave.app.getControllerInstances()['tekwave.controller.MainController'].navigation('menuCont');


                                            }//End itemTap
                                         },//End listner
                                        height: 30,
                                        html: '<img src="img/img/btn_menu.png" width="80%" height="80%" />',
                                        ui: 'plain',
                                        width: 50,
                                        text: ''
                                    }
                                ]
                            }
                    ]

        });



        Ext.getCmp(formId).add(

             {
                                xtype: 'panel',
                                height: '10%',
                                id: 'formCatTag'+formId,
                                layout: 'hbox',
                                cls : 'scrollerBar',//whitePnlBg

                                 /*
                                 items: [
                                    {
                                        xtype: 'button',
                                        handler: function(button, e) {

                                        },
                                        cls: 'lebelFont themeFontBlue fontFamilyCath',
                                        ui: 'plain',
                                        text: 'General'
                                    },
                                    {
                                        xtype: 'button',
                                        cls: 'lebelFont  fontFamilyCath',
                                        ui: 'plain',
                                        text: 'Questions'
                                    }
                                ]
                                */
                              scrollable: 'horizontal'
                            });




        Ext.getCmp(formId).add({
                                xtype: 'carousel',
                                height: '90%',
                                id : 'carousel'+formId,
                               listeners: {
                                initialize: function() {
                                    this.onBefore('activeitemchange', function(container, value, oldValue, eOpts) {

                                       // console.log('activeItem change');
                                       // console.log(container.getActiveIndex());
                                       // console.log(value);

                                       // console.log(Ext.getCmp('formCatTag'+formId).items.items);
                                        for(var a=0; a<Ext.getCmp('formCatTag'+formId).items.items.length; a++){

                                      //
                                            if(a===container.getActiveIndex()){
                                                //Scrolling menus
                                                Ext.getCmp('formCatTag'+formId).getScrollable().getScroller().scrollTo(Ext.getCmp('formCatTag'+formId).items.items[a].bodyElement.dom.offsetLeft ,  false, {type: 'slide', duration: '400', easing: 'linear'});

                                                 console.log(Ext.getCmp('formCatTag'+formId).items.items[a].bodyElement.dom.offsetLeft);
                                                Ext.getCmp('formCatTag'+formId).items.items[a].setCls('lebelFont themeFontBlue fontFamilyCath underLine');

                                            }else{
                                                Ext.getCmp('formCatTag'+formId).items.items[a].setCls('lebelFont fontFamilyCath');
                                            }


                                        }


                                        //Customize button Css



                                        /////



                                });
                                }
                                },
                                indicator: false
                            });






















            //Adding forms and top sectional navigation
            for(var k=0; k<record.data.allfieldData.length; k++){
                var cls;

                if(k===0){ cls='lebelFont themeFontBlue fontFamilyCath underLine';}
                else{ cls='lebelFont  fontFamilyCath'; }

                Ext.getCmp('formCatTag'+formId).add( {
                                        xtype: 'button',
                                        handler: function(button, e) {
                                            //change the pane
                                            //console.log(this.bodyElement.dom.offsetLeft+' '+this.bodyElement.dom.offsetWidth);
                                           //console.log(Ext.getCmp('formCatTag'+formId).getScrollable().getScroller().scrollTo(this.bodyElement.dom.offsetLeft ,  false, {type: 'slide', duration: '400', easing: 'linear'}));
                                            Ext.getCmp('formCatTag'+formId).getScrollable().getScroller().scrollTo(this.bodyElement.dom.offsetLeft ,  false, {type: 'slide', duration: '400', easing: 'linear'});
                                          //  console.log(this);

                                           // console.log( Ext.getCmp('carousel'+formId));
                                          // button.getScroller().scroller.scrollTo(0, 0);
                                            for(var j=0; j<button.parent.items.items.length; j++){
                                                if(button.id===button.parent.items.items[j].id){

                                                    Ext.getCmp('carousel'+formId).setActiveItem(j);
                                                    button.setCls('lebelFont themeFontBlue fontFamilyCath underLine');
                                                }else{
                                                    //console.log('else');
                                                    button.parent.items.items[j].setCls('lebelFont fontFamilyCath');
                                                }


                                            }//tracing button Position

                                           // console.log(button);

                                        },
                                        cls: cls,
                                        ui: 'plain',
                                        html : '<div class="">'+record.data.allfieldData[k].section+'</div>'
                                      // html : '<div class="arrow_box">'+record.data.allfieldData[k].section+'</div>'
                                       // text: record.data.allfieldData[k].section
                                    });


                //Adding Forms
                Ext.getCmp('carousel'+formId).add({
                        xtype: 'formpanel',
                        id : 'formpanel_'+k+formId,
                        height: '100%',
                        padding: 10,
                        layout: 'vbox',
                        scrollable: 'vertical'

                    /*
                    padding: 10,
                                        scrollable: 'vertical',
                                        layout: {
                                            type: 'vbox',
                                            align: 'center'
                                        }
                                        */
                    });










                var width='95%';
                var itemMargin=4;
                var lavelWidth='40%';
                //Adding different type sencha form fields like textfield, textare etc...
                for (var q=0; q<record.data.allfieldData[k].formField.length; q++){
                    var formFieldData=record.data.allfieldData[k].formField[q];
                  // console.log(formFieldData.type);







                    if(record.data.allfieldData[k].section==='Questions'){
                      //   console.log(formFieldData.type);
                     //   console.log(formFieldData.slctFldOptions);
                        //creating store for each select fields
                                var model = Ext.define('User', {
                                    extend: 'Ext.data.Model',
                                    config: {
                                    fields: [{
                                        name: 'text'

                                            }, {
                                           name: 'value'
                                            }]
                                        }
                                    });

                              var store= Ext.create("Ext.data.Store", {
                                storeId: "slectStore"+'formpanel_'+k+q+formId,
                                model: "User",
                                data: formFieldData.slctFldOptions
                                });

                      //  console.log(Ext.getStore("slectStore"+'formpanel_'+k+q+formId));

                          //  var opt=Ext.JSON.encode(formFieldData.slctFldOptions);


                        var sel={
                            xtype: 'selectfield',
                           // label: formFieldData.label ,
                          // name: 'name',
                            displayField: 'text',
                            store:'slectStore'+'formpanel_'+k+q+formId,
                            valueField: 'text',
                         //   value : 'value',
                            width : '20%'
                            //labelWidth: lavelWidth,
                           //  margin: itemMargin,
                          //  label:formFieldData.label
                        };

                      //  console.log(opt);
                            //console.log( formFieldData.slctFldOptions);
                      //   Ext.getCmp('formpanel_'+k+formId).add(sel);

                        /*
                         Ext.getCmp('formpanel_'+k+formId).add({
                        xtype: formFieldData.type,
                        width: width,
                        name : formFieldData.radioName,
                        labelWidth: '90%',
                        labelAlign: 'right',
                        margin: itemMargin,
                        label: formFieldData.label,
                        clearIcon: false,
                        //value: 'Friday',
                        placeHolder: formFieldData.placeHolder
                        //options: record.data.allfieldData[k].formField[q].slctFldOptions
                          }
                         );
                        */

                         Ext.getCmp('formpanel_'+k+formId).add({
                                                xtype: 'panel',
                                                margin: 5,
                                                layout: {
                                                    type: 'hbox',
                                                    align: 'center'
                                                },
                                                items: [
                                                    {
                                                        xtype: 'label',
                                                        cls: 'forgotBtnCls',
                                                        html: formFieldData.label,
                                                        width: '80%'
                                                    },
                                                    sel
                                                ]
                                            }
                        );







                    }else {//Adding different type

                    if(formFieldData.type==='textfield' ){

                        if(formFieldData.label.length>20){
                        Ext.getCmp('formpanel_'+k+formId).add({
                        xtype: formFieldData.type,
                        width: width,
                        labelWidth: lavelWidth,
                        labelAlign: 'top',
                             margin: itemMargin,
                        label: formFieldData.label,
                        clearIcon: false,
                        //value: 'Friday',
                        placeHolder: formFieldData.placeHolder
                        //options: record.data.allfieldData[k].formField[q].slctFldOptions
                          }
                         );

                        }else{
                             Ext.getCmp('formpanel_'+k+formId).add({
                        xtype: formFieldData.type,
                        width: width,
                         labelAlign: 'top',
                        //labelWidth: lavelWidth,
                        clearIcon: false,
                        margin: itemMargin,
                        label: formFieldData.label,
                        //value: 'Friday',
                        placeHolder: formFieldData.placeHolder
                        //options: record.data.allfieldData[k].formField[q].slctFldOptions
                          }
                         );

                        }


                    }
                    else if(formFieldData.type==='datepickerfield'){


                      //  console.log( formFieldData.slctFldOptions);
                         Ext.getCmp('formpanel_'+k+formId).add({
                        xtype: formFieldData.type,
                        width:width,
                              labelAlign: 'top',
                        //labelWidth: lavelWidth,
                        label:formFieldData.label ,
                              margin: itemMargin,
                        placeHolder: 'mm/dd/yyyy',
                                                picker: {
                                                    yearFrom: 2010,
                                                    yearTo: 2025
                                                }

                          });



                    }else if(formFieldData.type==='selectfiled'){


                    //creating store for each select fields
                                var model = Ext.define('User', {
                                    extend: 'Ext.data.Model',
                                    config: {
                                    fields: [{
                                        name: 'text'

                                            }, {
                                           name: 'value'
                                            }]
                                        }
                                    });

                              var store= Ext.create("Ext.data.Store", {
                                storeId: "slectStore"+'formpanel_'+k+q+formId,
                                model: "User",
                                data: formFieldData.slctFldOptions
                                });

                        //console.log(Ext.getStore("slectStore"+'formpanel_'+k+q+formId));

                          //  var opt=Ext.JSON.encode(formFieldData.slctFldOptions);

                        var labelAlign;
                        if(formFieldData.label.length>20){
                            laelAlign='top';

                        }else{
                            labelAlign='left';
                        }


                        var sel={
                            xtype: 'selectfield',
                            label: formFieldData.label ,
                          // name: 'name',
                            displayField: 'text',
                            store:'slectStore'+'formpanel_'+k+q+formId,
                            valueField: 'text',
                         //   value : 'value',
                            width : width,
                           // labelWidth: lavelWidth,
                            labelAlign :'top',//labelAlign

                             margin: itemMargin,
                            label:formFieldData.label
                        };

                      //  console.log(opt);
                            //console.log( formFieldData.slctFldOptions);
                         Ext.getCmp('formpanel_'+k+formId).add(sel);



                    }


                    else if(record.data.allfieldData[k].formField[q].type==='radiofield'){



                        Ext.getCmp('formpanel_'+k+formId).add({
                        xtype: formFieldData.type,
                        width: width,
                        name : formFieldData.radioName,
                        labelWidth: '90%',
                        labelAlign: 'right',
                             margin: itemMargin,
                        label: formFieldData.label,
                        clearIcon: false,
                        //value: 'Friday',
                        placeHolder: formFieldData.placeHolder
                        //options: record.data.allfieldData[k].formField[q].slctFldOptions
                          }
                         );
                    }else if(formFieldData.type==='label'){
                        if(formFieldData.style){
                            var styl=formFieldData.style;
                        }else{
                              var styl='font-size: 12px;text-align: left;padding-left: 4px;color: gray;text-decoration: none;';
                        }



                      //  console.log( formFieldData);
                         Ext.getCmp('formpanel_'+k+formId).add({
                            xtype: formFieldData.type,
                              //  width:width,
                              //  labelWidth: lavelWidth,
                              //  margin: itemMargin,
                            style : styl,
                              html:'<span>'+formFieldData.label+'</span>'

                          });



                    }
                    else if(formFieldData.type==='checkboxfield'){
                    var label ;


                        if(formFieldData.label.length===''){
                            Ext.getCmp('formpanel_'+k+formId).add({
                                                xtype: formFieldData.type,
                                                width: width,
                                                label: ' &nbps;&nbps;&nbps;&nbps;&nbps;&nbps;&nbps;&nbps;',
                                                labelAlign: 'right',
                                                labelWidth: '90%'
                                            });

                        }else{

                        Ext.getCmp('formpanel_'+k+formId).add({
                                                xtype: formFieldData.type,
                                                width: width,
                                                label: formFieldData.label,
                                                labelAlign: 'right',
                                                labelWidth: '90%'
                                            });

                        }

                        //console.log( formFieldData);



                    }else if(formFieldData.type==='datetimepickerfield'){


                       // console.log( formFieldData);
                         Ext.getCmp('formpanel_'+k+formId).add({
                            xtype: 'datetimepickerfield',
                         //   name : '12hr',
                            label: formFieldData.label,
                             width:width,
                        labelWidth: lavelWidth,
                        margin: itemMargin,
                            value: new Date(),
                            dateTimeFormat : 'h:i:A',
                            picker: {
                                yearFrom: 1980,
                                minuteInterval : 1,
                                ampm : true,
                                slotOrder: ['hour','minute','ampm']
                            }
                         });



                    }
                        else if(formFieldData.type==='datetimepickerfieldWithTime'){


                       // console.log( formFieldData);
                         Ext.getCmp('formpanel_'+k+formId).add({
                            xtype: 'datetimepickerfield',
                           label: formFieldData.label,
                             width:width,
                        labelWidth: lavelWidth,
                        margin: itemMargin,
                            value: new Date(),
                            dateTimeFormat : 'Y-m-d H:i',
                            picker: {
                                yearFrom: 1980,
                                minuteInterval : 1,
                                ampm : false,
                                slotOrder: ['month', 'day', 'year','hour','minute']
                            }
                         });



                    }else if(formFieldData.type==='textareafield' ){

                        if(formFieldData.label.length>10){
                        Ext.getCmp('formpanel_'+k+formId).add(
                            {
                        xtype: formFieldData.type,
                       // width: width,
                       // labelWidth: lavelWidth,
                        labelAlign: 'top',
                        margin: itemMargin,
                        label: formFieldData.label,
                        style : ' white-space: nowrap; ',
                        clearIcon: false,
                        //value: 'Friday',
                        placeHolder: formFieldData.placeHolder
                        //options: record.data.allfieldData[k].formField[q].slctFldOptions
                          }
                         );

                        }else{
                          Ext.getCmp('formpanel_'+k+formId).add({
                                xtype: formFieldData.type,
                               // width: width,
                               // labelWidth: lavelWidth,
                                labelAlign: 'top',
                                clearIcon: false,
                                margin: itemMargin,
                                label: formFieldData.label,
                                //value: 'Friday',
                                placeHolder: formFieldData.placeHolder
                                //options: record.data.allfieldData[k].formField[q].slctFldOptions
                          }
                         );

                        }


                    }else if(formFieldData.type==='signaturefield' ){


                         Ext.getCmp('formpanel_'+k+formId).add({
                            xtype: 'signaturefield',
                              width:width,
                            //id: 'signatureField',
                           // margin : '20 20 20 20',   //border : 2px solid red; color : gray;
                            // html : '<div style="border: 2px solid red; font-size : 14px; padding-top : 5%; padding-bottom : 8%; margin-left : 15px; ">Tap to Draw Signature....</div>',
                            sigWidth: 300,

                            sigHeight: 200,
                              labelAlign: 'top',
                              labelWidth: '30%',
                          	label:'Tap Here to Draw Signature....'//,

                        });


                    }else if(formFieldData.type==='image'){











                        Ext.getCmp('formpanel_'+k+formId).add({
                                xtype: 'panel',
                                docked: 'top',
                                height: '15%',
                                margin: 5,
                                width: '100%',
                                layout: {
                                    type: 'hbox',
                                    align: 'center'
                                },
                                items: [
                                    {
                                        xtype: 'image',
                                        height: '100%',
                                        width: '40%',
                                        src: 'img/logo.png'
                                    },
                                    {
                                        xtype: 'button',
                                        handler: function(button, e) {
                                            console.log(this);
                                            console.log(this.parent.items.items[0]);




                                            document.addEventListener("deviceready",onDeviceReady,false);

                                            // PhoneGap is ready to be used!
                                            //
                                            function onDeviceReady() {

                                                try {
                                                    console.log('device ready');
                                                    console.log( this.parent.items.items[0].getSrc());
                                               // capture callback
                                                    var captureSuccess = function(mediaFiles) {
                                                    var i, path, len;
                                                    for (i = 0, len = mediaFiles.length; i < len; i += 1) {
                                                    path = mediaFiles[i].fullPath;
                                                    alert(path);
                                                    console.log( this.parent.items.items[0].getSrc());
                                                     this.parent.items.items[0].setSrc(path);
                                                    // do something interesting with the file
                                                    }
                                                    };

                                                        // capture error callback
                                                    var captureError = function(error) {
                                                    navigator.notification.alert('Error code: ' + error.code, null, 'Capture Error');
                                                    };

                                                    // start image capture
                                                    navigator.device.capture.captureImage(captureSuccess, captureError, {limit:1});

                                                }catch(e){
                                                    console.log(e);
                                                }



                                                 /*

                                              //  Take a photo and retrieve it as a base64-encoded image:

                                                navigator.camera.getPicture(onSuccess, onFail, { quality: 50,
                                                    destinationType: Camera.DestinationType.DATA_URL
                                                });

                                                function onSuccess(imageData) {
                                                    alert(imageData);
                                                  console.log(imageData);
                                                    var src = "data:image/jpeg;base64," + imageData;
                                                    this.parent.items.items[0].setSrc(src);
                                                }

                                                function onFail(message) {
                                                    alert('Failed because: ' + message);
                                                }


                                                //Take a photo and retrieve the image's file location:

                                                navigator.camera.getPicture(onSuccess, onFail, { quality: 50,
                                                    destinationType: Camera.DestinationType.FILE_URI });

                                                function onSuccess(imageURI) {
                                                    var image = document.getElementById('myImage');
                                                    image.src = imageURI;
                                                }
                                                function onFail(message) {
                                                    alert('Failed because: ' + message);
                                                }
                                                */

                                                 /*
                                                    //CameraOptions

                                                    //Optional parameters to customize the camera settings.

                                                    { quality : 75,
                                                      destinationType : Camera.DestinationType.DATA_URL,
                                                      sourceType : Camera.PictureSourceType.CAMERA,
                                                      allowEdit : true,
                                                      encodingType: Camera.EncodingType.JPEG,
                                                      targetWidth: 100,
                                                      targetHeight: 100,
                                                      popoverOptions: CameraPopoverOptions,
                                                      saveToPhotoAlbum: false };
                                                    */





                                                 /*

                                                var captureSuccess = function(mediaFiles) {
                                                    var i, path, len;
                                                    for (i = 0, len = mediaFiles.length; i < len; i += 1) {
                                                        path = mediaFiles[i].fullPath;
                                                        console.log(path);
                                                        console.log(this.parent.items.items[0].setSrc(path));


                                                        //this.parents
                                                        // do something interesting with the file
                                                    }
                                                };

                                                // capture error callback
                                                var captureError = function(error) {
                                                    navigator.notification.alert('Error code: ' + error.code, null, 'Capture Error');
                                                };

                                                // start image capture
                                                navigator.device.capture.captureImage(captureSuccess, captureError, {limit:1});
                                                */

                                            //End Function


                                            }

                                        },
                                        cls: 'blueBtn',
                                        ui: 'plain',
                                        html: 'Add New Image',
                                        style : 'background: rgb(43, 72, 104);color: white; font-size: 12px;'

                                    }
                                ]
                            });
                   }//End image

               }//End Else
            }//End adding Q loop form fields in each form
           }//End K Loop



        //Adding Bottom tool bar

        Ext.getCmp(formId).add(
            {
                                xtype: 'panel',
                                cls: 'titleBar',
                                docked: 'bottom',
                                height: 50,
                                hidden: false,
                                layout: {
                                    type: 'hbox',
                                    align: 'center'
                                },
                                items: [
                                    {
                                        xtype: 'button',
                                        handler: function(button, e) {
                                               //Save/Cancel form

                                        },
                                        html: '<img class="imgBtnCls" src="img/save_icon.png"  /><p class="whiteBtn">Save</p>',
                                        id: 'formSave',
                                        ui: 'plain',
                                        width: '50px',
                                        text: ''
                                    },
                                    {
                                        xtype: 'spacer'
                                    },
                                    {
                                        xtype: 'button',
                                        handler: function(button, e) {
                                                   //Save/Cancel form
                                        },
                                        html: '<img style="width: 30%;" class="" src="img/upload_icon.png" /><p class="whiteBtn">Save & Upload</p>',
                                        id: 'formSave1',
                                        ui: 'plain',
                                        width: '85px',
                                        text: ''
                                    },
                                    {
                                        xtype: 'spacer'
                                    },
                                    {
                                        xtype: 'button',
                                        handler: function(button, e) {
                                            //Save/Cancel form

                                        },
                                        html: '<img src="img/cancel_icon.png"  class="imgBtnCls" /> <p class="whiteBtn">Cancel</p>',
                                        ui: 'plain',
                                        width: '50px'
                                    }
                                ]
                            });


        }//End check form Existance
         }//End else part



        }//End Else part of tracing existing Form



        //console.log(Ext.getCmp(formId));

        Ext.defer(function(){

        //Ext.getCmp(formId).hide();

        },2000);

    },

    onMenuListItemTap: function(dataview, index, target, record, e, eOpts) {
        //alert('tap');

        if(record.data.menuName==='Switch User'){

        //    Ext.getCmp('switchUserPnl').show();


        }else{

        Ext.getCmp('navMainView').setActiveItem(Ext.getCmp(record.data.nextScreen), {type: 'slide', direction: 'down'});

          //console.log( tekwave.app.History);
        if(record.data.menuName==='Logout'){
            tekwave.app.History=[];
            //console.log( tekwave.app.History);
        }

        }





    },

    onSwitchUsrCanclBtnTap: function(button, e, eOpts) {
        Ext.getCmp('switchUserPnl').hide();
    },

    onHomeMenuBtnTap: function(button, e, eOpts) {
        //alert('tap');


         tekwave.app.getControllerInstances()['tekwave.controller.MainController'].navigation('menuCont');
        //Ext.getCmp('navMainView').animateActiveItem(Ext.getCmp('menuCont'), {type: 'slide',direction: 'down'});

        //Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('menuCont'), {type:'slideIn', direction:'down', easing: 'ease-in'});
    },

    onHomeCommListItemTap: function(dataview, index, target, record, e, eOpts) {
        Ext.getCmp('navMainView').setActiveItem(Ext.getCmp(record.data.nextScreen), {type: 'slide', direction: 'down'});
    },

    onHomeQuickLinkListItemTap: function(dataview, index, target, record, e, eOpts) {
        Ext.getCmp('navMainView').setActiveItem(Ext.getCmp(record.data.nextScreen), {type: 'slide', direction: 'down'});
    },

    onForgotPwBtnTap: function(button, e, eOpts) {
        //alert('pressed');
        //console.log(Ext.getCmp('navMainView'));
        //Ext.getCmp('navMainView').push('forgotPWCont');
        Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('forgotPWCont'));
        //Ext.getCmp('navMainView').push(Ext.getCmp('forgotPWCont'));
    },

    onNavMainViewPush: function(navigationview, view, eOpts) {
        //console.log(navigationview);
    },

    onNavMainViewActiveItemChange: function(container, value, oldValue, eOpts) {
        /*
        console.log(value);
        console.log(oldValue);
        console.log(Ext.getCmp('MainPnl'));
        //console.log(Ext.Viewport.getActiveItemId());
        */

        /*
        console.log(this.getActiveItem());
        console.log(this.getActiveItem().id);
        console.log(Ext.getCmp(this.getActiveItem().id));
        */
        //console.log(Ext.Viewport);

        /*

        var id = this.getActiveItem().id;
        var loc = location.href;
        var hash = location.hash.substring(1);
        var root = null;

        if (loc.indexOf('#') != -1){
        root = loc.split('#');
        location.href = root[0] + '#' + id;
        } else if (id != hash){
        location.href = loc + '#' + id;
        }

        console.log(location.href);
        */




         if(tekwave.app.backPressed===false){

            // console.log(oldValue);
        //MyTechReport.app.History.push(this.getActiveItem().id);
        tekwave.app.History.push(oldValue.id);
        //console.log(tekwave.app.History);

         }




    },

    onNavMainViewPainted: function(element, eOpts) {
        //Creating Static Forms //

        /*
        console.log('****');
        console.log(this);
        console.log(element);
        console.log(Ext.getCmp('navMainView'));

        console.log('****');

        console.log(Ext.getStore('formStaticField').data.all);
        */
        var formStore=Ext.getStore('formStaticField');
        for(var i=0; i<formStore.data.length; i++){
          //  console.log(formStore.data.all[i].data.formName);
        // console.log(formStore.data.all[i].data.quickLinkScreen);
        //   creatStaticForms(formStore.data.all[i]);

        // tekwave.app.getControllerInstances()['tekwave.controller.staticForm'].onStaticFormListItemTap(formStore.data.all[i].data);
        //tekwave.app.getControllerInstances()['tekwave.controller.staticForm'].createStaticForm(formStore.data.all[i]);



        }//End For Loop


        //search();

        function search(){
            console.log(Ext.getStore('formStaticField').findRecord('quickLinkScreen', 'IncidentListScreen'));

        }






        /*
        console.log(Ext.getCmp('navMainView'));


        Ext.defer(function(){




        Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('signInCont'));


        Ext.getCmp('navMainView').add({

                        xtype: 'container',
                        id: 'dailyRprtCont2',
                        items: [
                            {
                                xtype: 'titlebar',
                                cls: [
                                    'titleBar',
                                    'fontFamilyCath'
                                ],
                                docked: 'top',
                                title: 'Daily Report',
                                items: [
                                    {
                                        xtype: 'button',
                                        handler: function(button, e) {
                                            tekwave.app.getControllerInstances()['tekwave.controller.MainController'].navigation('menuCont');

                                        },
                                        height: 30,
                                        html: '<img src="img/img/btn_menu.png" width="80%" height="80%" />',
                                        id: 'dailyReprtMenuBtn',
                                        itemId: 'mybutton21',
                                        ui: 'plain',
                                        width: 50,
                                        text: ''
                                    }
                                ]
                            }
            ]

        });
        Ext.getCmp('navMainView').setActiveItem(Ext.getCmp('signInCont'));

        }, 0);

        */
    }

});
/*
 * File: app.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

// @require @packageOverrides
Ext.Loader.setConfig({
    paths: {
        'Ext.ux': 'ux'
    }
});


Ext.application({

    requires: [
        'Ext.Loader',
        'Ext.MessageBox',
        'ux.signaturefield'
    ],
    models: [
        'homeModel',
        'menuModel',
        'allMsgList',
        'formModel',
        'chatmodel',
        'loginModel'
    ],
    stores: [
        'MyXmlStore',
        'commStore',
        'staticForm',
        'dailyTask',
        'menuStore',
        'sitePost',
        'allMsgStore',
        'quickLinkStore',
        'formStaticField',
        'oneToOneChat',
        'MyXmlStore1'
    ],
    views: [
        'MyNavigationView',
        'MyDataView11',
        'MyContainer13'
    ],
    controllers: [
        'MainController',
        'staticForm',
        'quickLink'
    ],
    name: 'tekwave',

    launch: function() {
        /////////////Tesing////////////////


        // Changes XML to JSON
        function xmlToJson(xml) {
        //console.log('xml');
        	var obj = {};

        	if (xml.nodeType == 1) {

        		if (xml.attributes.length > 0) {
        		obj["attributes"] = {};
        			for (var j = 0; j < xml.attributes.length; j++) {
        				var attribute = xml.attributes.item(j);
        				obj["attributes"][attribute.nodeName] = attribute.value;//nodeValue
        			}
        		}
        	} else if (xml.nodeType == 3) { // text
        		obj = xml.nodeValue;
        	}

        	// do children
        	if (xml.hasChildNodes()) {
        		for(var i = 0; i < xml.childNodes.length; i++) {
        			var item = xml.childNodes.item(i);
        			var nodeName = item.nodeName;
        			if (typeof(obj[nodeName]) == "undefined") {
        				obj[nodeName] = xmlToJson(item);
        			} else {
        				if (typeof(obj[nodeName].push) == "undefined") {
        					var old = obj[nodeName];
        					obj[nodeName] = [];
        					obj[nodeName].push(old);
        				}
        				obj[nodeName].push(xmlToJson(item));
        			}
        		}
        	}
           // console.log('returning');
           // console.log(obj);
        	return obj;
        };
              /////////



        var urls='http://sb.tekcontrol-site.com:8070/tekwave-portlet/api/loginsettingspermissions/userid/19101/siteid/81625/postid/840/incident/true/tour/true/compliance/true/logistics/true/visitor/true/dargs/true/incgs/true/progressive/true/postinspec/true/dar/true';

        Ext.Ajax.request({
              //url: 'http://dev.tekcontrol-site.com:8080/tekwave-portlet/api/mobilelogin/leebee/leebee',
              url: urls,
           //   url: '../leebee_loginSuccess_1 Aug.xml',
              // method: 'POST',
              //   useDefaultXhrHeader: false,
              headers: {
                   //  tokenKey : tekwave.app.tokenValue
                   'TWApiAuthToken' : tekwave.app.tokenValue
                    },
              success: function(response, opts) {

                 // alert('login success');
                 // console.log(Ext.util.JSON.decode(response.responseText));


                   var text = response.responseText;
                  try { // code for IE
        			var xml = new ActiveXObject("Microsoft.XMLDOM");
        			xml.async = "false";
        		    // console.log(xml.loadXML(text));
                    //  alert('xml Dom');
        		}catch(error) { // code for Mozilla, Firefox, Opera, etc.
        			try {
        				var parser = new DOMParser();
        				var xml = parser.parseFromString(text,"text/xml");
                       // console.log(xml);
                     //   alert('dom parser');
        			}catch(error) {
        				alert(error.message);
        				return;
        			}
        		}

                  Ext.defer(function(){
                    // var loginResponse= tekwave.app.getControllerInstances()['tekwave.controller.quickLink'].xmlToJson(xml);

                  },50);


                  var loginResponse=xmlToJson(xml);
                  alert('login2');
          console.log(loginResponse );
         //

              },
                failure : function(err){
                 //   Ext.Viewport.setMasked(false);
                  //  Ext.Msg.alert('Error','Unable to Connect !');
                    console.log(err);
                }
        });//End Ajax Request Login API

        //////////////////End Testing////////////

        tekwave.app.webService='http://dev.tekcontrol-site.com:8080/tekwave-portlet/api/';
        tekwave.app.tokenKey='TWApiAuthToken';
        tekwave.app.tokenValue='f0ffa2e8-1b92-4ca0-bf85-4679633695e0';




        tekwave.app.lastActiveIndex=0;
        tekwave.app.UserId='adam';
        Ext.Viewport.getLayout().setAnimation(null);


        tekwave.app.History=[];
          tekwave.app.backPressed=false;

                if (Ext.os.is('Android')) {
        document.addEventListener("backbutton", Ext.bind(onBackKeyDown, this), false);

                    function onBackKeyDown(eve) {

                        eve.preventDefault();

                       console.log('back pressed !');
                            tekwave.app.backPressed=true;
                            if(tekwave.app.History.length===0){
                                 navigator.app.exitApp(); //Exit App
                           }else{



                        var lastPaneId = tekwave.app.History[tekwave.app.History.length-1];
                       // console.log('lastPaneId  ++ '+lastPaneId);
                       // Ext.getCmp('navMainView').setActiveItem(Ext.getCmp(lastPaneId));
                        Ext.getCmp('navMainView').animateActiveItem(Ext.getCmp(lastPaneId), {
                            type: 'slide',
                            direction: 'right'
                        });

                        tekwave.app.History.pop();
                       // console.log(tekwave.app.History);
                               tekwave.app.backPressed=false;
                            }


                    }
                }




         if (Ext.os.is.iOS && Ext.os.version.major >= 7) {

                    //document.getElementsByClassName(".x-toolbar");
                    //  Ext.select(".x-toolbar").applyStyles("height: 100px; "); //not needed
                    document.body.style.marginTop = "20px";

                    Ext.Viewport.setHeight(Ext.Viewport.getWindowHeight() - 20);


                }

        /////////////////







        var db = openDatabase('tekwave', '1.0', 'SNI DB', 4 * 1024 * 1024);

        db.transaction(function (tx) {

            tx.executeSql('CREATE TABLE IF NOT EXISTS quickLink (id INTEGER PRIMARY KEY AUTOINCREMENT, isQuickLink, quickLinkScreen)');
        // tx.executeSql("INSERT INTO "+'quickLink'+" (isQuickLink, quickLinkScreen) VALUES (?,? )",[true, 'incedentScreen']);


        });



        //setInterval(function(){

        db.transaction(function (tx) {
            tx.executeSql('SELECT * FROM quickLink', [], function (tx, results) {
                var len = results.rows.length, i;

           //   alert(len);
                if(len===0){
             //       tx.executeSql("INSERT INTO "+'quickLink'+" (isQuickLink, quickLinkScreen) VALUES (?,? )",[true, 'incedentScreen']);
                }


                for (i = 0; i < len; i++){
                    console.log(results.rows.item(i).quickLinkScreen);

                    /*
                    Ext.getStore('deal').add([{
                        id : results.rows.item(i).id,
                        name: results.rows.item(i).name,
                        CreatedDate: results.rows.item(i).CreatedDate

                    }]);

                    Ext.getStore('deal').sync();
                    //  console.log(Ext.getStore('deal').data.all[i].data);
                    sorters2 = [ {
                        property: 'id',
                        direction: 'DESC'
                    }];
                    store = Ext.getStore('deal');
                    //use second sorters
                      store.sort(sorters2);

                    console.log(store);
                    */
                }

            }, null);
        });

        //},10000);


        tekwave.app.db=db;

        ////////////////////////////////////////////////////////////////////////////////////////////////////

        document.addEventListener("deviceready", onDeviceReady, false);

        function onDeviceReady() {
          //  alert ('dready');
          //  window.plugins.ChildBrowser.showWebPage('http://www.google.com',   { showLocationBar: true });

           // cordova.exec(null, null, "InAppBrowser", "open", ['http://www.google.com',  null]);
        //cordova.exec(null, null, "ChildBrowser", "showWebPage", ['http://www.google.com',  { showLocationBar: true }]);
           //  window.plugins.ChildBrowser.showWebPage('www.google.com',{ showLocationBar: true });

        }



        /*

         function onDeviceReady() {
        alert('dReady');

        if (Ext.os.is.iOS){

            navigator.startApp.start("clock:", function(message) {
            console.log(message); // => OK
        },
        function(error) {
            console.log('47', error);
        });
        }else if(Ext.os.name==='Android'){

        navigator.startApp.start("com.android.alarm", function(message) {
            console.log(message); // => OK
        },
        function(error) {
            console.log('47', error);
        });


        }
         }//End Device Ready


        */




        Ext.create('tekwave.view.MyNavigationView', {fullscreen: true});
    }

});
